// Code generated by protoc-gen-go.
// source: bnet/protocol/risk.proto
// DO NOT EDIT!

/*
Package bnet_protocol_risk is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/risk.proto

It has these top-level messages:
	EntityId
	ReportMeterEventResponse
	Variant
	Attribute
	ReportMeterEventRequest
*/
package bnet_protocol_risk

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type EntityId struct {
	High             *uint64 `protobuf:"fixed64,1,opt,name=high" json:"high,omitempty"`
	Low              *uint64 `protobuf:"fixed64,2,opt,name=low" json:"low,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntityId) Reset()         { *m = EntityId{} }
func (m *EntityId) String() string { return proto.CompactTextString(m) }
func (*EntityId) ProtoMessage()    {}

func (m *EntityId) GetHigh() uint64 {
	if m != nil && m.High != nil {
		return *m.High
	}
	return 0
}

func (m *EntityId) GetLow() uint64 {
	if m != nil && m.Low != nil {
		return *m.Low
	}
	return 0
}

type ReportMeterEventResponse struct {
	PenaltySecs      *uint64 `protobuf:"varint,1,opt,name=penalty_secs" json:"penalty_secs,omitempty"`
	Threshold        *uint64 `protobuf:"varint,2,opt,name=threshold" json:"threshold,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ReportMeterEventResponse) Reset()         { *m = ReportMeterEventResponse{} }
func (m *ReportMeterEventResponse) String() string { return proto.CompactTextString(m) }
func (*ReportMeterEventResponse) ProtoMessage()    {}

func (m *ReportMeterEventResponse) GetPenaltySecs() uint64 {
	if m != nil && m.PenaltySecs != nil {
		return *m.PenaltySecs
	}
	return 0
}

func (m *ReportMeterEventResponse) GetThreshold() uint64 {
	if m != nil && m.Threshold != nil {
		return *m.Threshold
	}
	return 0
}

type Variant struct {
	BoolValue        *bool     `protobuf:"varint,2,opt,name=bool_value" json:"bool_value,omitempty"`
	IntValue         *int64    `protobuf:"varint,3,opt,name=int_value" json:"int_value,omitempty"`
	FloatValue       *float64  `protobuf:"fixed64,4,opt,name=float_value" json:"float_value,omitempty"`
	StringValue      *string   `protobuf:"bytes,5,opt,name=string_value" json:"string_value,omitempty"`
	BlobValue        []byte    `protobuf:"bytes,6,opt,name=blob_value" json:"blob_value,omitempty"`
	MessageValue     []byte    `protobuf:"bytes,7,opt,name=message_value" json:"message_value,omitempty"`
	FourccValue      *string   `protobuf:"bytes,8,opt,name=fourcc_value" json:"fourcc_value,omitempty"`
	UintValue        *uint64   `protobuf:"varint,9,opt,name=uint_value" json:"uint_value,omitempty"`
	EntityidValue    *EntityId `protobuf:"bytes,10,opt,name=entityid_value" json:"entityid_value,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Variant) Reset()         { *m = Variant{} }
func (m *Variant) String() string { return proto.CompactTextString(m) }
func (*Variant) ProtoMessage()    {}

func (m *Variant) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *Variant) GetIntValue() int64 {
	if m != nil && m.IntValue != nil {
		return *m.IntValue
	}
	return 0
}

func (m *Variant) GetFloatValue() float64 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

func (m *Variant) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *Variant) GetBlobValue() []byte {
	if m != nil {
		return m.BlobValue
	}
	return nil
}

func (m *Variant) GetMessageValue() []byte {
	if m != nil {
		return m.MessageValue
	}
	return nil
}

func (m *Variant) GetFourccValue() string {
	if m != nil && m.FourccValue != nil {
		return *m.FourccValue
	}
	return ""
}

func (m *Variant) GetUintValue() uint64 {
	if m != nil && m.UintValue != nil {
		return *m.UintValue
	}
	return 0
}

func (m *Variant) GetEntityidValue() *EntityId {
	if m != nil {
		return m.EntityidValue
	}
	return nil
}

type Attribute struct {
	Name             *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value            *Variant `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Attribute) Reset()         { *m = Attribute{} }
func (m *Attribute) String() string { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()    {}

func (m *Attribute) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Attribute) GetValue() *Variant {
	if m != nil {
		return m.Value
	}
	return nil
}

type ReportMeterEventRequest struct {
	MeterType             *uint32      `protobuf:"fixed32,1,opt,name=meter_type" json:"meter_type,omitempty"`
	EventType             *string      `protobuf:"bytes,2,opt,name=event_type" json:"event_type,omitempty"`
	Object                *string      `protobuf:"bytes,3,opt,name=object" json:"object,omitempty"`
	AdditionalPenaltySecs *uint64      `protobuf:"varint,4,opt,name=additional_penalty_secs" json:"additional_penalty_secs,omitempty"`
	Attribute             []*Attribute `protobuf:"bytes,5,rep,name=attribute" json:"attribute,omitempty"`
	XXX_unrecognized      []byte       `json:"-"`
}

func (m *ReportMeterEventRequest) Reset()         { *m = ReportMeterEventRequest{} }
func (m *ReportMeterEventRequest) String() string { return proto.CompactTextString(m) }
func (*ReportMeterEventRequest) ProtoMessage()    {}

func (m *ReportMeterEventRequest) GetMeterType() uint32 {
	if m != nil && m.MeterType != nil {
		return *m.MeterType
	}
	return 0
}

func (m *ReportMeterEventRequest) GetEventType() string {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return ""
}

func (m *ReportMeterEventRequest) GetObject() string {
	if m != nil && m.Object != nil {
		return *m.Object
	}
	return ""
}

func (m *ReportMeterEventRequest) GetAdditionalPenaltySecs() uint64 {
	if m != nil && m.AdditionalPenaltySecs != nil {
		return *m.AdditionalPenaltySecs
	}
	return 0
}

func (m *ReportMeterEventRequest) GetAttribute() []*Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func init() {
}
