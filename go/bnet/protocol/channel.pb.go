// Code generated by protoc-gen-go.
// source: bnet/protocol/channel.proto
// DO NOT EDIT!

/*
Package bnet_protocol_channel is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol/channel.proto

It has these top-level messages:
	GetChannelIdRequest
	SubscribeChannelResponse
	CreateChannelResponse
	DissolveRequest
	FindChannelOptions
	GetChannelIdResponse
	GetChannelInfoRequest
	JoinChannelResponse
	LeaveNotification
	MemberState
	Message
	RemoveMemberRequest
	RemoveNotification
	SendMessageNotification
	SendMessageRequest
	SetRolesRequest
	SubscribeChannelRequest
	UnsubscribeMemberRequest
	AddMemberRequest
	FindChannelRequest
	JoinChannelRequest
	Member
	JoinNotification
	UpdateMemberStateNotification
	UpdateMemberStateRequest
	ChannelState
	AddNotification
	ChannelDescription
	ChannelInfo
	CreateChannelRequest
	FindChannelResponse
	GetChannelInfoResponse
	UpdateChannelStateNotification
	UpdateChannelStateRequest
*/
package bnet_protocol_channel

import proto "github.com/golang/protobuf/proto"
import math "math"
import bnet_protocol "bnet"
import bnet_protocol_attribute "bnet/protocol"
import bnet_protocol_invitation "bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ChannelState_PrivacyLevel int32

const (
	ChannelState_PRIVACY_LEVEL_OPEN                       ChannelState_PrivacyLevel = 1
	ChannelState_PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND ChannelState_PrivacyLevel = 2
	ChannelState_PRIVACY_LEVEL_OPEN_INVITATION            ChannelState_PrivacyLevel = 3
	ChannelState_PRIVACY_LEVEL_CLOSED                     ChannelState_PrivacyLevel = 4
)

var ChannelState_PrivacyLevel_name = map[int32]string{
	1: "PRIVACY_LEVEL_OPEN",
	2: "PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND",
	3: "PRIVACY_LEVEL_OPEN_INVITATION",
	4: "PRIVACY_LEVEL_CLOSED",
}
var ChannelState_PrivacyLevel_value = map[string]int32{
	"PRIVACY_LEVEL_OPEN":                       1,
	"PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND": 2,
	"PRIVACY_LEVEL_OPEN_INVITATION":            3,
	"PRIVACY_LEVEL_CLOSED":                     4,
}

func (x ChannelState_PrivacyLevel) Enum() *ChannelState_PrivacyLevel {
	p := new(ChannelState_PrivacyLevel)
	*p = x
	return p
}
func (x ChannelState_PrivacyLevel) String() string {
	return proto.EnumName(ChannelState_PrivacyLevel_name, int32(x))
}
func (x *ChannelState_PrivacyLevel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChannelState_PrivacyLevel_value, data, "ChannelState_PrivacyLevel")
	if err != nil {
		return err
	}
	*x = ChannelState_PrivacyLevel(value)
	return nil
}

type GetChannelIdRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetChannelIdRequest) Reset()         { *m = GetChannelIdRequest{} }
func (m *GetChannelIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetChannelIdRequest) ProtoMessage()    {}

type SubscribeChannelResponse struct {
	ObjectId         *uint64 `protobuf:"varint,1,opt,name=object_id" json:"object_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubscribeChannelResponse) Reset()         { *m = SubscribeChannelResponse{} }
func (m *SubscribeChannelResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeChannelResponse) ProtoMessage()    {}

func (m *SubscribeChannelResponse) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

type CreateChannelResponse struct {
	ObjectId         *uint64                 `protobuf:"varint,1,opt,name=object_id" json:"object_id,omitempty"`
	ChannelId        *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CreateChannelResponse) Reset()         { *m = CreateChannelResponse{} }
func (m *CreateChannelResponse) String() string { return proto.CompactTextString(m) }
func (*CreateChannelResponse) ProtoMessage()    {}

func (m *CreateChannelResponse) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *CreateChannelResponse) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

type DissolveRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	Reason           *uint32                 `protobuf:"varint,2,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *DissolveRequest) Reset()         { *m = DissolveRequest{} }
func (m *DissolveRequest) String() string { return proto.CompactTextString(m) }
func (*DissolveRequest) ProtoMessage()    {}

func (m *DissolveRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *DissolveRequest) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type FindChannelOptions struct {
	StartIndex       *uint32                                  `protobuf:"varint,1,opt,name=start_index" json:"start_index,omitempty"`
	MaxResults       *uint32                                  `protobuf:"varint,2,opt,name=max_results,def=16" json:"max_results,omitempty"`
	Name             *string                                  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Program          *uint32                                  `protobuf:"fixed32,4,opt,name=program" json:"program,omitempty"`
	Locale           *uint32                                  `protobuf:"fixed32,5,opt,name=locale" json:"locale,omitempty"`
	CapacityFull     *uint32                                  `protobuf:"varint,6,opt,name=capacity_full" json:"capacity_full,omitempty"`
	AttributeFilter  *bnet_protocol_attribute.AttributeFilter `protobuf:"bytes,7,opt,name=attribute_filter" json:"attribute_filter,omitempty"`
	ChannelType      *string                                  `protobuf:"bytes,8,opt,name=channel_type" json:"channel_type,omitempty"`
	XXX_extensions   map[int32]proto.Extension                `json:"-"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *FindChannelOptions) Reset()         { *m = FindChannelOptions{} }
func (m *FindChannelOptions) String() string { return proto.CompactTextString(m) }
func (*FindChannelOptions) ProtoMessage()    {}

var extRange_FindChannelOptions = []proto.ExtensionRange{
	{100, 10000},
}

func (*FindChannelOptions) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_FindChannelOptions
}
func (m *FindChannelOptions) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

const Default_FindChannelOptions_MaxResults uint32 = 16

func (m *FindChannelOptions) GetStartIndex() uint32 {
	if m != nil && m.StartIndex != nil {
		return *m.StartIndex
	}
	return 0
}

func (m *FindChannelOptions) GetMaxResults() uint32 {
	if m != nil && m.MaxResults != nil {
		return *m.MaxResults
	}
	return Default_FindChannelOptions_MaxResults
}

func (m *FindChannelOptions) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FindChannelOptions) GetProgram() uint32 {
	if m != nil && m.Program != nil {
		return *m.Program
	}
	return 0
}

func (m *FindChannelOptions) GetLocale() uint32 {
	if m != nil && m.Locale != nil {
		return *m.Locale
	}
	return 0
}

func (m *FindChannelOptions) GetCapacityFull() uint32 {
	if m != nil && m.CapacityFull != nil {
		return *m.CapacityFull
	}
	return 0
}

func (m *FindChannelOptions) GetAttributeFilter() *bnet_protocol_attribute.AttributeFilter {
	if m != nil {
		return m.AttributeFilter
	}
	return nil
}

func (m *FindChannelOptions) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return ""
}

type GetChannelIdResponse struct {
	ChannelId        *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetChannelIdResponse) Reset()         { *m = GetChannelIdResponse{} }
func (m *GetChannelIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetChannelIdResponse) ProtoMessage()    {}

func (m *GetChannelIdResponse) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

type GetChannelInfoRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	ChannelId        *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	FetchState       *bool                   `protobuf:"varint,3,opt,name=fetch_state" json:"fetch_state,omitempty"`
	FetchMembers     *bool                   `protobuf:"varint,4,opt,name=fetch_members" json:"fetch_members,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetChannelInfoRequest) Reset()         { *m = GetChannelInfoRequest{} }
func (m *GetChannelInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetChannelInfoRequest) ProtoMessage()    {}

func (m *GetChannelInfoRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *GetChannelInfoRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *GetChannelInfoRequest) GetFetchState() bool {
	if m != nil && m.FetchState != nil {
		return *m.FetchState
	}
	return false
}

func (m *GetChannelInfoRequest) GetFetchMembers() bool {
	if m != nil && m.FetchMembers != nil {
		return *m.FetchMembers
	}
	return false
}

type JoinChannelResponse struct {
	ObjectId                *uint64                   `protobuf:"varint,1,opt,name=object_id" json:"object_id,omitempty"`
	RequireFriendValidation *bool                     `protobuf:"varint,2,opt,name=require_friend_validation" json:"require_friend_validation,omitempty"`
	PrivilegedAccount       []*bnet_protocol.EntityId `protobuf:"bytes,3,rep,name=privileged_account" json:"privileged_account,omitempty"`
	XXX_unrecognized        []byte                    `json:"-"`
}

func (m *JoinChannelResponse) Reset()         { *m = JoinChannelResponse{} }
func (m *JoinChannelResponse) String() string { return proto.CompactTextString(m) }
func (*JoinChannelResponse) ProtoMessage()    {}

func (m *JoinChannelResponse) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *JoinChannelResponse) GetRequireFriendValidation() bool {
	if m != nil && m.RequireFriendValidation != nil {
		return *m.RequireFriendValidation
	}
	return false
}

func (m *JoinChannelResponse) GetPrivilegedAccount() []*bnet_protocol.EntityId {
	if m != nil {
		return m.PrivilegedAccount
	}
	return nil
}

type LeaveNotification struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	MemberId         *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id" json:"member_id,omitempty"`
	Reason           *uint32                 `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *LeaveNotification) Reset()         { *m = LeaveNotification{} }
func (m *LeaveNotification) String() string { return proto.CompactTextString(m) }
func (*LeaveNotification) ProtoMessage()    {}

func (m *LeaveNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *LeaveNotification) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

func (m *LeaveNotification) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type MemberState struct {
	Attribute        []*bnet_protocol_attribute.Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
	Role             []uint32                             `protobuf:"varint,2,rep,name=role" json:"role,omitempty"`
	Privileges       *uint64                              `protobuf:"varint,3,opt,name=privileges" json:"privileges,omitempty"`
	Info             *bnet_protocol.AccountInfo           `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
	Hidden           *bool                                `protobuf:"varint,5,opt,name=hidden" json:"hidden,omitempty"`
	XXX_extensions   map[int32]proto.Extension            `json:"-"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *MemberState) Reset()         { *m = MemberState{} }
func (m *MemberState) String() string { return proto.CompactTextString(m) }
func (*MemberState) ProtoMessage()    {}

var extRange_MemberState = []proto.ExtensionRange{
	{100, 10000},
}

func (*MemberState) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_MemberState
}
func (m *MemberState) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *MemberState) GetAttribute() []*bnet_protocol_attribute.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *MemberState) GetRole() []uint32 {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *MemberState) GetPrivileges() uint64 {
	if m != nil && m.Privileges != nil {
		return *m.Privileges
	}
	return 0
}

func (m *MemberState) GetInfo() *bnet_protocol.AccountInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MemberState) GetHidden() bool {
	if m != nil && m.Hidden != nil {
		return *m.Hidden
	}
	return false
}

type Message struct {
	Attribute        []*bnet_protocol_attribute.Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
	Role             *uint32                              `protobuf:"varint,2,opt,name=role" json:"role,omitempty"`
	XXX_extensions   map[int32]proto.Extension            `json:"-"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}

var extRange_Message = []proto.ExtensionRange{
	{100, 10000},
}

func (*Message) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Message
}
func (m *Message) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *Message) GetAttribute() []*bnet_protocol_attribute.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *Message) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

type RemoveMemberRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	MemberId         *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id" json:"member_id,omitempty"`
	Reason           *uint32                 `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *RemoveMemberRequest) Reset()         { *m = RemoveMemberRequest{} }
func (m *RemoveMemberRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveMemberRequest) ProtoMessage()    {}

func (m *RemoveMemberRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *RemoveMemberRequest) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

func (m *RemoveMemberRequest) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type RemoveNotification struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	MemberId         *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id" json:"member_id,omitempty"`
	Reason           *uint32                 `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *RemoveNotification) Reset()         { *m = RemoveNotification{} }
func (m *RemoveNotification) String() string { return proto.CompactTextString(m) }
func (*RemoveNotification) ProtoMessage()    {}

func (m *RemoveNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *RemoveNotification) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

func (m *RemoveNotification) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type SendMessageNotification struct {
	AgentId            *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	Message            *Message                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	RequiredPrivileges *uint64                 `protobuf:"varint,3,opt,name=required_privileges" json:"required_privileges,omitempty"`
	XXX_unrecognized   []byte                  `json:"-"`
}

func (m *SendMessageNotification) Reset()         { *m = SendMessageNotification{} }
func (m *SendMessageNotification) String() string { return proto.CompactTextString(m) }
func (*SendMessageNotification) ProtoMessage()    {}

func (m *SendMessageNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SendMessageNotification) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SendMessageNotification) GetRequiredPrivileges() uint64 {
	if m != nil && m.RequiredPrivileges != nil {
		return *m.RequiredPrivileges
	}
	return 0
}

type SendMessageRequest struct {
	AgentId            *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	Message            *Message                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	RequiredPrivileges *uint64                 `protobuf:"varint,3,opt,name=required_privileges" json:"required_privileges,omitempty"`
	XXX_unrecognized   []byte                  `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}

func (m *SendMessageRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SendMessageRequest) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SendMessageRequest) GetRequiredPrivileges() uint64 {
	if m != nil && m.RequiredPrivileges != nil {
		return *m.RequiredPrivileges
	}
	return 0
}

type SetRolesRequest struct {
	AgentId          *bnet_protocol.EntityId   `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	Role             []uint32                  `protobuf:"varint,2,rep,name=role" json:"role,omitempty"`
	MemberId         []*bnet_protocol.EntityId `protobuf:"bytes,3,rep,name=member_id" json:"member_id,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *SetRolesRequest) Reset()         { *m = SetRolesRequest{} }
func (m *SetRolesRequest) String() string { return proto.CompactTextString(m) }
func (*SetRolesRequest) ProtoMessage()    {}

func (m *SetRolesRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SetRolesRequest) GetRole() []uint32 {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *SetRolesRequest) GetMemberId() []*bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

type SubscribeChannelRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	ChannelId        *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	ObjectId         *uint64                 `protobuf:"varint,3,opt,name=object_id" json:"object_id,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SubscribeChannelRequest) Reset()         { *m = SubscribeChannelRequest{} }
func (m *SubscribeChannelRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeChannelRequest) ProtoMessage()    {}

func (m *SubscribeChannelRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *SubscribeChannelRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *SubscribeChannelRequest) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

type UnsubscribeMemberRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	MemberId         *bnet_protocol.EntityId `protobuf:"bytes,2,opt,name=member_id" json:"member_id,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *UnsubscribeMemberRequest) Reset()         { *m = UnsubscribeMemberRequest{} }
func (m *UnsubscribeMemberRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeMemberRequest) ProtoMessage()    {}

func (m *UnsubscribeMemberRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UnsubscribeMemberRequest) GetMemberId() *bnet_protocol.EntityId {
	if m != nil {
		return m.MemberId
	}
	return nil
}

type AddMemberRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	MemberIdentity   *bnet_protocol.Identity `protobuf:"bytes,2,opt,name=member_identity" json:"member_identity,omitempty"`
	MemberState      *MemberState            `protobuf:"bytes,3,opt,name=member_state" json:"member_state,omitempty"`
	ObjectId         *uint64                 `protobuf:"varint,4,opt,name=object_id" json:"object_id,omitempty"`
	Subscribe        *bool                   `protobuf:"varint,5,opt,name=subscribe,def=1" json:"subscribe,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *AddMemberRequest) Reset()         { *m = AddMemberRequest{} }
func (m *AddMemberRequest) String() string { return proto.CompactTextString(m) }
func (*AddMemberRequest) ProtoMessage()    {}

const Default_AddMemberRequest_Subscribe bool = true

func (m *AddMemberRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *AddMemberRequest) GetMemberIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.MemberIdentity
	}
	return nil
}

func (m *AddMemberRequest) GetMemberState() *MemberState {
	if m != nil {
		return m.MemberState
	}
	return nil
}

func (m *AddMemberRequest) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *AddMemberRequest) GetSubscribe() bool {
	if m != nil && m.Subscribe != nil {
		return *m.Subscribe
	}
	return Default_AddMemberRequest_Subscribe
}

type FindChannelRequest struct {
	AgentIdentity    *bnet_protocol.Identity `protobuf:"bytes,1,opt,name=agent_identity" json:"agent_identity,omitempty"`
	Options          *FindChannelOptions     `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *FindChannelRequest) Reset()         { *m = FindChannelRequest{} }
func (m *FindChannelRequest) String() string { return proto.CompactTextString(m) }
func (*FindChannelRequest) ProtoMessage()    {}

func (m *FindChannelRequest) GetAgentIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.AgentIdentity
	}
	return nil
}

func (m *FindChannelRequest) GetOptions() *FindChannelOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type JoinChannelRequest struct {
	AgentIdentity    *bnet_protocol.Identity   `protobuf:"bytes,1,opt,name=agent_identity" json:"agent_identity,omitempty"`
	MemberState      *MemberState              `protobuf:"bytes,2,opt,name=member_state" json:"member_state,omitempty"`
	ChannelId        *bnet_protocol.EntityId   `protobuf:"bytes,3,opt,name=channel_id" json:"channel_id,omitempty"`
	ObjectId         *uint64                   `protobuf:"varint,4,opt,name=object_id" json:"object_id,omitempty"`
	FriendAccountId  []*bnet_protocol.EntityId `protobuf:"bytes,5,rep,name=friend_account_id" json:"friend_account_id,omitempty"`
	LocalSubscriber  *bool                     `protobuf:"varint,6,opt,name=local_subscriber,def=1" json:"local_subscriber,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *JoinChannelRequest) Reset()         { *m = JoinChannelRequest{} }
func (m *JoinChannelRequest) String() string { return proto.CompactTextString(m) }
func (*JoinChannelRequest) ProtoMessage()    {}

const Default_JoinChannelRequest_LocalSubscriber bool = true

func (m *JoinChannelRequest) GetAgentIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.AgentIdentity
	}
	return nil
}

func (m *JoinChannelRequest) GetMemberState() *MemberState {
	if m != nil {
		return m.MemberState
	}
	return nil
}

func (m *JoinChannelRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *JoinChannelRequest) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *JoinChannelRequest) GetFriendAccountId() []*bnet_protocol.EntityId {
	if m != nil {
		return m.FriendAccountId
	}
	return nil
}

func (m *JoinChannelRequest) GetLocalSubscriber() bool {
	if m != nil && m.LocalSubscriber != nil {
		return *m.LocalSubscriber
	}
	return Default_JoinChannelRequest_LocalSubscriber
}

type Member struct {
	Identity         *bnet_protocol.Identity `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	State            *MemberState            `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}

func (m *Member) GetIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Member) GetState() *MemberState {
	if m != nil {
		return m.State
	}
	return nil
}

type JoinNotification struct {
	Member           *Member `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *JoinNotification) Reset()         { *m = JoinNotification{} }
func (m *JoinNotification) String() string { return proto.CompactTextString(m) }
func (*JoinNotification) ProtoMessage()    {}

func (m *JoinNotification) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

type UpdateMemberStateNotification struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	StateChange      []*Member               `protobuf:"bytes,2,rep,name=state_change" json:"state_change,omitempty"`
	RemovedRole      []uint32                `protobuf:"varint,3,rep,name=removed_role" json:"removed_role,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *UpdateMemberStateNotification) Reset()         { *m = UpdateMemberStateNotification{} }
func (m *UpdateMemberStateNotification) String() string { return proto.CompactTextString(m) }
func (*UpdateMemberStateNotification) ProtoMessage()    {}

func (m *UpdateMemberStateNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateMemberStateNotification) GetStateChange() []*Member {
	if m != nil {
		return m.StateChange
	}
	return nil
}

func (m *UpdateMemberStateNotification) GetRemovedRole() []uint32 {
	if m != nil {
		return m.RemovedRole
	}
	return nil
}

type UpdateMemberStateRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	StateChange      []*Member               `protobuf:"bytes,2,rep,name=state_change" json:"state_change,omitempty"`
	RemovedRole      []uint32                `protobuf:"varint,3,rep,name=removed_role" json:"removed_role,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *UpdateMemberStateRequest) Reset()         { *m = UpdateMemberStateRequest{} }
func (m *UpdateMemberStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateMemberStateRequest) ProtoMessage()    {}

func (m *UpdateMemberStateRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateMemberStateRequest) GetStateChange() []*Member {
	if m != nil {
		return m.StateChange
	}
	return nil
}

func (m *UpdateMemberStateRequest) GetRemovedRole() []uint32 {
	if m != nil {
		return m.RemovedRole
	}
	return nil
}

type ChannelState struct {
	MaxMembers          *uint32                                `protobuf:"varint,1,opt,name=max_members" json:"max_members,omitempty"`
	MinMembers          *uint32                                `protobuf:"varint,2,opt,name=min_members" json:"min_members,omitempty"`
	Attribute           []*bnet_protocol_attribute.Attribute   `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
	Invitation          []*bnet_protocol_invitation.Invitation `protobuf:"bytes,4,rep,name=invitation" json:"invitation,omitempty"`
	MaxInvitations      *uint32                                `protobuf:"varint,5,opt,name=max_invitations" json:"max_invitations,omitempty"`
	Reason              *uint32                                `protobuf:"varint,6,opt,name=reason" json:"reason,omitempty"`
	PrivacyLevel        *ChannelState_PrivacyLevel             `protobuf:"varint,7,opt,name=privacy_level,enum=bnet.protocol.channel.ChannelState_PrivacyLevel,def=1" json:"privacy_level,omitempty"`
	Name                *string                                `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	DelegateName        *string                                `protobuf:"bytes,9,opt,name=delegate_name" json:"delegate_name,omitempty"`
	ChannelType         *string                                `protobuf:"bytes,10,opt,name=channel_type,def=default" json:"channel_type,omitempty"`
	Program             *uint32                                `protobuf:"fixed32,11,opt,name=program" json:"program,omitempty"`
	AllowOfflineMembers *bool                                  `protobuf:"varint,12,opt,name=allow_offline_members" json:"allow_offline_members,omitempty"`
	SubscribeToPresence *bool                                  `protobuf:"varint,13,opt,name=subscribe_to_presence,def=1" json:"subscribe_to_presence,omitempty"`
	XXX_extensions      map[int32]proto.Extension              `json:"-"`
	XXX_unrecognized    []byte                                 `json:"-"`
}

func (m *ChannelState) Reset()         { *m = ChannelState{} }
func (m *ChannelState) String() string { return proto.CompactTextString(m) }
func (*ChannelState) ProtoMessage()    {}

var extRange_ChannelState = []proto.ExtensionRange{
	{100, 10000},
}

func (*ChannelState) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChannelState
}
func (m *ChannelState) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

const Default_ChannelState_PrivacyLevel ChannelState_PrivacyLevel = ChannelState_PRIVACY_LEVEL_OPEN
const Default_ChannelState_ChannelType string = "default"
const Default_ChannelState_SubscribeToPresence bool = true

func (m *ChannelState) GetMaxMembers() uint32 {
	if m != nil && m.MaxMembers != nil {
		return *m.MaxMembers
	}
	return 0
}

func (m *ChannelState) GetMinMembers() uint32 {
	if m != nil && m.MinMembers != nil {
		return *m.MinMembers
	}
	return 0
}

func (m *ChannelState) GetAttribute() []*bnet_protocol_attribute.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *ChannelState) GetInvitation() []*bnet_protocol_invitation.Invitation {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *ChannelState) GetMaxInvitations() uint32 {
	if m != nil && m.MaxInvitations != nil {
		return *m.MaxInvitations
	}
	return 0
}

func (m *ChannelState) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

func (m *ChannelState) GetPrivacyLevel() ChannelState_PrivacyLevel {
	if m != nil && m.PrivacyLevel != nil {
		return *m.PrivacyLevel
	}
	return Default_ChannelState_PrivacyLevel
}

func (m *ChannelState) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ChannelState) GetDelegateName() string {
	if m != nil && m.DelegateName != nil {
		return *m.DelegateName
	}
	return ""
}

func (m *ChannelState) GetChannelType() string {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_ChannelState_ChannelType
}

func (m *ChannelState) GetProgram() uint32 {
	if m != nil && m.Program != nil {
		return *m.Program
	}
	return 0
}

func (m *ChannelState) GetAllowOfflineMembers() bool {
	if m != nil && m.AllowOfflineMembers != nil {
		return *m.AllowOfflineMembers
	}
	return false
}

func (m *ChannelState) GetSubscribeToPresence() bool {
	if m != nil && m.SubscribeToPresence != nil {
		return *m.SubscribeToPresence
	}
	return Default_ChannelState_SubscribeToPresence
}

type AddNotification struct {
	Self             *Member       `protobuf:"bytes,1,opt,name=self" json:"self,omitempty"`
	Member           []*Member     `protobuf:"bytes,2,rep,name=member" json:"member,omitempty"`
	ChannelState     *ChannelState `protobuf:"bytes,3,opt,name=channel_state" json:"channel_state,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *AddNotification) Reset()         { *m = AddNotification{} }
func (m *AddNotification) String() string { return proto.CompactTextString(m) }
func (*AddNotification) ProtoMessage()    {}

func (m *AddNotification) GetSelf() *Member {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *AddNotification) GetMember() []*Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *AddNotification) GetChannelState() *ChannelState {
	if m != nil {
		return m.ChannelState
	}
	return nil
}

type ChannelDescription struct {
	ChannelId        *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=channel_id" json:"channel_id,omitempty"`
	CurrentMembers   *uint32                 `protobuf:"varint,2,opt,name=current_members" json:"current_members,omitempty"`
	State            *ChannelState           `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ChannelDescription) Reset()         { *m = ChannelDescription{} }
func (m *ChannelDescription) String() string { return proto.CompactTextString(m) }
func (*ChannelDescription) ProtoMessage()    {}

func (m *ChannelDescription) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *ChannelDescription) GetCurrentMembers() uint32 {
	if m != nil && m.CurrentMembers != nil {
		return *m.CurrentMembers
	}
	return 0
}

func (m *ChannelDescription) GetState() *ChannelState {
	if m != nil {
		return m.State
	}
	return nil
}

type ChannelInfo struct {
	Description      *ChannelDescription       `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Member           []*Member                 `protobuf:"bytes,2,rep,name=member" json:"member,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ChannelInfo) Reset()         { *m = ChannelInfo{} }
func (m *ChannelInfo) String() string { return proto.CompactTextString(m) }
func (*ChannelInfo) ProtoMessage()    {}

var extRange_ChannelInfo = []proto.ExtensionRange{
	{100, 10000},
}

func (*ChannelInfo) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_ChannelInfo
}
func (m *ChannelInfo) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *ChannelInfo) GetDescription() *ChannelDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ChannelInfo) GetMember() []*Member {
	if m != nil {
		return m.Member
	}
	return nil
}

type CreateChannelRequest struct {
	AgentIdentity    *bnet_protocol.Identity `protobuf:"bytes,1,opt,name=agent_identity" json:"agent_identity,omitempty"`
	MemberState      *MemberState            `protobuf:"bytes,2,opt,name=member_state" json:"member_state,omitempty"`
	ChannelState     *ChannelState           `protobuf:"bytes,3,opt,name=channel_state" json:"channel_state,omitempty"`
	ChannelId        *bnet_protocol.EntityId `protobuf:"bytes,4,opt,name=channel_id" json:"channel_id,omitempty"`
	ObjectId         *uint64                 `protobuf:"varint,5,opt,name=object_id" json:"object_id,omitempty"`
	LocalAgent       *bnet_protocol.EntityId `protobuf:"bytes,6,opt,name=local_agent" json:"local_agent,omitempty"`
	LocalMemberState *MemberState            `protobuf:"bytes,7,opt,name=local_member_state" json:"local_member_state,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CreateChannelRequest) Reset()         { *m = CreateChannelRequest{} }
func (m *CreateChannelRequest) String() string { return proto.CompactTextString(m) }
func (*CreateChannelRequest) ProtoMessage()    {}

func (m *CreateChannelRequest) GetAgentIdentity() *bnet_protocol.Identity {
	if m != nil {
		return m.AgentIdentity
	}
	return nil
}

func (m *CreateChannelRequest) GetMemberState() *MemberState {
	if m != nil {
		return m.MemberState
	}
	return nil
}

func (m *CreateChannelRequest) GetChannelState() *ChannelState {
	if m != nil {
		return m.ChannelState
	}
	return nil
}

func (m *CreateChannelRequest) GetChannelId() *bnet_protocol.EntityId {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *CreateChannelRequest) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *CreateChannelRequest) GetLocalAgent() *bnet_protocol.EntityId {
	if m != nil {
		return m.LocalAgent
	}
	return nil
}

func (m *CreateChannelRequest) GetLocalMemberState() *MemberState {
	if m != nil {
		return m.LocalMemberState
	}
	return nil
}

type FindChannelResponse struct {
	Channel          []*ChannelDescription `protobuf:"bytes,1,rep,name=channel" json:"channel,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *FindChannelResponse) Reset()         { *m = FindChannelResponse{} }
func (m *FindChannelResponse) String() string { return proto.CompactTextString(m) }
func (*FindChannelResponse) ProtoMessage()    {}

func (m *FindChannelResponse) GetChannel() []*ChannelDescription {
	if m != nil {
		return m.Channel
	}
	return nil
}

type GetChannelInfoResponse struct {
	ChannelInfo      *ChannelInfo `protobuf:"bytes,1,opt,name=channel_info" json:"channel_info,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GetChannelInfoResponse) Reset()         { *m = GetChannelInfoResponse{} }
func (m *GetChannelInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetChannelInfoResponse) ProtoMessage()    {}

func (m *GetChannelInfoResponse) GetChannelInfo() *ChannelInfo {
	if m != nil {
		return m.ChannelInfo
	}
	return nil
}

type UpdateChannelStateNotification struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	StateChange      *ChannelState           `protobuf:"bytes,2,opt,name=state_change" json:"state_change,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *UpdateChannelStateNotification) Reset()         { *m = UpdateChannelStateNotification{} }
func (m *UpdateChannelStateNotification) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelStateNotification) ProtoMessage()    {}

func (m *UpdateChannelStateNotification) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateChannelStateNotification) GetStateChange() *ChannelState {
	if m != nil {
		return m.StateChange
	}
	return nil
}

type UpdateChannelStateRequest struct {
	AgentId          *bnet_protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id" json:"agent_id,omitempty"`
	StateChange      *ChannelState           `protobuf:"bytes,2,opt,name=state_change" json:"state_change,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *UpdateChannelStateRequest) Reset()         { *m = UpdateChannelStateRequest{} }
func (m *UpdateChannelStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateChannelStateRequest) ProtoMessage()    {}

func (m *UpdateChannelStateRequest) GetAgentId() *bnet_protocol.EntityId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *UpdateChannelStateRequest) GetStateChange() *ChannelState {
	if m != nil {
		return m.StateChange
	}
	return nil
}

func init() {
	proto.RegisterEnum("bnet.protocol.channel.ChannelState_PrivacyLevel", ChannelState_PrivacyLevel_name, ChannelState_PrivacyLevel_value)
}
