// Code generated by protoc-gen-go.
// source: bnet/protocol_1.proto
// DO NOT EDIT!

/*
Package bnet_protocol is a generated protocol buffer package.

It is generated from these files:
	bnet/protocol_1.proto

It has these top-level messages:
	ObjectAddress
	ErrorInfo
	Header
	Role
	RoleSet
	RoleSetConfig
*/
package bnet_protocol

import proto "github.com/golang/protobuf/proto"
import math "math"
import bnet_protocol1 "bnet"
import bnet_protocol_attribute "bnet/protocol"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ObjectAddress struct {
	Host             *bnet_protocol1.ProcessId `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	ObjectId         *uint64                   `protobuf:"varint,2,opt,name=object_id" json:"object_id,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ObjectAddress) Reset()         { *m = ObjectAddress{} }
func (m *ObjectAddress) String() string { return proto.CompactTextString(m) }
func (*ObjectAddress) ProtoMessage()    {}

func (m *ObjectAddress) GetHost() *bnet_protocol1.ProcessId {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *ObjectAddress) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

type ErrorInfo struct {
	ObjectAddress    *ObjectAddress `protobuf:"bytes,1,opt,name=object_address" json:"object_address,omitempty"`
	Status           *uint32        `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	ServiceHash      *uint32        `protobuf:"varint,3,opt,name=service_hash" json:"service_hash,omitempty"`
	MethodId         *uint32        `protobuf:"varint,4,opt,name=method_id" json:"method_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ErrorInfo) Reset()         { *m = ErrorInfo{} }
func (m *ErrorInfo) String() string { return proto.CompactTextString(m) }
func (*ErrorInfo) ProtoMessage()    {}

func (m *ErrorInfo) GetObjectAddress() *ObjectAddress {
	if m != nil {
		return m.ObjectAddress
	}
	return nil
}

func (m *ErrorInfo) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *ErrorInfo) GetServiceHash() uint32 {
	if m != nil && m.ServiceHash != nil {
		return *m.ServiceHash
	}
	return 0
}

func (m *ErrorInfo) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

type Header struct {
	ServiceId        *uint32      `protobuf:"varint,1,opt,name=service_id" json:"service_id,omitempty"`
	MethodId         *uint32      `protobuf:"varint,2,opt,name=method_id" json:"method_id,omitempty"`
	Token            *uint32      `protobuf:"varint,3,opt,name=token" json:"token,omitempty"`
	ObjectId         *uint64      `protobuf:"varint,4,opt,name=object_id" json:"object_id,omitempty"`
	Size             *uint32      `protobuf:"varint,5,opt,name=size" json:"size,omitempty"`
	Status           *uint32      `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	Error            []*ErrorInfo `protobuf:"bytes,7,rep,name=error" json:"error,omitempty"`
	Timeout          *uint64      `protobuf:"varint,8,opt,name=timeout" json:"timeout,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}

func (m *Header) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *Header) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

func (m *Header) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

func (m *Header) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

func (m *Header) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *Header) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *Header) GetError() []*ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Header) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

type Role struct {
	Id               *uint32                              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string                              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Privilege        []string                             `protobuf:"bytes,3,rep,name=privilege" json:"privilege,omitempty"`
	AssignableRole   []uint32                             `protobuf:"varint,4,rep,name=assignable_role" json:"assignable_role,omitempty"`
	Required         *bool                                `protobuf:"varint,5,opt,name=required" json:"required,omitempty"`
	Unique           *bool                                `protobuf:"varint,6,opt,name=unique" json:"unique,omitempty"`
	RelegationRole   *uint32                              `protobuf:"varint,7,opt,name=relegation_role" json:"relegation_role,omitempty"`
	Attribute        []*bnet_protocol_attribute.Attribute `protobuf:"bytes,8,rep,name=attribute" json:"attribute,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}

func (m *Role) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Role) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Role) GetPrivilege() []string {
	if m != nil {
		return m.Privilege
	}
	return nil
}

func (m *Role) GetAssignableRole() []uint32 {
	if m != nil {
		return m.AssignableRole
	}
	return nil
}

func (m *Role) GetRequired() bool {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return false
}

func (m *Role) GetUnique() bool {
	if m != nil && m.Unique != nil {
		return *m.Unique
	}
	return false
}

func (m *Role) GetRelegationRole() uint32 {
	if m != nil && m.RelegationRole != nil {
		return *m.RelegationRole
	}
	return 0
}

func (m *Role) GetAttribute() []*bnet_protocol_attribute.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type RoleSet struct {
	Program          *string                              `protobuf:"bytes,1,opt,name=program" json:"program,omitempty"`
	Service          *string                              `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
	Subtype          *string                              `protobuf:"bytes,3,opt,name=subtype,def=default" json:"subtype,omitempty"`
	Role             []*Role                              `protobuf:"bytes,4,rep,name=role" json:"role,omitempty"`
	DefaultRole      []uint32                             `protobuf:"varint,5,rep,name=default_role" json:"default_role,omitempty"`
	MaxMembers       *int32                               `protobuf:"varint,6,opt,name=max_members" json:"max_members,omitempty"`
	Attribute        []*bnet_protocol_attribute.Attribute `protobuf:"bytes,7,rep,name=attribute" json:"attribute,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *RoleSet) Reset()         { *m = RoleSet{} }
func (m *RoleSet) String() string { return proto.CompactTextString(m) }
func (*RoleSet) ProtoMessage()    {}

const Default_RoleSet_Subtype string = "default"

func (m *RoleSet) GetProgram() string {
	if m != nil && m.Program != nil {
		return *m.Program
	}
	return ""
}

func (m *RoleSet) GetService() string {
	if m != nil && m.Service != nil {
		return *m.Service
	}
	return ""
}

func (m *RoleSet) GetSubtype() string {
	if m != nil && m.Subtype != nil {
		return *m.Subtype
	}
	return Default_RoleSet_Subtype
}

func (m *RoleSet) GetRole() []*Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *RoleSet) GetDefaultRole() []uint32 {
	if m != nil {
		return m.DefaultRole
	}
	return nil
}

func (m *RoleSet) GetMaxMembers() int32 {
	if m != nil && m.MaxMembers != nil {
		return *m.MaxMembers
	}
	return 0
}

func (m *RoleSet) GetAttribute() []*bnet_protocol_attribute.Attribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type RoleSetConfig struct {
	Privilege        []*bnet_protocol1.Privilege `protobuf:"bytes,1,rep,name=privilege" json:"privilege,omitempty"`
	RoleSet          *RoleSet                    `protobuf:"bytes,2,opt,name=role_set" json:"role_set,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *RoleSetConfig) Reset()         { *m = RoleSetConfig{} }
func (m *RoleSetConfig) String() string { return proto.CompactTextString(m) }
func (*RoleSetConfig) ProtoMessage()    {}

func (m *RoleSetConfig) GetPrivilege() []*bnet_protocol1.Privilege {
	if m != nil {
		return m.Privilege
	}
	return nil
}

func (m *RoleSetConfig) GetRoleSet() *RoleSet {
	if m != nil {
		return m.RoleSet
	}
	return nil
}

func init() {
}
