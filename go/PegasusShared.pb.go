// Code generated by protoc-gen-go.
// source: PegasusShared.proto
// DO NOT EDIT!

/*
Package PegasusShared is a generated protocol buffer package.

It is generated from these files:
	PegasusShared.proto

It has these top-level messages:
	AdventureProgress
	BnetId
	CardDef
	Date
	CardStack
	DeckCardData
	DeckInfo
	Platform
	PlayQueueInfo
	ProfileNoticeAdventureProgress
	ProfileNoticeBonusStars
	ProfileNoticeCardBack
	ProfileNoticeDisconnectedGameResult
	ProfileNoticeMedal
	ProfileNoticePreconDeck
	ProfileNoticePurchase
	ProfileNoticeRewardBooster
	ProfileNoticeRewardCard
	ProfileNoticeRewardCard2X
	ProfileNoticeRewardDust
	ProfileNoticeRewardForge
	ProfileNoticeRewardGold
	ProfileNoticeRewardMount
*/
package PegasusShared

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type BattlePayProvider int32

const (
	BattlePayProvider_BP_PROVIDER_BLIZZARD    BattlePayProvider = 1
	BattlePayProvider_BP_PROVIDER_APPLE       BattlePayProvider = 2
	BattlePayProvider_BP_PROVIDER_GOOGLE_PLAY BattlePayProvider = 3
	BattlePayProvider_BP_PROVIDER_AMAZON      BattlePayProvider = 4
)

var BattlePayProvider_name = map[int32]string{
	1: "BP_PROVIDER_BLIZZARD",
	2: "BP_PROVIDER_APPLE",
	3: "BP_PROVIDER_GOOGLE_PLAY",
	4: "BP_PROVIDER_AMAZON",
}
var BattlePayProvider_value = map[string]int32{
	"BP_PROVIDER_BLIZZARD":    1,
	"BP_PROVIDER_APPLE":       2,
	"BP_PROVIDER_GOOGLE_PLAY": 3,
	"BP_PROVIDER_AMAZON":      4,
}

func (x BattlePayProvider) Enum() *BattlePayProvider {
	p := new(BattlePayProvider)
	*p = x
	return p
}
func (x BattlePayProvider) String() string {
	return proto.EnumName(BattlePayProvider_name, int32(x))
}
func (x *BattlePayProvider) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayProvider_value, data, "BattlePayProvider")
	if err != nil {
		return err
	}
	*x = BattlePayProvider(value)
	return nil
}

type BnetGameType int32

const (
	BnetGameType_BGT_UNKNOWN  BnetGameType = 0
	BnetGameType_BGT_FRIENDS  BnetGameType = 1
	BnetGameType_BGT_RANKED   BnetGameType = 2
	BnetGameType_BGT_ARENA    BnetGameType = 3
	BnetGameType_BGT_VS_AI    BnetGameType = 4
	BnetGameType_BGT_TUTORIAL BnetGameType = 5
	BnetGameType_BGT_ASYNC    BnetGameType = 6
	BnetGameType_BGT_NEWBIE   BnetGameType = 9
	BnetGameType_BGT_NORMAL   BnetGameType = 10
	BnetGameType_BGT_TEST1    BnetGameType = 11
	BnetGameType_BGT_TEST2    BnetGameType = 12
	BnetGameType_BGT_TEST3    BnetGameType = 13
	BnetGameType_BGT_LAST     BnetGameType = 14
)

var BnetGameType_name = map[int32]string{
	0:  "BGT_UNKNOWN",
	1:  "BGT_FRIENDS",
	2:  "BGT_RANKED",
	3:  "BGT_ARENA",
	4:  "BGT_VS_AI",
	5:  "BGT_TUTORIAL",
	6:  "BGT_ASYNC",
	9:  "BGT_NEWBIE",
	10: "BGT_NORMAL",
	11: "BGT_TEST1",
	12: "BGT_TEST2",
	13: "BGT_TEST3",
	14: "BGT_LAST",
}
var BnetGameType_value = map[string]int32{
	"BGT_UNKNOWN":  0,
	"BGT_FRIENDS":  1,
	"BGT_RANKED":   2,
	"BGT_ARENA":    3,
	"BGT_VS_AI":    4,
	"BGT_TUTORIAL": 5,
	"BGT_ASYNC":    6,
	"BGT_NEWBIE":   9,
	"BGT_NORMAL":   10,
	"BGT_TEST1":    11,
	"BGT_TEST2":    12,
	"BGT_TEST3":    13,
	"BGT_LAST":     14,
}

func (x BnetGameType) Enum() *BnetGameType {
	p := new(BnetGameType)
	*p = x
	return p
}
func (x BnetGameType) String() string {
	return proto.EnumName(BnetGameType_name, int32(x))
}
func (x *BnetGameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BnetGameType_value, data, "BnetGameType")
	if err != nil {
		return err
	}
	*x = BnetGameType(value)
	return nil
}

type DatabaseAction int32

const (
	DatabaseAction_DB_A_UNKNOWN      DatabaseAction = 0
	DatabaseAction_DB_A_GET_DECK     DatabaseAction = 1
	DatabaseAction_DB_A_CREATE_DECK  DatabaseAction = 2
	DatabaseAction_DB_A_RENAME_DECK  DatabaseAction = 3
	DatabaseAction_DB_A_DELETE_DECK  DatabaseAction = 4
	DatabaseAction_DB_A_SET_DECK     DatabaseAction = 5
	DatabaseAction_DB_A_OPEN_BOOSTER DatabaseAction = 6
	DatabaseAction_DB_A_GAMES_INFO   DatabaseAction = 7
)

var DatabaseAction_name = map[int32]string{
	0: "DB_A_UNKNOWN",
	1: "DB_A_GET_DECK",
	2: "DB_A_CREATE_DECK",
	3: "DB_A_RENAME_DECK",
	4: "DB_A_DELETE_DECK",
	5: "DB_A_SET_DECK",
	6: "DB_A_OPEN_BOOSTER",
	7: "DB_A_GAMES_INFO",
}
var DatabaseAction_value = map[string]int32{
	"DB_A_UNKNOWN":      0,
	"DB_A_GET_DECK":     1,
	"DB_A_CREATE_DECK":  2,
	"DB_A_RENAME_DECK":  3,
	"DB_A_DELETE_DECK":  4,
	"DB_A_SET_DECK":     5,
	"DB_A_OPEN_BOOSTER": 6,
	"DB_A_GAMES_INFO":   7,
}

func (x DatabaseAction) Enum() *DatabaseAction {
	p := new(DatabaseAction)
	*p = x
	return p
}
func (x DatabaseAction) String() string {
	return proto.EnumName(DatabaseAction_name, int32(x))
}
func (x *DatabaseAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatabaseAction_value, data, "DatabaseAction")
	if err != nil {
		return err
	}
	*x = DatabaseAction(value)
	return nil
}

type DatabaseResult int32

const (
	DatabaseResult_DB_E_SQL_EX     DatabaseResult = -1
	DatabaseResult_DB_E_UNKNOWN    DatabaseResult = 0
	DatabaseResult_DB_E_SUCCESS    DatabaseResult = 1
	DatabaseResult_DB_E_NOT_OWNED  DatabaseResult = 2
	DatabaseResult_DB_E_CONSTRAINT DatabaseResult = 3
	DatabaseResult_DB_E_NOT_FOUND  DatabaseResult = 4
	DatabaseResult_DB_E_EXCEPTION  DatabaseResult = 9
)

var DatabaseResult_name = map[int32]string{
	-1: "DB_E_SQL_EX",
	0:  "DB_E_UNKNOWN",
	1:  "DB_E_SUCCESS",
	2:  "DB_E_NOT_OWNED",
	3:  "DB_E_CONSTRAINT",
	4:  "DB_E_NOT_FOUND",
	9:  "DB_E_EXCEPTION",
}
var DatabaseResult_value = map[string]int32{
	"DB_E_SQL_EX":     -1,
	"DB_E_UNKNOWN":    0,
	"DB_E_SUCCESS":    1,
	"DB_E_NOT_OWNED":  2,
	"DB_E_CONSTRAINT": 3,
	"DB_E_NOT_FOUND":  4,
	"DB_E_EXCEPTION":  9,
}

func (x DatabaseResult) Enum() *DatabaseResult {
	p := new(DatabaseResult)
	*p = x
	return p
}
func (x DatabaseResult) String() string {
	return proto.EnumName(DatabaseResult_name, int32(x))
}
func (x *DatabaseResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatabaseResult_value, data, "DatabaseResult")
	if err != nil {
		return err
	}
	*x = DatabaseResult(value)
	return nil
}

type GameType int32

const (
	GameType_GT_UNKNOWN   GameType = 0
	GameType_GT_VS_AI     GameType = 1
	GameType_GT_VS_FRIEND GameType = 2
	GameType_GT_TUTORIAL  GameType = 4
	GameType_GT_ARENA     GameType = 5
	GameType_GT_TEST      GameType = 6
	GameType_GT_RANKED    GameType = 7
	GameType_GT_UNRANKED  GameType = 8
	GameType_GT_LAST      GameType = 14
)

var GameType_name = map[int32]string{
	0:  "GT_UNKNOWN",
	1:  "GT_VS_AI",
	2:  "GT_VS_FRIEND",
	4:  "GT_TUTORIAL",
	5:  "GT_ARENA",
	6:  "GT_TEST",
	7:  "GT_RANKED",
	8:  "GT_UNRANKED",
	14: "GT_LAST",
}
var GameType_value = map[string]int32{
	"GT_UNKNOWN":   0,
	"GT_VS_AI":     1,
	"GT_VS_FRIEND": 2,
	"GT_TUTORIAL":  4,
	"GT_ARENA":     5,
	"GT_TEST":      6,
	"GT_RANKED":    7,
	"GT_UNRANKED":  8,
	"GT_LAST":      14,
}

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}
func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}
func (x *GameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameType_value, data, "GameType")
	if err != nil {
		return err
	}
	*x = GameType(value)
	return nil
}

type ProtocolVersion int32

const (
	ProtocolVersion_PV_MAJOR ProtocolVersion = 2
	ProtocolVersion_PV_MINOR ProtocolVersion = 4
	ProtocolVersion_PV_PATCH ProtocolVersion = 0
	ProtocolVersion_PV_SKU   ProtocolVersion = 0
)

var ProtocolVersion_name = map[int32]string{
	2: "PV_MAJOR",
	4: "PV_MINOR",
	0: "PV_PATCH",
	// Duplicate value: 0: "PV_SKU",
}
var ProtocolVersion_value = map[string]int32{
	"PV_MAJOR": 2,
	"PV_MINOR": 4,
	"PV_PATCH": 0,
	"PV_SKU":   0,
}

func (x ProtocolVersion) Enum() *ProtocolVersion {
	p := new(ProtocolVersion)
	*p = x
	return p
}
func (x ProtocolVersion) String() string {
	return proto.EnumName(ProtocolVersion_name, int32(x))
}
func (x *ProtocolVersion) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtocolVersion_value, data, "ProtocolVersion")
	if err != nil {
		return err
	}
	*x = ProtocolVersion(value)
	return nil
}

type AdventureProgress_Flags int32

const (
	AdventureProgress_OWNED                            AdventureProgress_Flags = 1
	AdventureProgress_DEFEAT_HEROIC_MISSION_1          AdventureProgress_Flags = 2
	AdventureProgress_DEFEAT_HEROIC_MISSION_2          AdventureProgress_Flags = 4
	AdventureProgress_DEFEAT_HEROIC_MISSION_3          AdventureProgress_Flags = 8
	AdventureProgress_DEFEAT_HEROIC_MISSION_4          AdventureProgress_Flags = 16
	AdventureProgress_DEFEAT_CLASS_CHALLENGE_MISSION_1 AdventureProgress_Flags = 256
	AdventureProgress_DEFEAT_CLASS_CHALLENGE_MISSION_2 AdventureProgress_Flags = 512
)

var AdventureProgress_Flags_name = map[int32]string{
	1:   "OWNED",
	2:   "DEFEAT_HEROIC_MISSION_1",
	4:   "DEFEAT_HEROIC_MISSION_2",
	8:   "DEFEAT_HEROIC_MISSION_3",
	16:  "DEFEAT_HEROIC_MISSION_4",
	256: "DEFEAT_CLASS_CHALLENGE_MISSION_1",
	512: "DEFEAT_CLASS_CHALLENGE_MISSION_2",
}
var AdventureProgress_Flags_value = map[string]int32{
	"OWNED":                            1,
	"DEFEAT_HEROIC_MISSION_1":          2,
	"DEFEAT_HEROIC_MISSION_2":          4,
	"DEFEAT_HEROIC_MISSION_3":          8,
	"DEFEAT_HEROIC_MISSION_4":          16,
	"DEFEAT_CLASS_CHALLENGE_MISSION_1": 256,
	"DEFEAT_CLASS_CHALLENGE_MISSION_2": 512,
}

func (x AdventureProgress_Flags) Enum() *AdventureProgress_Flags {
	p := new(AdventureProgress_Flags)
	*p = x
	return p
}
func (x AdventureProgress_Flags) String() string {
	return proto.EnumName(AdventureProgress_Flags_name, int32(x))
}
func (x *AdventureProgress_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureProgress_Flags_value, data, "AdventureProgress_Flags")
	if err != nil {
		return err
	}
	*x = AdventureProgress_Flags(value)
	return nil
}

type DeckInfo_DeckType int32

const (
	DeckInfo_NORMAL_DECK DeckInfo_DeckType = 1
	DeckInfo_AI_DECK     DeckInfo_DeckType = 2
	DeckInfo_DRAFT_DECK  DeckInfo_DeckType = 4
	DeckInfo_PRECON_DECK DeckInfo_DeckType = 5
)

var DeckInfo_DeckType_name = map[int32]string{
	1: "NORMAL_DECK",
	2: "AI_DECK",
	4: "DRAFT_DECK",
	5: "PRECON_DECK",
}
var DeckInfo_DeckType_value = map[string]int32{
	"NORMAL_DECK": 1,
	"AI_DECK":     2,
	"DRAFT_DECK":  4,
	"PRECON_DECK": 5,
}

func (x DeckInfo_DeckType) Enum() *DeckInfo_DeckType {
	p := new(DeckInfo_DeckType)
	*p = x
	return p
}
func (x DeckInfo_DeckType) String() string {
	return proto.EnumName(DeckInfo_DeckType_name, int32(x))
}
func (x *DeckInfo_DeckType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckInfo_DeckType_value, data, "DeckInfo_DeckType")
	if err != nil {
		return err
	}
	*x = DeckInfo_DeckType(value)
	return nil
}

type ProfileNoticeAdventureProgress_NoticeID int32

const (
	ProfileNoticeAdventureProgress_ID ProfileNoticeAdventureProgress_NoticeID = 14
)

var ProfileNoticeAdventureProgress_NoticeID_name = map[int32]string{
	14: "ID",
}
var ProfileNoticeAdventureProgress_NoticeID_value = map[string]int32{
	"ID": 14,
}

func (x ProfileNoticeAdventureProgress_NoticeID) Enum() *ProfileNoticeAdventureProgress_NoticeID {
	p := new(ProfileNoticeAdventureProgress_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeAdventureProgress_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeAdventureProgress_NoticeID_name, int32(x))
}
func (x *ProfileNoticeAdventureProgress_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeAdventureProgress_NoticeID_value, data, "ProfileNoticeAdventureProgress_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeAdventureProgress_NoticeID(value)
	return nil
}

type ProfileNoticeBonusStars_NoticeID int32

const (
	ProfileNoticeBonusStars_ID ProfileNoticeBonusStars_NoticeID = 12
)

var ProfileNoticeBonusStars_NoticeID_name = map[int32]string{
	12: "ID",
}
var ProfileNoticeBonusStars_NoticeID_value = map[string]int32{
	"ID": 12,
}

func (x ProfileNoticeBonusStars_NoticeID) Enum() *ProfileNoticeBonusStars_NoticeID {
	p := new(ProfileNoticeBonusStars_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeBonusStars_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeBonusStars_NoticeID_name, int32(x))
}
func (x *ProfileNoticeBonusStars_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeBonusStars_NoticeID_value, data, "ProfileNoticeBonusStars_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeBonusStars_NoticeID(value)
	return nil
}

type ProfileNoticeCardBack_NoticeID int32

const (
	ProfileNoticeCardBack_ID ProfileNoticeCardBack_NoticeID = 11
)

var ProfileNoticeCardBack_NoticeID_name = map[int32]string{
	11: "ID",
}
var ProfileNoticeCardBack_NoticeID_value = map[string]int32{
	"ID": 11,
}

func (x ProfileNoticeCardBack_NoticeID) Enum() *ProfileNoticeCardBack_NoticeID {
	p := new(ProfileNoticeCardBack_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeCardBack_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeCardBack_NoticeID_name, int32(x))
}
func (x *ProfileNoticeCardBack_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeCardBack_NoticeID_value, data, "ProfileNoticeCardBack_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeCardBack_NoticeID(value)
	return nil
}

type ProfileNoticeDisconnectedGameResult_GameResult int32

const (
	ProfileNoticeDisconnectedGameResult_GR_UNKNOWN ProfileNoticeDisconnectedGameResult_GameResult = 0
	ProfileNoticeDisconnectedGameResult_GR_PLAYING ProfileNoticeDisconnectedGameResult_GameResult = 1
	ProfileNoticeDisconnectedGameResult_GR_WINNER  ProfileNoticeDisconnectedGameResult_GameResult = 2
	ProfileNoticeDisconnectedGameResult_GR_TIE     ProfileNoticeDisconnectedGameResult_GameResult = 3
)

var ProfileNoticeDisconnectedGameResult_GameResult_name = map[int32]string{
	0: "GR_UNKNOWN",
	1: "GR_PLAYING",
	2: "GR_WINNER",
	3: "GR_TIE",
}
var ProfileNoticeDisconnectedGameResult_GameResult_value = map[string]int32{
	"GR_UNKNOWN": 0,
	"GR_PLAYING": 1,
	"GR_WINNER":  2,
	"GR_TIE":     3,
}

func (x ProfileNoticeDisconnectedGameResult_GameResult) Enum() *ProfileNoticeDisconnectedGameResult_GameResult {
	p := new(ProfileNoticeDisconnectedGameResult_GameResult)
	*p = x
	return p
}
func (x ProfileNoticeDisconnectedGameResult_GameResult) String() string {
	return proto.EnumName(ProfileNoticeDisconnectedGameResult_GameResult_name, int32(x))
}
func (x *ProfileNoticeDisconnectedGameResult_GameResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeDisconnectedGameResult_GameResult_value, data, "ProfileNoticeDisconnectedGameResult_GameResult")
	if err != nil {
		return err
	}
	*x = ProfileNoticeDisconnectedGameResult_GameResult(value)
	return nil
}

type ProfileNoticeDisconnectedGameResult_NoticeID int32

const (
	ProfileNoticeDisconnectedGameResult_ID ProfileNoticeDisconnectedGameResult_NoticeID = 4
)

var ProfileNoticeDisconnectedGameResult_NoticeID_name = map[int32]string{
	4: "ID",
}
var ProfileNoticeDisconnectedGameResult_NoticeID_value = map[string]int32{
	"ID": 4,
}

func (x ProfileNoticeDisconnectedGameResult_NoticeID) Enum() *ProfileNoticeDisconnectedGameResult_NoticeID {
	p := new(ProfileNoticeDisconnectedGameResult_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeDisconnectedGameResult_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeDisconnectedGameResult_NoticeID_name, int32(x))
}
func (x *ProfileNoticeDisconnectedGameResult_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeDisconnectedGameResult_NoticeID_value, data, "ProfileNoticeDisconnectedGameResult_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeDisconnectedGameResult_NoticeID(value)
	return nil
}

type ProfileNoticeDisconnectedGameResult_PlayerResult int32

const (
	ProfileNoticeDisconnectedGameResult_PR_UNKNOWN      ProfileNoticeDisconnectedGameResult_PlayerResult = 0
	ProfileNoticeDisconnectedGameResult_PR_WON          ProfileNoticeDisconnectedGameResult_PlayerResult = 1
	ProfileNoticeDisconnectedGameResult_PR_LOST         ProfileNoticeDisconnectedGameResult_PlayerResult = 2
	ProfileNoticeDisconnectedGameResult_PR_DISCONNECTED ProfileNoticeDisconnectedGameResult_PlayerResult = 3
	ProfileNoticeDisconnectedGameResult_PR_QUIT         ProfileNoticeDisconnectedGameResult_PlayerResult = 4
)

var ProfileNoticeDisconnectedGameResult_PlayerResult_name = map[int32]string{
	0: "PR_UNKNOWN",
	1: "PR_WON",
	2: "PR_LOST",
	3: "PR_DISCONNECTED",
	4: "PR_QUIT",
}
var ProfileNoticeDisconnectedGameResult_PlayerResult_value = map[string]int32{
	"PR_UNKNOWN":      0,
	"PR_WON":          1,
	"PR_LOST":         2,
	"PR_DISCONNECTED": 3,
	"PR_QUIT":         4,
}

func (x ProfileNoticeDisconnectedGameResult_PlayerResult) Enum() *ProfileNoticeDisconnectedGameResult_PlayerResult {
	p := new(ProfileNoticeDisconnectedGameResult_PlayerResult)
	*p = x
	return p
}
func (x ProfileNoticeDisconnectedGameResult_PlayerResult) String() string {
	return proto.EnumName(ProfileNoticeDisconnectedGameResult_PlayerResult_name, int32(x))
}
func (x *ProfileNoticeDisconnectedGameResult_PlayerResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeDisconnectedGameResult_PlayerResult_value, data, "ProfileNoticeDisconnectedGameResult_PlayerResult")
	if err != nil {
		return err
	}
	*x = ProfileNoticeDisconnectedGameResult_PlayerResult(value)
	return nil
}

type ProfileNoticeMedal_NoticeID int32

const (
	ProfileNoticeMedal_ID ProfileNoticeMedal_NoticeID = 1
)

var ProfileNoticeMedal_NoticeID_name = map[int32]string{
	1: "ID",
}
var ProfileNoticeMedal_NoticeID_value = map[string]int32{
	"ID": 1,
}

func (x ProfileNoticeMedal_NoticeID) Enum() *ProfileNoticeMedal_NoticeID {
	p := new(ProfileNoticeMedal_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeMedal_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeMedal_NoticeID_name, int32(x))
}
func (x *ProfileNoticeMedal_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeMedal_NoticeID_value, data, "ProfileNoticeMedal_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeMedal_NoticeID(value)
	return nil
}

type ProfileNoticePreconDeck_NoticeID int32

const (
	ProfileNoticePreconDeck_ID ProfileNoticePreconDeck_NoticeID = 5
)

var ProfileNoticePreconDeck_NoticeID_name = map[int32]string{
	5: "ID",
}
var ProfileNoticePreconDeck_NoticeID_value = map[string]int32{
	"ID": 5,
}

func (x ProfileNoticePreconDeck_NoticeID) Enum() *ProfileNoticePreconDeck_NoticeID {
	p := new(ProfileNoticePreconDeck_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticePreconDeck_NoticeID) String() string {
	return proto.EnumName(ProfileNoticePreconDeck_NoticeID_name, int32(x))
}
func (x *ProfileNoticePreconDeck_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticePreconDeck_NoticeID_value, data, "ProfileNoticePreconDeck_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticePreconDeck_NoticeID(value)
	return nil
}

type ProfileNoticePurchase_NoticeID int32

const (
	ProfileNoticePurchase_ID ProfileNoticePurchase_NoticeID = 10
)

var ProfileNoticePurchase_NoticeID_name = map[int32]string{
	10: "ID",
}
var ProfileNoticePurchase_NoticeID_value = map[string]int32{
	"ID": 10,
}

func (x ProfileNoticePurchase_NoticeID) Enum() *ProfileNoticePurchase_NoticeID {
	p := new(ProfileNoticePurchase_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticePurchase_NoticeID) String() string {
	return proto.EnumName(ProfileNoticePurchase_NoticeID_name, int32(x))
}
func (x *ProfileNoticePurchase_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticePurchase_NoticeID_value, data, "ProfileNoticePurchase_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticePurchase_NoticeID(value)
	return nil
}

type ProfileNoticeRewardBooster_NoticeID int32

const (
	ProfileNoticeRewardBooster_ID ProfileNoticeRewardBooster_NoticeID = 2
)

var ProfileNoticeRewardBooster_NoticeID_name = map[int32]string{
	2: "ID",
}
var ProfileNoticeRewardBooster_NoticeID_value = map[string]int32{
	"ID": 2,
}

func (x ProfileNoticeRewardBooster_NoticeID) Enum() *ProfileNoticeRewardBooster_NoticeID {
	p := new(ProfileNoticeRewardBooster_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardBooster_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardBooster_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardBooster_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardBooster_NoticeID_value, data, "ProfileNoticeRewardBooster_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardBooster_NoticeID(value)
	return nil
}

type ProfileNoticeRewardCard_NoticeID int32

const (
	ProfileNoticeRewardCard_ID ProfileNoticeRewardCard_NoticeID = 3
)

var ProfileNoticeRewardCard_NoticeID_name = map[int32]string{
	3: "ID",
}
var ProfileNoticeRewardCard_NoticeID_value = map[string]int32{
	"ID": 3,
}

func (x ProfileNoticeRewardCard_NoticeID) Enum() *ProfileNoticeRewardCard_NoticeID {
	p := new(ProfileNoticeRewardCard_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardCard_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardCard_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardCard_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardCard_NoticeID_value, data, "ProfileNoticeRewardCard_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardCard_NoticeID(value)
	return nil
}

type ProfileNoticeRewardCard2X_NoticeID int32

const (
	ProfileNoticeRewardCard2X_ID ProfileNoticeRewardCard2X_NoticeID = 13
)

var ProfileNoticeRewardCard2X_NoticeID_name = map[int32]string{
	13: "ID",
}
var ProfileNoticeRewardCard2X_NoticeID_value = map[string]int32{
	"ID": 13,
}

func (x ProfileNoticeRewardCard2X_NoticeID) Enum() *ProfileNoticeRewardCard2X_NoticeID {
	p := new(ProfileNoticeRewardCard2X_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardCard2X_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardCard2X_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardCard2X_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardCard2X_NoticeID_value, data, "ProfileNoticeRewardCard2X_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardCard2X_NoticeID(value)
	return nil
}

type ProfileNoticeRewardDust_NoticeID int32

const (
	ProfileNoticeRewardDust_ID ProfileNoticeRewardDust_NoticeID = 6
)

var ProfileNoticeRewardDust_NoticeID_name = map[int32]string{
	6: "ID",
}
var ProfileNoticeRewardDust_NoticeID_value = map[string]int32{
	"ID": 6,
}

func (x ProfileNoticeRewardDust_NoticeID) Enum() *ProfileNoticeRewardDust_NoticeID {
	p := new(ProfileNoticeRewardDust_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardDust_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardDust_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardDust_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardDust_NoticeID_value, data, "ProfileNoticeRewardDust_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardDust_NoticeID(value)
	return nil
}

type ProfileNoticeRewardForge_NoticeID int32

const (
	ProfileNoticeRewardForge_ID ProfileNoticeRewardForge_NoticeID = 8
)

var ProfileNoticeRewardForge_NoticeID_name = map[int32]string{
	8: "ID",
}
var ProfileNoticeRewardForge_NoticeID_value = map[string]int32{
	"ID": 8,
}

func (x ProfileNoticeRewardForge_NoticeID) Enum() *ProfileNoticeRewardForge_NoticeID {
	p := new(ProfileNoticeRewardForge_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardForge_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardForge_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardForge_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardForge_NoticeID_value, data, "ProfileNoticeRewardForge_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardForge_NoticeID(value)
	return nil
}

type ProfileNoticeRewardGold_NoticeID int32

const (
	ProfileNoticeRewardGold_ID ProfileNoticeRewardGold_NoticeID = 9
)

var ProfileNoticeRewardGold_NoticeID_name = map[int32]string{
	9: "ID",
}
var ProfileNoticeRewardGold_NoticeID_value = map[string]int32{
	"ID": 9,
}

func (x ProfileNoticeRewardGold_NoticeID) Enum() *ProfileNoticeRewardGold_NoticeID {
	p := new(ProfileNoticeRewardGold_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardGold_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardGold_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardGold_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardGold_NoticeID_value, data, "ProfileNoticeRewardGold_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardGold_NoticeID(value)
	return nil
}

type ProfileNoticeRewardMount_NoticeID int32

const (
	ProfileNoticeRewardMount_ID ProfileNoticeRewardMount_NoticeID = 7
)

var ProfileNoticeRewardMount_NoticeID_name = map[int32]string{
	7: "ID",
}
var ProfileNoticeRewardMount_NoticeID_value = map[string]int32{
	"ID": 7,
}

func (x ProfileNoticeRewardMount_NoticeID) Enum() *ProfileNoticeRewardMount_NoticeID {
	p := new(ProfileNoticeRewardMount_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardMount_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardMount_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardMount_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardMount_NoticeID_value, data, "ProfileNoticeRewardMount_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardMount_NoticeID(value)
	return nil
}

type AdventureProgress struct {
	WingId           *int32  `protobuf:"varint,1,opt,name=wing_id" json:"wing_id,omitempty"`
	Progress         *int32  `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	Ack              *int32  `protobuf:"varint,3,opt,name=ack" json:"ack,omitempty"`
	Flags            *uint64 `protobuf:"varint,4,opt,name=flags" json:"flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdventureProgress) Reset()         { *m = AdventureProgress{} }
func (m *AdventureProgress) String() string { return proto.CompactTextString(m) }
func (*AdventureProgress) ProtoMessage()    {}

func (m *AdventureProgress) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

func (m *AdventureProgress) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *AdventureProgress) GetAck() int32 {
	if m != nil && m.Ack != nil {
		return *m.Ack
	}
	return 0
}

func (m *AdventureProgress) GetFlags() uint64 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

type BnetId struct {
	Hi               *uint64 `protobuf:"varint,1,opt,name=hi" json:"hi,omitempty"`
	Lo               *uint64 `protobuf:"varint,2,opt,name=lo" json:"lo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BnetId) Reset()         { *m = BnetId{} }
func (m *BnetId) String() string { return proto.CompactTextString(m) }
func (*BnetId) ProtoMessage()    {}

func (m *BnetId) GetHi() uint64 {
	if m != nil && m.Hi != nil {
		return *m.Hi
	}
	return 0
}

func (m *BnetId) GetLo() uint64 {
	if m != nil && m.Lo != nil {
		return *m.Lo
	}
	return 0
}

type CardDef struct {
	Asset            *int32 `protobuf:"varint,1,opt,name=asset" json:"asset,omitempty"`
	Premium          *int32 `protobuf:"varint,2,opt,name=premium" json:"premium,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardDef) Reset()         { *m = CardDef{} }
func (m *CardDef) String() string { return proto.CompactTextString(m) }
func (*CardDef) ProtoMessage()    {}

func (m *CardDef) GetAsset() int32 {
	if m != nil && m.Asset != nil {
		return *m.Asset
	}
	return 0
}

func (m *CardDef) GetPremium() int32 {
	if m != nil && m.Premium != nil {
		return *m.Premium
	}
	return 0
}

type Date struct {
	Year             *int32 `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month            *int32 `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	Day              *int32 `protobuf:"varint,3,opt,name=day" json:"day,omitempty"`
	Hours            *int32 `protobuf:"varint,4,opt,name=hours" json:"hours,omitempty"`
	Min              *int32 `protobuf:"varint,5,opt,name=min" json:"min,omitempty"`
	Sec              *int32 `protobuf:"varint,6,opt,name=sec" json:"sec,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}

func (m *Date) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *Date) GetHours() int32 {
	if m != nil && m.Hours != nil {
		return *m.Hours
	}
	return 0
}

func (m *Date) GetMin() int32 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *Date) GetSec() int32 {
	if m != nil && m.Sec != nil {
		return *m.Sec
	}
	return 0
}

type CardStack struct {
	CardDef          *CardDef `protobuf:"bytes,1,opt,name=card_def" json:"card_def,omitempty"`
	LatestInsertDate *Date    `protobuf:"bytes,2,opt,name=latest_insert_date" json:"latest_insert_date,omitempty"`
	Count            *int32   `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	NumSeen          *int32   `protobuf:"varint,4,opt,name=num_seen" json:"num_seen,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CardStack) Reset()         { *m = CardStack{} }
func (m *CardStack) String() string { return proto.CompactTextString(m) }
func (*CardStack) ProtoMessage()    {}

func (m *CardStack) GetCardDef() *CardDef {
	if m != nil {
		return m.CardDef
	}
	return nil
}

func (m *CardStack) GetLatestInsertDate() *Date {
	if m != nil {
		return m.LatestInsertDate
	}
	return nil
}

func (m *CardStack) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CardStack) GetNumSeen() int32 {
	if m != nil && m.NumSeen != nil {
		return *m.NumSeen
	}
	return 0
}

type DeckCardData struct {
	Def              *CardDef `protobuf:"bytes,1,opt,name=def" json:"def,omitempty"`
	Handle           *int32   `protobuf:"varint,2,opt,name=handle" json:"handle,omitempty"`
	Qty              *int32   `protobuf:"varint,3,opt,name=qty" json:"qty,omitempty"`
	Prev             *int32   `protobuf:"varint,5,opt,name=prev" json:"prev,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DeckCardData) Reset()         { *m = DeckCardData{} }
func (m *DeckCardData) String() string { return proto.CompactTextString(m) }
func (*DeckCardData) ProtoMessage()    {}

func (m *DeckCardData) GetDef() *CardDef {
	if m != nil {
		return m.Def
	}
	return nil
}

func (m *DeckCardData) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *DeckCardData) GetQty() int32 {
	if m != nil && m.Qty != nil {
		return *m.Qty
	}
	return 0
}

func (m *DeckCardData) GetPrev() int32 {
	if m != nil && m.Prev != nil {
		return *m.Prev
	}
	return 0
}

type DeckInfo struct {
	Id               *int64             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CardBack         *int32             `protobuf:"varint,3,opt,name=card_back" json:"card_back,omitempty"`
	Hero             *int32             `protobuf:"varint,4,opt,name=hero" json:"hero,omitempty"`
	DeckType         *DeckInfo_DeckType `protobuf:"varint,5,opt,name=deck_type,enum=PegasusShared.DeckInfo_DeckType,def=1" json:"deck_type,omitempty"`
	Validity         *int64             `protobuf:"varint,6,opt,name=validity" json:"validity,omitempty"`
	HeroPremium      *int32             `protobuf:"varint,7,opt,name=hero_premium" json:"hero_premium,omitempty"`
	CardBackOverride *bool              `protobuf:"varint,8,opt,name=card_back_override" json:"card_back_override,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *DeckInfo) Reset()         { *m = DeckInfo{} }
func (m *DeckInfo) String() string { return proto.CompactTextString(m) }
func (*DeckInfo) ProtoMessage()    {}

const Default_DeckInfo_DeckType DeckInfo_DeckType = DeckInfo_NORMAL_DECK

func (m *DeckInfo) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *DeckInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeckInfo) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *DeckInfo) GetHero() int32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

func (m *DeckInfo) GetDeckType() DeckInfo_DeckType {
	if m != nil && m.DeckType != nil {
		return *m.DeckType
	}
	return Default_DeckInfo_DeckType
}

func (m *DeckInfo) GetValidity() int64 {
	if m != nil && m.Validity != nil {
		return *m.Validity
	}
	return 0
}

func (m *DeckInfo) GetHeroPremium() int32 {
	if m != nil && m.HeroPremium != nil {
		return *m.HeroPremium
	}
	return 0
}

func (m *DeckInfo) GetCardBackOverride() bool {
	if m != nil && m.CardBackOverride != nil {
		return *m.CardBackOverride
	}
	return false
}

type Platform struct {
	Os               *int32  `protobuf:"varint,1,opt,name=os" json:"os,omitempty"`
	Screen           *int32  `protobuf:"varint,2,opt,name=screen" json:"screen,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Platform) Reset()         { *m = Platform{} }
func (m *Platform) String() string { return proto.CompactTextString(m) }
func (*Platform) ProtoMessage()    {}

func (m *Platform) GetOs() int32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func (m *Platform) GetScreen() int32 {
	if m != nil && m.Screen != nil {
		return *m.Screen
	}
	return 0
}

func (m *Platform) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type PlayQueueInfo struct {
	GameType         *BnetGameType `protobuf:"varint,1,opt,name=game_type,enum=PegasusShared.BnetGameType" json:"game_type,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PlayQueueInfo) Reset()         { *m = PlayQueueInfo{} }
func (m *PlayQueueInfo) String() string { return proto.CompactTextString(m) }
func (*PlayQueueInfo) ProtoMessage()    {}

func (m *PlayQueueInfo) GetGameType() BnetGameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return BnetGameType_BGT_UNKNOWN
}

type ProfileNoticeAdventureProgress struct {
	WingId           *int32 `protobuf:"varint,1,opt,name=wing_id" json:"wing_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeAdventureProgress) Reset()         { *m = ProfileNoticeAdventureProgress{} }
func (m *ProfileNoticeAdventureProgress) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeAdventureProgress) ProtoMessage()    {}

func (m *ProfileNoticeAdventureProgress) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

type ProfileNoticeBonusStars struct {
	StarLevel        *int32 `protobuf:"varint,1,opt,name=star_level" json:"star_level,omitempty"`
	Stars            *int32 `protobuf:"varint,2,opt,name=stars" json:"stars,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeBonusStars) Reset()         { *m = ProfileNoticeBonusStars{} }
func (m *ProfileNoticeBonusStars) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeBonusStars) ProtoMessage()    {}

func (m *ProfileNoticeBonusStars) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *ProfileNoticeBonusStars) GetStars() int32 {
	if m != nil && m.Stars != nil {
		return *m.Stars
	}
	return 0
}

type ProfileNoticeCardBack struct {
	CardBack         *int32 `protobuf:"varint,1,opt,name=card_back" json:"card_back,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeCardBack) Reset()         { *m = ProfileNoticeCardBack{} }
func (m *ProfileNoticeCardBack) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeCardBack) ProtoMessage()    {}

func (m *ProfileNoticeCardBack) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

type ProfileNoticeDisconnectedGameResult struct {
	GameType         *GameType                                         `protobuf:"varint,8,opt,name=game_type,enum=PegasusShared.GameType" json:"game_type,omitempty"`
	MissionId        *int32                                            `protobuf:"varint,9,opt,name=mission_id" json:"mission_id,omitempty"`
	GameResult       *ProfileNoticeDisconnectedGameResult_GameResult   `protobuf:"varint,10,opt,name=game_result,enum=PegasusShared.ProfileNoticeDisconnectedGameResult_GameResult" json:"game_result,omitempty"`
	YourResult       *ProfileNoticeDisconnectedGameResult_PlayerResult `protobuf:"varint,11,opt,name=your_result,enum=PegasusShared.ProfileNoticeDisconnectedGameResult_PlayerResult" json:"your_result,omitempty"`
	OpponentResult   *ProfileNoticeDisconnectedGameResult_PlayerResult `protobuf:"varint,12,opt,name=opponent_result,enum=PegasusShared.ProfileNoticeDisconnectedGameResult_PlayerResult" json:"opponent_result,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *ProfileNoticeDisconnectedGameResult) Reset()         { *m = ProfileNoticeDisconnectedGameResult{} }
func (m *ProfileNoticeDisconnectedGameResult) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeDisconnectedGameResult) ProtoMessage()    {}

func (m *ProfileNoticeDisconnectedGameResult) GetGameType() GameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return GameType_GT_UNKNOWN
}

func (m *ProfileNoticeDisconnectedGameResult) GetMissionId() int32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *ProfileNoticeDisconnectedGameResult) GetGameResult() ProfileNoticeDisconnectedGameResult_GameResult {
	if m != nil && m.GameResult != nil {
		return *m.GameResult
	}
	return ProfileNoticeDisconnectedGameResult_GR_UNKNOWN
}

func (m *ProfileNoticeDisconnectedGameResult) GetYourResult() ProfileNoticeDisconnectedGameResult_PlayerResult {
	if m != nil && m.YourResult != nil {
		return *m.YourResult
	}
	return ProfileNoticeDisconnectedGameResult_PR_UNKNOWN
}

func (m *ProfileNoticeDisconnectedGameResult) GetOpponentResult() ProfileNoticeDisconnectedGameResult_PlayerResult {
	if m != nil && m.OpponentResult != nil {
		return *m.OpponentResult
	}
	return ProfileNoticeDisconnectedGameResult_PR_UNKNOWN
}

type ProfileNoticeMedal struct {
	StarLevel        *int32 `protobuf:"varint,1,opt,name=star_level" json:"star_level,omitempty"`
	LegendRank       *int32 `protobuf:"varint,2,opt,name=legend_rank" json:"legend_rank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeMedal) Reset()         { *m = ProfileNoticeMedal{} }
func (m *ProfileNoticeMedal) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeMedal) ProtoMessage()    {}

func (m *ProfileNoticeMedal) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *ProfileNoticeMedal) GetLegendRank() int32 {
	if m != nil && m.LegendRank != nil {
		return *m.LegendRank
	}
	return 0
}

type ProfileNoticePreconDeck struct {
	Deck             *int64 `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	Hero             *int32 `protobuf:"varint,2,opt,name=hero" json:"hero,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticePreconDeck) Reset()         { *m = ProfileNoticePreconDeck{} }
func (m *ProfileNoticePreconDeck) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticePreconDeck) ProtoMessage()    {}

func (m *ProfileNoticePreconDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *ProfileNoticePreconDeck) GetHero() int32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

type ProfileNoticePurchase struct {
	ProductId        *string `protobuf:"bytes,1,opt,name=product_id" json:"product_id,omitempty"`
	Data             *int64  `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Currency         *int32  `protobuf:"varint,3,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProfileNoticePurchase) Reset()         { *m = ProfileNoticePurchase{} }
func (m *ProfileNoticePurchase) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticePurchase) ProtoMessage()    {}

func (m *ProfileNoticePurchase) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *ProfileNoticePurchase) GetData() int64 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *ProfileNoticePurchase) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

type ProfileNoticeRewardBooster struct {
	BoosterType      *int32 `protobuf:"varint,1,opt,name=booster_type" json:"booster_type,omitempty"`
	BoosterCount     *int32 `protobuf:"varint,2,opt,name=booster_count" json:"booster_count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardBooster) Reset()         { *m = ProfileNoticeRewardBooster{} }
func (m *ProfileNoticeRewardBooster) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardBooster) ProtoMessage()    {}

func (m *ProfileNoticeRewardBooster) GetBoosterType() int32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

func (m *ProfileNoticeRewardBooster) GetBoosterCount() int32 {
	if m != nil && m.BoosterCount != nil {
		return *m.BoosterCount
	}
	return 0
}

type ProfileNoticeRewardCard struct {
	Card             *CardDef `protobuf:"bytes,1,opt,name=card" json:"card,omitempty"`
	Quantity         *int32   `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProfileNoticeRewardCard) Reset()         { *m = ProfileNoticeRewardCard{} }
func (m *ProfileNoticeRewardCard) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardCard) ProtoMessage()    {}

func (m *ProfileNoticeRewardCard) GetCard() *CardDef {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *ProfileNoticeRewardCard) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type ProfileNoticeRewardCard2X struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardCard2X) Reset()         { *m = ProfileNoticeRewardCard2X{} }
func (m *ProfileNoticeRewardCard2X) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardCard2X) ProtoMessage()    {}

type ProfileNoticeRewardDust struct {
	Amount           *int32 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardDust) Reset()         { *m = ProfileNoticeRewardDust{} }
func (m *ProfileNoticeRewardDust) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardDust) ProtoMessage()    {}

func (m *ProfileNoticeRewardDust) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type ProfileNoticeRewardForge struct {
	Quantity         *int32 `protobuf:"varint,1,opt,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardForge) Reset()         { *m = ProfileNoticeRewardForge{} }
func (m *ProfileNoticeRewardForge) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardForge) ProtoMessage()    {}

func (m *ProfileNoticeRewardForge) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type ProfileNoticeRewardGold struct {
	Amount           *int32 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardGold) Reset()         { *m = ProfileNoticeRewardGold{} }
func (m *ProfileNoticeRewardGold) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardGold) ProtoMessage()    {}

func (m *ProfileNoticeRewardGold) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type ProfileNoticeRewardMount struct {
	MountId          *int32 `protobuf:"varint,1,opt,name=mount_id" json:"mount_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardMount) Reset()         { *m = ProfileNoticeRewardMount{} }
func (m *ProfileNoticeRewardMount) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardMount) ProtoMessage()    {}

func (m *ProfileNoticeRewardMount) GetMountId() int32 {
	if m != nil && m.MountId != nil {
		return *m.MountId
	}
	return 0
}

func init() {
	proto.RegisterEnum("PegasusShared.BattlePayProvider", BattlePayProvider_name, BattlePayProvider_value)
	proto.RegisterEnum("PegasusShared.BnetGameType", BnetGameType_name, BnetGameType_value)
	proto.RegisterEnum("PegasusShared.DatabaseAction", DatabaseAction_name, DatabaseAction_value)
	proto.RegisterEnum("PegasusShared.DatabaseResult", DatabaseResult_name, DatabaseResult_value)
	proto.RegisterEnum("PegasusShared.GameType", GameType_name, GameType_value)
	proto.RegisterEnum("PegasusShared.ProtocolVersion", ProtocolVersion_name, ProtocolVersion_value)
	proto.RegisterEnum("PegasusShared.AdventureProgress_Flags", AdventureProgress_Flags_name, AdventureProgress_Flags_value)
	proto.RegisterEnum("PegasusShared.DeckInfo_DeckType", DeckInfo_DeckType_name, DeckInfo_DeckType_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeAdventureProgress_NoticeID", ProfileNoticeAdventureProgress_NoticeID_name, ProfileNoticeAdventureProgress_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeBonusStars_NoticeID", ProfileNoticeBonusStars_NoticeID_name, ProfileNoticeBonusStars_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeCardBack_NoticeID", ProfileNoticeCardBack_NoticeID_name, ProfileNoticeCardBack_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeDisconnectedGameResult_GameResult", ProfileNoticeDisconnectedGameResult_GameResult_name, ProfileNoticeDisconnectedGameResult_GameResult_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeDisconnectedGameResult_NoticeID", ProfileNoticeDisconnectedGameResult_NoticeID_name, ProfileNoticeDisconnectedGameResult_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeDisconnectedGameResult_PlayerResult", ProfileNoticeDisconnectedGameResult_PlayerResult_name, ProfileNoticeDisconnectedGameResult_PlayerResult_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeMedal_NoticeID", ProfileNoticeMedal_NoticeID_name, ProfileNoticeMedal_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticePreconDeck_NoticeID", ProfileNoticePreconDeck_NoticeID_name, ProfileNoticePreconDeck_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticePurchase_NoticeID", ProfileNoticePurchase_NoticeID_name, ProfileNoticePurchase_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeRewardBooster_NoticeID", ProfileNoticeRewardBooster_NoticeID_name, ProfileNoticeRewardBooster_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeRewardCard_NoticeID", ProfileNoticeRewardCard_NoticeID_name, ProfileNoticeRewardCard_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeRewardCard2X_NoticeID", ProfileNoticeRewardCard2X_NoticeID_name, ProfileNoticeRewardCard2X_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeRewardDust_NoticeID", ProfileNoticeRewardDust_NoticeID_name, ProfileNoticeRewardDust_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeRewardForge_NoticeID", ProfileNoticeRewardForge_NoticeID_name, ProfileNoticeRewardForge_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeRewardGold_NoticeID", ProfileNoticeRewardGold_NoticeID_name, ProfileNoticeRewardGold_NoticeID_value)
	proto.RegisterEnum("PegasusShared.ProfileNoticeRewardMount_NoticeID", ProfileNoticeRewardMount_NoticeID_name, ProfileNoticeRewardMount_NoticeID_value)
}
