// Code generated by protoc-gen-go.
// source: PegasusUtil.proto
// DO NOT EDIT!

/*
Package PegasusUtil is a generated protocol buffer package.

It is generated from these files:
	PegasusUtil.proto

It has these top-level messages:
	AccountLicenseAchieveResponse
	Achieve
	AchieveInfo
	Achieves
	AckAchieveProgress
	AckCardSeen
	AckNotice
	AcknowledgeBanner
	AckWingProgress
	AdventureOptions
	AdventureProgressResponse
	ArcaneDustBalance
	AssetsVersionResponse
	AtlasAchieve
	AtlasAchieveInfo
	AtlasAchieves
	AtlasAddBooster
	AtlasAddCard
	AtlasAddCardBack
	AtlasAddDraft
	AtlasBoosterHistory
	AtlasBooster
	AtlasBoosters
	AtlasCardBackHistory
	AtlasCardBacks
	AtlasCardHistory
	AtlasCardDetail
	AtlasCardDetails
	AtlasChangeArcaneDust
	AtlasChangeBonusGold
	AtlasChangeGold
	AtlasCollection
	AtlasCurrencyHistory
	AtlasCurrencyDetails
	AtlasCurrentDraft
	AtlasDeckCard
	AtlasDeck
	AtlasDecks
	AtlasDraftHistory
	AtlasDraftTicketHistory
	AtlasDraftTicket
	AtlasDrafts
	AtlasError
	AtlasGetAchieveInfo
	AtlasGetAchieves
	AtlasGetAdventureProgress
	AtlasGetBoosters
	AtlasGetCardBacks
	AtlasGetCardDetails
	AtlasGetCollection
	AtlasGetCurrencyDetails
	AtlasGetDecks
	AtlasGetDrafts
	AtlasGetOrders
	AtlasGetPlayerInfo
	AtlasOrder
	AtlasOrders
	AtlasReleaseMobilePurchaseLock
	AtlasRemoveBooster
	AtlasRemoveCard
	AtlasRemoveCardBack
	AtlasRemoveDraft
	AtlasRestoreCard
	AtlasSetAdventureProgress
	AtlasSuccess
	AtlasWingProgress
	AtlasAdventureProgress
	BoosterCard
	BoosterContent
	BoosterInfo
	AtlasPlayer
	BoosterList
	BoosterTally
	BoosterTallyList
	BoughtSoldCard
	BundleItem
	Bundle
	BuySellCard
	CancelPurchase
	CancelPurchaseResponse
	CancelQuest
	CancelQuestResponse
	CardBacks
	CardUseCount
	CardValue
	CardValues
	CheckAccountLicenseAchieve
	CheckAccountLicenses
	CheckGameLicenses
	CheckLicensesResponse
	ClientOption
	ClientOptions
	CloseCardMarket
	Collection
	CreateDeck
	DBAction
	DebugAuth
	DeckContents
	DeckCreated
	DeckDeleted
	DeckGainedCard
	DeckList
	DeckLostCard
	DeckRenamed
	DeckSetData
	DeleteDeck
	DevBnetIdentify
	Disconnected
	DoPurchase
	DraftAckRewards
	DraftBegin
	DraftBeginning
	DraftChosen
	DraftError
	DraftGetPicksAndContents
	DraftMakePick
	DraftRetire
	DraftRewardBag
	DraftRewardChest
	DraftChoicesAndContents
	DraftRetired
	DraftRewardsAcked
	DroppedRequest
	Error37
	GamesInfo
	GetAccountInfo
	GetAchieves
	GetAdventureProgress
	GetAssetsVersion
	GetBattlePayConfig
	GetBattlePayStatus
	GetDeck
	GetOptions
	GetPurchaseMethod
	GetThirdPartyPurchaseStatus
	GoldBalance
	GoldCostBooster
	BattlePayConfigResponse
	GuardianTrack
	GuardianVars
	MassDisenchantRequest
	MassDisenchantResponse
	MedalHistoryInfo
	MedalHistory
	MedalInfo
	NearbyPlayer
	NextHeroLevelReward
	HeroXPInfo
	HeroXP
	NOP
	OneClientTracking
	ClientTracking
	OpenBooster
	PlayerRecord
	PlayerRecords
	PlayQueue
	ProfileDeckLimit
	ProfileLastLogin
	ProfileNotice
	ProfileNotices
	ProfileProgress
	PurchaseError
	BattlePayStatusResponse
	PurchaseMethod
	PurchaseResponse
	PurchaseWithGold
	PurchaseWithGoldResponse
	RenameDeck
	RewardProgress
	SetAdventureOptions
	SetCardBack
	SetCardBackResponse
	SetOptions
	SetProgress
	SetProgressResponse
	SpecialEventTiming
	MassiveLoginReply
	Subscribe
	SubscribeResponse
	ThirdPartyPurchaseStatusResponse
	ThirdPartyReceiptData
	StartThirdPartyPurchase
	SubmitThirdPartyReceipt
	TriggerEventResponse
	TriggerLaunchDayEvent
	UpdateLogin
	UpdateLoginComplete
	UtilAuth
	UtilHandshake
	ValidateAchieve
	ValidateAchieveResponse
*/
package PegasusUtil

import proto "github.com/golang/protobuf/proto"
import math "math"
import PegasusShared "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type AccountLicenseAchieveResponse_PacketID int32

const (
	AccountLicenseAchieveResponse_ID AccountLicenseAchieveResponse_PacketID = 311
)

var AccountLicenseAchieveResponse_PacketID_name = map[int32]string{
	311: "ID",
}
var AccountLicenseAchieveResponse_PacketID_value = map[string]int32{
	"ID": 311,
}

func (x AccountLicenseAchieveResponse_PacketID) Enum() *AccountLicenseAchieveResponse_PacketID {
	p := new(AccountLicenseAchieveResponse_PacketID)
	*p = x
	return p
}
func (x AccountLicenseAchieveResponse_PacketID) String() string {
	return proto.EnumName(AccountLicenseAchieveResponse_PacketID_name, int32(x))
}
func (x *AccountLicenseAchieveResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountLicenseAchieveResponse_PacketID_value, data, "AccountLicenseAchieveResponse_PacketID")
	if err != nil {
		return err
	}
	*x = AccountLicenseAchieveResponse_PacketID(value)
	return nil
}

type AccountLicenseAchieveResponse_Result int32

const (
	AccountLicenseAchieveResponse_INVALID_ACHIEVE AccountLicenseAchieveResponse_Result = 1
	AccountLicenseAchieveResponse_NOT_ACTIVE      AccountLicenseAchieveResponse_Result = 2
	AccountLicenseAchieveResponse_IN_PROGRESS     AccountLicenseAchieveResponse_Result = 3
	AccountLicenseAchieveResponse_COMPLETE        AccountLicenseAchieveResponse_Result = 4
	AccountLicenseAchieveResponse_STATUS_UNKNOWN  AccountLicenseAchieveResponse_Result = 5
)

var AccountLicenseAchieveResponse_Result_name = map[int32]string{
	1: "INVALID_ACHIEVE",
	2: "NOT_ACTIVE",
	3: "IN_PROGRESS",
	4: "COMPLETE",
	5: "STATUS_UNKNOWN",
}
var AccountLicenseAchieveResponse_Result_value = map[string]int32{
	"INVALID_ACHIEVE": 1,
	"NOT_ACTIVE":      2,
	"IN_PROGRESS":     3,
	"COMPLETE":        4,
	"STATUS_UNKNOWN":  5,
}

func (x AccountLicenseAchieveResponse_Result) Enum() *AccountLicenseAchieveResponse_Result {
	p := new(AccountLicenseAchieveResponse_Result)
	*p = x
	return p
}
func (x AccountLicenseAchieveResponse_Result) String() string {
	return proto.EnumName(AccountLicenseAchieveResponse_Result_name, int32(x))
}
func (x *AccountLicenseAchieveResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountLicenseAchieveResponse_Result_value, data, "AccountLicenseAchieveResponse_Result")
	if err != nil {
		return err
	}
	*x = AccountLicenseAchieveResponse_Result(value)
	return nil
}

type Achieves_PacketID int32

const (
	Achieves_ID Achieves_PacketID = 252
)

var Achieves_PacketID_name = map[int32]string{
	252: "ID",
}
var Achieves_PacketID_value = map[string]int32{
	"ID": 252,
}

func (x Achieves_PacketID) Enum() *Achieves_PacketID {
	p := new(Achieves_PacketID)
	*p = x
	return p
}
func (x Achieves_PacketID) String() string {
	return proto.EnumName(Achieves_PacketID_name, int32(x))
}
func (x *Achieves_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Achieves_PacketID_value, data, "Achieves_PacketID")
	if err != nil {
		return err
	}
	*x = Achieves_PacketID(value)
	return nil
}

type AckAchieveProgress_PacketID int32

const (
	AckAchieveProgress_ID     AckAchieveProgress_PacketID = 243
	AckAchieveProgress_System AckAchieveProgress_PacketID = 0
)

var AckAchieveProgress_PacketID_name = map[int32]string{
	243: "ID",
	0:   "System",
}
var AckAchieveProgress_PacketID_value = map[string]int32{
	"ID":     243,
	"System": 0,
}

func (x AckAchieveProgress_PacketID) Enum() *AckAchieveProgress_PacketID {
	p := new(AckAchieveProgress_PacketID)
	*p = x
	return p
}
func (x AckAchieveProgress_PacketID) String() string {
	return proto.EnumName(AckAchieveProgress_PacketID_name, int32(x))
}
func (x *AckAchieveProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckAchieveProgress_PacketID_value, data, "AckAchieveProgress_PacketID")
	if err != nil {
		return err
	}
	*x = AckAchieveProgress_PacketID(value)
	return nil
}

type AckCardSeen_PacketID int32

const (
	AckCardSeen_ID     AckCardSeen_PacketID = 223
	AckCardSeen_System AckCardSeen_PacketID = 0
)

var AckCardSeen_PacketID_name = map[int32]string{
	223: "ID",
	0:   "System",
}
var AckCardSeen_PacketID_value = map[string]int32{
	"ID":     223,
	"System": 0,
}

func (x AckCardSeen_PacketID) Enum() *AckCardSeen_PacketID {
	p := new(AckCardSeen_PacketID)
	*p = x
	return p
}
func (x AckCardSeen_PacketID) String() string {
	return proto.EnumName(AckCardSeen_PacketID_name, int32(x))
}
func (x *AckCardSeen_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckCardSeen_PacketID_value, data, "AckCardSeen_PacketID")
	if err != nil {
		return err
	}
	*x = AckCardSeen_PacketID(value)
	return nil
}

type AckNotice_PacketID int32

const (
	AckNotice_ID     AckNotice_PacketID = 213
	AckNotice_System AckNotice_PacketID = 0
)

var AckNotice_PacketID_name = map[int32]string{
	213: "ID",
	0:   "System",
}
var AckNotice_PacketID_value = map[string]int32{
	"ID":     213,
	"System": 0,
}

func (x AckNotice_PacketID) Enum() *AckNotice_PacketID {
	p := new(AckNotice_PacketID)
	*p = x
	return p
}
func (x AckNotice_PacketID) String() string {
	return proto.EnumName(AckNotice_PacketID_name, int32(x))
}
func (x *AckNotice_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckNotice_PacketID_value, data, "AckNotice_PacketID")
	if err != nil {
		return err
	}
	*x = AckNotice_PacketID(value)
	return nil
}

type AcknowledgeBanner_PacketID int32

const (
	AcknowledgeBanner_ID     AcknowledgeBanner_PacketID = 309
	AcknowledgeBanner_System AcknowledgeBanner_PacketID = 0
)

var AcknowledgeBanner_PacketID_name = map[int32]string{
	309: "ID",
	0:   "System",
}
var AcknowledgeBanner_PacketID_value = map[string]int32{
	"ID":     309,
	"System": 0,
}

func (x AcknowledgeBanner_PacketID) Enum() *AcknowledgeBanner_PacketID {
	p := new(AcknowledgeBanner_PacketID)
	*p = x
	return p
}
func (x AcknowledgeBanner_PacketID) String() string {
	return proto.EnumName(AcknowledgeBanner_PacketID_name, int32(x))
}
func (x *AcknowledgeBanner_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcknowledgeBanner_PacketID_value, data, "AcknowledgeBanner_PacketID")
	if err != nil {
		return err
	}
	*x = AcknowledgeBanner_PacketID(value)
	return nil
}

type AckWingProgress_PacketID int32

const (
	AckWingProgress_ID     AckWingProgress_PacketID = 308
	AckWingProgress_System AckWingProgress_PacketID = 0
)

var AckWingProgress_PacketID_name = map[int32]string{
	308: "ID",
	0:   "System",
}
var AckWingProgress_PacketID_value = map[string]int32{
	"ID":     308,
	"System": 0,
}

func (x AckWingProgress_PacketID) Enum() *AckWingProgress_PacketID {
	p := new(AckWingProgress_PacketID)
	*p = x
	return p
}
func (x AckWingProgress_PacketID) String() string {
	return proto.EnumName(AckWingProgress_PacketID_name, int32(x))
}
func (x *AckWingProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckWingProgress_PacketID_value, data, "AckWingProgress_PacketID")
	if err != nil {
		return err
	}
	*x = AckWingProgress_PacketID(value)
	return nil
}

type AdventureProgressResponse_PacketID int32

const (
	AdventureProgressResponse_ID AdventureProgressResponse_PacketID = 306
)

var AdventureProgressResponse_PacketID_name = map[int32]string{
	306: "ID",
}
var AdventureProgressResponse_PacketID_value = map[string]int32{
	"ID": 306,
}

func (x AdventureProgressResponse_PacketID) Enum() *AdventureProgressResponse_PacketID {
	p := new(AdventureProgressResponse_PacketID)
	*p = x
	return p
}
func (x AdventureProgressResponse_PacketID) String() string {
	return proto.EnumName(AdventureProgressResponse_PacketID_name, int32(x))
}
func (x *AdventureProgressResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureProgressResponse_PacketID_value, data, "AdventureProgressResponse_PacketID")
	if err != nil {
		return err
	}
	*x = AdventureProgressResponse_PacketID(value)
	return nil
}

type ArcaneDustBalance_PacketID int32

const (
	ArcaneDustBalance_ID ArcaneDustBalance_PacketID = 262
)

var ArcaneDustBalance_PacketID_name = map[int32]string{
	262: "ID",
}
var ArcaneDustBalance_PacketID_value = map[string]int32{
	"ID": 262,
}

func (x ArcaneDustBalance_PacketID) Enum() *ArcaneDustBalance_PacketID {
	p := new(ArcaneDustBalance_PacketID)
	*p = x
	return p
}
func (x ArcaneDustBalance_PacketID) String() string {
	return proto.EnumName(ArcaneDustBalance_PacketID_name, int32(x))
}
func (x *ArcaneDustBalance_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArcaneDustBalance_PacketID_value, data, "ArcaneDustBalance_PacketID")
	if err != nil {
		return err
	}
	*x = ArcaneDustBalance_PacketID(value)
	return nil
}

type AssetsVersionResponse_PacketID int32

const (
	AssetsVersionResponse_ID AssetsVersionResponse_PacketID = 304
)

var AssetsVersionResponse_PacketID_name = map[int32]string{
	304: "ID",
}
var AssetsVersionResponse_PacketID_value = map[string]int32{
	"ID": 304,
}

func (x AssetsVersionResponse_PacketID) Enum() *AssetsVersionResponse_PacketID {
	p := new(AssetsVersionResponse_PacketID)
	*p = x
	return p
}
func (x AssetsVersionResponse_PacketID) String() string {
	return proto.EnumName(AssetsVersionResponse_PacketID_name, int32(x))
}
func (x *AssetsVersionResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AssetsVersionResponse_PacketID_value, data, "AssetsVersionResponse_PacketID")
	if err != nil {
		return err
	}
	*x = AssetsVersionResponse_PacketID(value)
	return nil
}

type AtlasAchieveInfo_PacketID int32

const (
	AtlasAchieveInfo_ID AtlasAchieveInfo_PacketID = 108
)

var AtlasAchieveInfo_PacketID_name = map[int32]string{
	108: "ID",
}
var AtlasAchieveInfo_PacketID_value = map[string]int32{
	"ID": 108,
}

func (x AtlasAchieveInfo_PacketID) Enum() *AtlasAchieveInfo_PacketID {
	p := new(AtlasAchieveInfo_PacketID)
	*p = x
	return p
}
func (x AtlasAchieveInfo_PacketID) String() string {
	return proto.EnumName(AtlasAchieveInfo_PacketID_name, int32(x))
}
func (x *AtlasAchieveInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasAchieveInfo_PacketID_value, data, "AtlasAchieveInfo_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasAchieveInfo_PacketID(value)
	return nil
}

type AtlasAchieves_PacketID int32

const (
	AtlasAchieves_ID AtlasAchieves_PacketID = 107
)

var AtlasAchieves_PacketID_name = map[int32]string{
	107: "ID",
}
var AtlasAchieves_PacketID_value = map[string]int32{
	"ID": 107,
}

func (x AtlasAchieves_PacketID) Enum() *AtlasAchieves_PacketID {
	p := new(AtlasAchieves_PacketID)
	*p = x
	return p
}
func (x AtlasAchieves_PacketID) String() string {
	return proto.EnumName(AtlasAchieves_PacketID_name, int32(x))
}
func (x *AtlasAchieves_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasAchieves_PacketID_value, data, "AtlasAchieves_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasAchieves_PacketID(value)
	return nil
}

type AtlasAddBooster_PacketID int32

const (
	AtlasAddBooster_ID AtlasAddBooster_PacketID = 413
)

var AtlasAddBooster_PacketID_name = map[int32]string{
	413: "ID",
}
var AtlasAddBooster_PacketID_value = map[string]int32{
	"ID": 413,
}

func (x AtlasAddBooster_PacketID) Enum() *AtlasAddBooster_PacketID {
	p := new(AtlasAddBooster_PacketID)
	*p = x
	return p
}
func (x AtlasAddBooster_PacketID) String() string {
	return proto.EnumName(AtlasAddBooster_PacketID_name, int32(x))
}
func (x *AtlasAddBooster_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasAddBooster_PacketID_value, data, "AtlasAddBooster_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasAddBooster_PacketID(value)
	return nil
}

type AtlasAddCard_PacketID int32

const (
	AtlasAddCard_ID AtlasAddCard_PacketID = 405
)

var AtlasAddCard_PacketID_name = map[int32]string{
	405: "ID",
}
var AtlasAddCard_PacketID_value = map[string]int32{
	"ID": 405,
}

func (x AtlasAddCard_PacketID) Enum() *AtlasAddCard_PacketID {
	p := new(AtlasAddCard_PacketID)
	*p = x
	return p
}
func (x AtlasAddCard_PacketID) String() string {
	return proto.EnumName(AtlasAddCard_PacketID_name, int32(x))
}
func (x *AtlasAddCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasAddCard_PacketID_value, data, "AtlasAddCard_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasAddCard_PacketID(value)
	return nil
}

type AtlasAddCardBack_PacketID int32

const (
	AtlasAddCardBack_ID AtlasAddCardBack_PacketID = 422
)

var AtlasAddCardBack_PacketID_name = map[int32]string{
	422: "ID",
}
var AtlasAddCardBack_PacketID_value = map[string]int32{
	"ID": 422,
}

func (x AtlasAddCardBack_PacketID) Enum() *AtlasAddCardBack_PacketID {
	p := new(AtlasAddCardBack_PacketID)
	*p = x
	return p
}
func (x AtlasAddCardBack_PacketID) String() string {
	return proto.EnumName(AtlasAddCardBack_PacketID_name, int32(x))
}
func (x *AtlasAddCardBack_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasAddCardBack_PacketID_value, data, "AtlasAddCardBack_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasAddCardBack_PacketID(value)
	return nil
}

type AtlasAddDraft_PacketID int32

const (
	AtlasAddDraft_ID AtlasAddDraft_PacketID = 416
)

var AtlasAddDraft_PacketID_name = map[int32]string{
	416: "ID",
}
var AtlasAddDraft_PacketID_value = map[string]int32{
	"ID": 416,
}

func (x AtlasAddDraft_PacketID) Enum() *AtlasAddDraft_PacketID {
	p := new(AtlasAddDraft_PacketID)
	*p = x
	return p
}
func (x AtlasAddDraft_PacketID) String() string {
	return proto.EnumName(AtlasAddDraft_PacketID_name, int32(x))
}
func (x *AtlasAddDraft_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasAddDraft_PacketID_value, data, "AtlasAddDraft_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasAddDraft_PacketID(value)
	return nil
}

type AtlasBoosters_PacketID int32

const (
	AtlasBoosters_ID AtlasBoosters_PacketID = 109
)

var AtlasBoosters_PacketID_name = map[int32]string{
	109: "ID",
}
var AtlasBoosters_PacketID_value = map[string]int32{
	"ID": 109,
}

func (x AtlasBoosters_PacketID) Enum() *AtlasBoosters_PacketID {
	p := new(AtlasBoosters_PacketID)
	*p = x
	return p
}
func (x AtlasBoosters_PacketID) String() string {
	return proto.EnumName(AtlasBoosters_PacketID_name, int32(x))
}
func (x *AtlasBoosters_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasBoosters_PacketID_value, data, "AtlasBoosters_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasBoosters_PacketID(value)
	return nil
}

type AtlasCardBacks_PacketID int32

const (
	AtlasCardBacks_ID AtlasCardBacks_PacketID = 112
)

var AtlasCardBacks_PacketID_name = map[int32]string{
	112: "ID",
}
var AtlasCardBacks_PacketID_value = map[string]int32{
	"ID": 112,
}

func (x AtlasCardBacks_PacketID) Enum() *AtlasCardBacks_PacketID {
	p := new(AtlasCardBacks_PacketID)
	*p = x
	return p
}
func (x AtlasCardBacks_PacketID) String() string {
	return proto.EnumName(AtlasCardBacks_PacketID_name, int32(x))
}
func (x *AtlasCardBacks_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasCardBacks_PacketID_value, data, "AtlasCardBacks_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasCardBacks_PacketID(value)
	return nil
}

type AtlasCardDetails_PacketID int32

const (
	AtlasCardDetails_ID AtlasCardDetails_PacketID = 103
)

var AtlasCardDetails_PacketID_name = map[int32]string{
	103: "ID",
}
var AtlasCardDetails_PacketID_value = map[string]int32{
	"ID": 103,
}

func (x AtlasCardDetails_PacketID) Enum() *AtlasCardDetails_PacketID {
	p := new(AtlasCardDetails_PacketID)
	*p = x
	return p
}
func (x AtlasCardDetails_PacketID) String() string {
	return proto.EnumName(AtlasCardDetails_PacketID_name, int32(x))
}
func (x *AtlasCardDetails_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasCardDetails_PacketID_value, data, "AtlasCardDetails_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasCardDetails_PacketID(value)
	return nil
}

type AtlasChangeArcaneDust_PacketID int32

const (
	AtlasChangeArcaneDust_ID AtlasChangeArcaneDust_PacketID = 407
)

var AtlasChangeArcaneDust_PacketID_name = map[int32]string{
	407: "ID",
}
var AtlasChangeArcaneDust_PacketID_value = map[string]int32{
	"ID": 407,
}

func (x AtlasChangeArcaneDust_PacketID) Enum() *AtlasChangeArcaneDust_PacketID {
	p := new(AtlasChangeArcaneDust_PacketID)
	*p = x
	return p
}
func (x AtlasChangeArcaneDust_PacketID) String() string {
	return proto.EnumName(AtlasChangeArcaneDust_PacketID_name, int32(x))
}
func (x *AtlasChangeArcaneDust_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasChangeArcaneDust_PacketID_value, data, "AtlasChangeArcaneDust_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasChangeArcaneDust_PacketID(value)
	return nil
}

type AtlasChangeBonusGold_PacketID int32

const (
	AtlasChangeBonusGold_ID AtlasChangeBonusGold_PacketID = 420
)

var AtlasChangeBonusGold_PacketID_name = map[int32]string{
	420: "ID",
}
var AtlasChangeBonusGold_PacketID_value = map[string]int32{
	"ID": 420,
}

func (x AtlasChangeBonusGold_PacketID) Enum() *AtlasChangeBonusGold_PacketID {
	p := new(AtlasChangeBonusGold_PacketID)
	*p = x
	return p
}
func (x AtlasChangeBonusGold_PacketID) String() string {
	return proto.EnumName(AtlasChangeBonusGold_PacketID_name, int32(x))
}
func (x *AtlasChangeBonusGold_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasChangeBonusGold_PacketID_value, data, "AtlasChangeBonusGold_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasChangeBonusGold_PacketID(value)
	return nil
}

type AtlasChangeGold_PacketID int32

const (
	AtlasChangeGold_ID AtlasChangeGold_PacketID = 418
)

var AtlasChangeGold_PacketID_name = map[int32]string{
	418: "ID",
}
var AtlasChangeGold_PacketID_value = map[string]int32{
	"ID": 418,
}

func (x AtlasChangeGold_PacketID) Enum() *AtlasChangeGold_PacketID {
	p := new(AtlasChangeGold_PacketID)
	*p = x
	return p
}
func (x AtlasChangeGold_PacketID) String() string {
	return proto.EnumName(AtlasChangeGold_PacketID_name, int32(x))
}
func (x *AtlasChangeGold_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasChangeGold_PacketID_value, data, "AtlasChangeGold_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasChangeGold_PacketID(value)
	return nil
}

type AtlasCollection_PacketID int32

const (
	AtlasCollection_ID AtlasCollection_PacketID = 102
)

var AtlasCollection_PacketID_name = map[int32]string{
	102: "ID",
}
var AtlasCollection_PacketID_value = map[string]int32{
	"ID": 102,
}

func (x AtlasCollection_PacketID) Enum() *AtlasCollection_PacketID {
	p := new(AtlasCollection_PacketID)
	*p = x
	return p
}
func (x AtlasCollection_PacketID) String() string {
	return proto.EnumName(AtlasCollection_PacketID_name, int32(x))
}
func (x *AtlasCollection_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasCollection_PacketID_value, data, "AtlasCollection_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasCollection_PacketID(value)
	return nil
}

type AtlasCurrencyDetails_PacketID int32

const (
	AtlasCurrencyDetails_ID AtlasCurrencyDetails_PacketID = 111
)

var AtlasCurrencyDetails_PacketID_name = map[int32]string{
	111: "ID",
}
var AtlasCurrencyDetails_PacketID_value = map[string]int32{
	"ID": 111,
}

func (x AtlasCurrencyDetails_PacketID) Enum() *AtlasCurrencyDetails_PacketID {
	p := new(AtlasCurrencyDetails_PacketID)
	*p = x
	return p
}
func (x AtlasCurrencyDetails_PacketID) String() string {
	return proto.EnumName(AtlasCurrencyDetails_PacketID_name, int32(x))
}
func (x *AtlasCurrencyDetails_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasCurrencyDetails_PacketID_value, data, "AtlasCurrencyDetails_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasCurrencyDetails_PacketID(value)
	return nil
}

type AtlasDecks_PacketID int32

const (
	AtlasDecks_ID AtlasDecks_PacketID = 104
)

var AtlasDecks_PacketID_name = map[int32]string{
	104: "ID",
}
var AtlasDecks_PacketID_value = map[string]int32{
	"ID": 104,
}

func (x AtlasDecks_PacketID) Enum() *AtlasDecks_PacketID {
	p := new(AtlasDecks_PacketID)
	*p = x
	return p
}
func (x AtlasDecks_PacketID) String() string {
	return proto.EnumName(AtlasDecks_PacketID_name, int32(x))
}
func (x *AtlasDecks_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasDecks_PacketID_value, data, "AtlasDecks_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasDecks_PacketID(value)
	return nil
}

type AtlasDrafts_PacketID int32

const (
	AtlasDrafts_ID AtlasDrafts_PacketID = 110
)

var AtlasDrafts_PacketID_name = map[int32]string{
	110: "ID",
}
var AtlasDrafts_PacketID_value = map[string]int32{
	"ID": 110,
}

func (x AtlasDrafts_PacketID) Enum() *AtlasDrafts_PacketID {
	p := new(AtlasDrafts_PacketID)
	*p = x
	return p
}
func (x AtlasDrafts_PacketID) String() string {
	return proto.EnumName(AtlasDrafts_PacketID_name, int32(x))
}
func (x *AtlasDrafts_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasDrafts_PacketID_value, data, "AtlasDrafts_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasDrafts_PacketID(value)
	return nil
}

type AtlasError_ErrorType int32

const (
	AtlasError_BNET_ERROR    AtlasError_ErrorType = 1
	AtlasError_PEGASUS_ERROR AtlasError_ErrorType = 2
)

var AtlasError_ErrorType_name = map[int32]string{
	1: "BNET_ERROR",
	2: "PEGASUS_ERROR",
}
var AtlasError_ErrorType_value = map[string]int32{
	"BNET_ERROR":    1,
	"PEGASUS_ERROR": 2,
}

func (x AtlasError_ErrorType) Enum() *AtlasError_ErrorType {
	p := new(AtlasError_ErrorType)
	*p = x
	return p
}
func (x AtlasError_ErrorType) String() string {
	return proto.EnumName(AtlasError_ErrorType_name, int32(x))
}
func (x *AtlasError_ErrorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasError_ErrorType_value, data, "AtlasError_ErrorType")
	if err != nil {
		return err
	}
	*x = AtlasError_ErrorType(value)
	return nil
}

type AtlasError_PacketID int32

const (
	AtlasError_ID AtlasError_PacketID = 101
)

var AtlasError_PacketID_name = map[int32]string{
	101: "ID",
}
var AtlasError_PacketID_value = map[string]int32{
	"ID": 101,
}

func (x AtlasError_PacketID) Enum() *AtlasError_PacketID {
	p := new(AtlasError_PacketID)
	*p = x
	return p
}
func (x AtlasError_PacketID) String() string {
	return proto.EnumName(AtlasError_PacketID_name, int32(x))
}
func (x *AtlasError_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasError_PacketID_value, data, "AtlasError_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasError_PacketID(value)
	return nil
}

type AtlasGetAchieveInfo_PacketID int32

const (
	AtlasGetAchieveInfo_ID AtlasGetAchieveInfo_PacketID = 411
)

var AtlasGetAchieveInfo_PacketID_name = map[int32]string{
	411: "ID",
}
var AtlasGetAchieveInfo_PacketID_value = map[string]int32{
	"ID": 411,
}

func (x AtlasGetAchieveInfo_PacketID) Enum() *AtlasGetAchieveInfo_PacketID {
	p := new(AtlasGetAchieveInfo_PacketID)
	*p = x
	return p
}
func (x AtlasGetAchieveInfo_PacketID) String() string {
	return proto.EnumName(AtlasGetAchieveInfo_PacketID_name, int32(x))
}
func (x *AtlasGetAchieveInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetAchieveInfo_PacketID_value, data, "AtlasGetAchieveInfo_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetAchieveInfo_PacketID(value)
	return nil
}

type AtlasGetAchieves_PacketID int32

const (
	AtlasGetAchieves_ID AtlasGetAchieves_PacketID = 410
)

var AtlasGetAchieves_PacketID_name = map[int32]string{
	410: "ID",
}
var AtlasGetAchieves_PacketID_value = map[string]int32{
	"ID": 410,
}

func (x AtlasGetAchieves_PacketID) Enum() *AtlasGetAchieves_PacketID {
	p := new(AtlasGetAchieves_PacketID)
	*p = x
	return p
}
func (x AtlasGetAchieves_PacketID) String() string {
	return proto.EnumName(AtlasGetAchieves_PacketID_name, int32(x))
}
func (x *AtlasGetAchieves_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetAchieves_PacketID_value, data, "AtlasGetAchieves_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetAchieves_PacketID(value)
	return nil
}

type AtlasGetAdventureProgress_PacketID int32

const (
	AtlasGetAdventureProgress_ID AtlasGetAdventureProgress_PacketID = 426
)

var AtlasGetAdventureProgress_PacketID_name = map[int32]string{
	426: "ID",
}
var AtlasGetAdventureProgress_PacketID_value = map[string]int32{
	"ID": 426,
}

func (x AtlasGetAdventureProgress_PacketID) Enum() *AtlasGetAdventureProgress_PacketID {
	p := new(AtlasGetAdventureProgress_PacketID)
	*p = x
	return p
}
func (x AtlasGetAdventureProgress_PacketID) String() string {
	return proto.EnumName(AtlasGetAdventureProgress_PacketID_name, int32(x))
}
func (x *AtlasGetAdventureProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetAdventureProgress_PacketID_value, data, "AtlasGetAdventureProgress_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetAdventureProgress_PacketID(value)
	return nil
}

type AtlasGetBoosters_PacketID int32

const (
	AtlasGetBoosters_ID AtlasGetBoosters_PacketID = 412
)

var AtlasGetBoosters_PacketID_name = map[int32]string{
	412: "ID",
}
var AtlasGetBoosters_PacketID_value = map[string]int32{
	"ID": 412,
}

func (x AtlasGetBoosters_PacketID) Enum() *AtlasGetBoosters_PacketID {
	p := new(AtlasGetBoosters_PacketID)
	*p = x
	return p
}
func (x AtlasGetBoosters_PacketID) String() string {
	return proto.EnumName(AtlasGetBoosters_PacketID_name, int32(x))
}
func (x *AtlasGetBoosters_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetBoosters_PacketID_value, data, "AtlasGetBoosters_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetBoosters_PacketID(value)
	return nil
}

type AtlasGetCardBacks_PacketID int32

const (
	AtlasGetCardBacks_ID AtlasGetCardBacks_PacketID = 421
)

var AtlasGetCardBacks_PacketID_name = map[int32]string{
	421: "ID",
}
var AtlasGetCardBacks_PacketID_value = map[string]int32{
	"ID": 421,
}

func (x AtlasGetCardBacks_PacketID) Enum() *AtlasGetCardBacks_PacketID {
	p := new(AtlasGetCardBacks_PacketID)
	*p = x
	return p
}
func (x AtlasGetCardBacks_PacketID) String() string {
	return proto.EnumName(AtlasGetCardBacks_PacketID_name, int32(x))
}
func (x *AtlasGetCardBacks_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetCardBacks_PacketID_value, data, "AtlasGetCardBacks_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetCardBacks_PacketID(value)
	return nil
}

type AtlasGetCardDetails_PacketID int32

const (
	AtlasGetCardDetails_ID AtlasGetCardDetails_PacketID = 403
)

var AtlasGetCardDetails_PacketID_name = map[int32]string{
	403: "ID",
}
var AtlasGetCardDetails_PacketID_value = map[string]int32{
	"ID": 403,
}

func (x AtlasGetCardDetails_PacketID) Enum() *AtlasGetCardDetails_PacketID {
	p := new(AtlasGetCardDetails_PacketID)
	*p = x
	return p
}
func (x AtlasGetCardDetails_PacketID) String() string {
	return proto.EnumName(AtlasGetCardDetails_PacketID_name, int32(x))
}
func (x *AtlasGetCardDetails_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetCardDetails_PacketID_value, data, "AtlasGetCardDetails_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetCardDetails_PacketID(value)
	return nil
}

type AtlasGetCollection_PacketID int32

const (
	AtlasGetCollection_ID AtlasGetCollection_PacketID = 402
)

var AtlasGetCollection_PacketID_name = map[int32]string{
	402: "ID",
}
var AtlasGetCollection_PacketID_value = map[string]int32{
	"ID": 402,
}

func (x AtlasGetCollection_PacketID) Enum() *AtlasGetCollection_PacketID {
	p := new(AtlasGetCollection_PacketID)
	*p = x
	return p
}
func (x AtlasGetCollection_PacketID) String() string {
	return proto.EnumName(AtlasGetCollection_PacketID_name, int32(x))
}
func (x *AtlasGetCollection_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetCollection_PacketID_value, data, "AtlasGetCollection_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetCollection_PacketID(value)
	return nil
}

type AtlasGetCurrencyDetails_PacketID int32

const (
	AtlasGetCurrencyDetails_ID AtlasGetCurrencyDetails_PacketID = 419
)

var AtlasGetCurrencyDetails_PacketID_name = map[int32]string{
	419: "ID",
}
var AtlasGetCurrencyDetails_PacketID_value = map[string]int32{
	"ID": 419,
}

func (x AtlasGetCurrencyDetails_PacketID) Enum() *AtlasGetCurrencyDetails_PacketID {
	p := new(AtlasGetCurrencyDetails_PacketID)
	*p = x
	return p
}
func (x AtlasGetCurrencyDetails_PacketID) String() string {
	return proto.EnumName(AtlasGetCurrencyDetails_PacketID_name, int32(x))
}
func (x *AtlasGetCurrencyDetails_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetCurrencyDetails_PacketID_value, data, "AtlasGetCurrencyDetails_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetCurrencyDetails_PacketID(value)
	return nil
}

type AtlasGetDecks_PacketID int32

const (
	AtlasGetDecks_ID AtlasGetDecks_PacketID = 404
)

var AtlasGetDecks_PacketID_name = map[int32]string{
	404: "ID",
}
var AtlasGetDecks_PacketID_value = map[string]int32{
	"ID": 404,
}

func (x AtlasGetDecks_PacketID) Enum() *AtlasGetDecks_PacketID {
	p := new(AtlasGetDecks_PacketID)
	*p = x
	return p
}
func (x AtlasGetDecks_PacketID) String() string {
	return proto.EnumName(AtlasGetDecks_PacketID_name, int32(x))
}
func (x *AtlasGetDecks_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetDecks_PacketID_value, data, "AtlasGetDecks_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetDecks_PacketID(value)
	return nil
}

type AtlasGetDrafts_PacketID int32

const (
	AtlasGetDrafts_ID AtlasGetDrafts_PacketID = 415
)

var AtlasGetDrafts_PacketID_name = map[int32]string{
	415: "ID",
}
var AtlasGetDrafts_PacketID_value = map[string]int32{
	"ID": 415,
}

func (x AtlasGetDrafts_PacketID) Enum() *AtlasGetDrafts_PacketID {
	p := new(AtlasGetDrafts_PacketID)
	*p = x
	return p
}
func (x AtlasGetDrafts_PacketID) String() string {
	return proto.EnumName(AtlasGetDrafts_PacketID_name, int32(x))
}
func (x *AtlasGetDrafts_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetDrafts_PacketID_value, data, "AtlasGetDrafts_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetDrafts_PacketID(value)
	return nil
}

type AtlasGetOrders_PacketID int32

const (
	AtlasGetOrders_ID AtlasGetOrders_PacketID = 409
)

var AtlasGetOrders_PacketID_name = map[int32]string{
	409: "ID",
}
var AtlasGetOrders_PacketID_value = map[string]int32{
	"ID": 409,
}

func (x AtlasGetOrders_PacketID) Enum() *AtlasGetOrders_PacketID {
	p := new(AtlasGetOrders_PacketID)
	*p = x
	return p
}
func (x AtlasGetOrders_PacketID) String() string {
	return proto.EnumName(AtlasGetOrders_PacketID_name, int32(x))
}
func (x *AtlasGetOrders_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetOrders_PacketID_value, data, "AtlasGetOrders_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetOrders_PacketID(value)
	return nil
}

type AtlasGetPlayerInfo_PacketID int32

const (
	AtlasGetPlayerInfo_ID AtlasGetPlayerInfo_PacketID = 401
)

var AtlasGetPlayerInfo_PacketID_name = map[int32]string{
	401: "ID",
}
var AtlasGetPlayerInfo_PacketID_value = map[string]int32{
	"ID": 401,
}

func (x AtlasGetPlayerInfo_PacketID) Enum() *AtlasGetPlayerInfo_PacketID {
	p := new(AtlasGetPlayerInfo_PacketID)
	*p = x
	return p
}
func (x AtlasGetPlayerInfo_PacketID) String() string {
	return proto.EnumName(AtlasGetPlayerInfo_PacketID_name, int32(x))
}
func (x *AtlasGetPlayerInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasGetPlayerInfo_PacketID_value, data, "AtlasGetPlayerInfo_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasGetPlayerInfo_PacketID(value)
	return nil
}

type AtlasOrders_PacketID int32

const (
	AtlasOrders_ID AtlasOrders_PacketID = 106
)

var AtlasOrders_PacketID_name = map[int32]string{
	106: "ID",
}
var AtlasOrders_PacketID_value = map[string]int32{
	"ID": 106,
}

func (x AtlasOrders_PacketID) Enum() *AtlasOrders_PacketID {
	p := new(AtlasOrders_PacketID)
	*p = x
	return p
}
func (x AtlasOrders_PacketID) String() string {
	return proto.EnumName(AtlasOrders_PacketID_name, int32(x))
}
func (x *AtlasOrders_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasOrders_PacketID_value, data, "AtlasOrders_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasOrders_PacketID(value)
	return nil
}

type AtlasReleaseMobilePurchaseLock_PacketID int32

const (
	AtlasReleaseMobilePurchaseLock_ID AtlasReleaseMobilePurchaseLock_PacketID = 425
)

var AtlasReleaseMobilePurchaseLock_PacketID_name = map[int32]string{
	425: "ID",
}
var AtlasReleaseMobilePurchaseLock_PacketID_value = map[string]int32{
	"ID": 425,
}

func (x AtlasReleaseMobilePurchaseLock_PacketID) Enum() *AtlasReleaseMobilePurchaseLock_PacketID {
	p := new(AtlasReleaseMobilePurchaseLock_PacketID)
	*p = x
	return p
}
func (x AtlasReleaseMobilePurchaseLock_PacketID) String() string {
	return proto.EnumName(AtlasReleaseMobilePurchaseLock_PacketID_name, int32(x))
}
func (x *AtlasReleaseMobilePurchaseLock_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasReleaseMobilePurchaseLock_PacketID_value, data, "AtlasReleaseMobilePurchaseLock_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasReleaseMobilePurchaseLock_PacketID(value)
	return nil
}

type AtlasRemoveBooster_PacketID int32

const (
	AtlasRemoveBooster_ID AtlasRemoveBooster_PacketID = 414
)

var AtlasRemoveBooster_PacketID_name = map[int32]string{
	414: "ID",
}
var AtlasRemoveBooster_PacketID_value = map[string]int32{
	"ID": 414,
}

func (x AtlasRemoveBooster_PacketID) Enum() *AtlasRemoveBooster_PacketID {
	p := new(AtlasRemoveBooster_PacketID)
	*p = x
	return p
}
func (x AtlasRemoveBooster_PacketID) String() string {
	return proto.EnumName(AtlasRemoveBooster_PacketID_name, int32(x))
}
func (x *AtlasRemoveBooster_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasRemoveBooster_PacketID_value, data, "AtlasRemoveBooster_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasRemoveBooster_PacketID(value)
	return nil
}

type AtlasRemoveCard_PacketID int32

const (
	AtlasRemoveCard_ID AtlasRemoveCard_PacketID = 406
)

var AtlasRemoveCard_PacketID_name = map[int32]string{
	406: "ID",
}
var AtlasRemoveCard_PacketID_value = map[string]int32{
	"ID": 406,
}

func (x AtlasRemoveCard_PacketID) Enum() *AtlasRemoveCard_PacketID {
	p := new(AtlasRemoveCard_PacketID)
	*p = x
	return p
}
func (x AtlasRemoveCard_PacketID) String() string {
	return proto.EnumName(AtlasRemoveCard_PacketID_name, int32(x))
}
func (x *AtlasRemoveCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasRemoveCard_PacketID_value, data, "AtlasRemoveCard_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasRemoveCard_PacketID(value)
	return nil
}

type AtlasRemoveCardBack_PacketID int32

const (
	AtlasRemoveCardBack_ID AtlasRemoveCardBack_PacketID = 423
)

var AtlasRemoveCardBack_PacketID_name = map[int32]string{
	423: "ID",
}
var AtlasRemoveCardBack_PacketID_value = map[string]int32{
	"ID": 423,
}

func (x AtlasRemoveCardBack_PacketID) Enum() *AtlasRemoveCardBack_PacketID {
	p := new(AtlasRemoveCardBack_PacketID)
	*p = x
	return p
}
func (x AtlasRemoveCardBack_PacketID) String() string {
	return proto.EnumName(AtlasRemoveCardBack_PacketID_name, int32(x))
}
func (x *AtlasRemoveCardBack_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasRemoveCardBack_PacketID_value, data, "AtlasRemoveCardBack_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasRemoveCardBack_PacketID(value)
	return nil
}

type AtlasRemoveDraft_PacketID int32

const (
	AtlasRemoveDraft_ID AtlasRemoveDraft_PacketID = 417
)

var AtlasRemoveDraft_PacketID_name = map[int32]string{
	417: "ID",
}
var AtlasRemoveDraft_PacketID_value = map[string]int32{
	"ID": 417,
}

func (x AtlasRemoveDraft_PacketID) Enum() *AtlasRemoveDraft_PacketID {
	p := new(AtlasRemoveDraft_PacketID)
	*p = x
	return p
}
func (x AtlasRemoveDraft_PacketID) String() string {
	return proto.EnumName(AtlasRemoveDraft_PacketID_name, int32(x))
}
func (x *AtlasRemoveDraft_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasRemoveDraft_PacketID_value, data, "AtlasRemoveDraft_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasRemoveDraft_PacketID(value)
	return nil
}

type AtlasRestoreCard_PacketID int32

const (
	AtlasRestoreCard_ID AtlasRestoreCard_PacketID = 408
)

var AtlasRestoreCard_PacketID_name = map[int32]string{
	408: "ID",
}
var AtlasRestoreCard_PacketID_value = map[string]int32{
	"ID": 408,
}

func (x AtlasRestoreCard_PacketID) Enum() *AtlasRestoreCard_PacketID {
	p := new(AtlasRestoreCard_PacketID)
	*p = x
	return p
}
func (x AtlasRestoreCard_PacketID) String() string {
	return proto.EnumName(AtlasRestoreCard_PacketID_name, int32(x))
}
func (x *AtlasRestoreCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasRestoreCard_PacketID_value, data, "AtlasRestoreCard_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasRestoreCard_PacketID(value)
	return nil
}

type AtlasSetAdventureProgress_PacketID int32

const (
	AtlasSetAdventureProgress_ID AtlasSetAdventureProgress_PacketID = 427
)

var AtlasSetAdventureProgress_PacketID_name = map[int32]string{
	427: "ID",
}
var AtlasSetAdventureProgress_PacketID_value = map[string]int32{
	"ID": 427,
}

func (x AtlasSetAdventureProgress_PacketID) Enum() *AtlasSetAdventureProgress_PacketID {
	p := new(AtlasSetAdventureProgress_PacketID)
	*p = x
	return p
}
func (x AtlasSetAdventureProgress_PacketID) String() string {
	return proto.EnumName(AtlasSetAdventureProgress_PacketID_name, int32(x))
}
func (x *AtlasSetAdventureProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasSetAdventureProgress_PacketID_value, data, "AtlasSetAdventureProgress_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasSetAdventureProgress_PacketID(value)
	return nil
}

type AtlasSuccess_PacketID int32

const (
	AtlasSuccess_ID AtlasSuccess_PacketID = 105
)

var AtlasSuccess_PacketID_name = map[int32]string{
	105: "ID",
}
var AtlasSuccess_PacketID_value = map[string]int32{
	"ID": 105,
}

func (x AtlasSuccess_PacketID) Enum() *AtlasSuccess_PacketID {
	p := new(AtlasSuccess_PacketID)
	*p = x
	return p
}
func (x AtlasSuccess_PacketID) String() string {
	return proto.EnumName(AtlasSuccess_PacketID_name, int32(x))
}
func (x *AtlasSuccess_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasSuccess_PacketID_value, data, "AtlasSuccess_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasSuccess_PacketID(value)
	return nil
}

type AtlasAdventureProgress_PacketID int32

const (
	AtlasAdventureProgress_ID AtlasAdventureProgress_PacketID = 113
)

var AtlasAdventureProgress_PacketID_name = map[int32]string{
	113: "ID",
}
var AtlasAdventureProgress_PacketID_value = map[string]int32{
	"ID": 113,
}

func (x AtlasAdventureProgress_PacketID) Enum() *AtlasAdventureProgress_PacketID {
	p := new(AtlasAdventureProgress_PacketID)
	*p = x
	return p
}
func (x AtlasAdventureProgress_PacketID) String() string {
	return proto.EnumName(AtlasAdventureProgress_PacketID_name, int32(x))
}
func (x *AtlasAdventureProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasAdventureProgress_PacketID_value, data, "AtlasAdventureProgress_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasAdventureProgress_PacketID(value)
	return nil
}

type BoosterContent_PacketID int32

const (
	BoosterContent_ID BoosterContent_PacketID = 226
)

var BoosterContent_PacketID_name = map[int32]string{
	226: "ID",
}
var BoosterContent_PacketID_value = map[string]int32{
	"ID": 226,
}

func (x BoosterContent_PacketID) Enum() *BoosterContent_PacketID {
	p := new(BoosterContent_PacketID)
	*p = x
	return p
}
func (x BoosterContent_PacketID) String() string {
	return proto.EnumName(BoosterContent_PacketID_name, int32(x))
}
func (x *BoosterContent_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoosterContent_PacketID_value, data, "BoosterContent_PacketID")
	if err != nil {
		return err
	}
	*x = BoosterContent_PacketID(value)
	return nil
}

type AtlasPlayer_PacketID int32

const (
	AtlasPlayer_ID AtlasPlayer_PacketID = 100
)

var AtlasPlayer_PacketID_name = map[int32]string{
	100: "ID",
}
var AtlasPlayer_PacketID_value = map[string]int32{
	"ID": 100,
}

func (x AtlasPlayer_PacketID) Enum() *AtlasPlayer_PacketID {
	p := new(AtlasPlayer_PacketID)
	*p = x
	return p
}
func (x AtlasPlayer_PacketID) String() string {
	return proto.EnumName(AtlasPlayer_PacketID_name, int32(x))
}
func (x *AtlasPlayer_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AtlasPlayer_PacketID_value, data, "AtlasPlayer_PacketID")
	if err != nil {
		return err
	}
	*x = AtlasPlayer_PacketID(value)
	return nil
}

type BoosterList_PacketID int32

const (
	BoosterList_ID BoosterList_PacketID = 224
)

var BoosterList_PacketID_name = map[int32]string{
	224: "ID",
}
var BoosterList_PacketID_value = map[string]int32{
	"ID": 224,
}

func (x BoosterList_PacketID) Enum() *BoosterList_PacketID {
	p := new(BoosterList_PacketID)
	*p = x
	return p
}
func (x BoosterList_PacketID) String() string {
	return proto.EnumName(BoosterList_PacketID_name, int32(x))
}
func (x *BoosterList_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoosterList_PacketID_value, data, "BoosterList_PacketID")
	if err != nil {
		return err
	}
	*x = BoosterList_PacketID(value)
	return nil
}

type BoosterTallyList_PacketID int32

const (
	BoosterTallyList_ID BoosterTallyList_PacketID = 313
)

var BoosterTallyList_PacketID_name = map[int32]string{
	313: "ID",
}
var BoosterTallyList_PacketID_value = map[string]int32{
	"ID": 313,
}

func (x BoosterTallyList_PacketID) Enum() *BoosterTallyList_PacketID {
	p := new(BoosterTallyList_PacketID)
	*p = x
	return p
}
func (x BoosterTallyList_PacketID) String() string {
	return proto.EnumName(BoosterTallyList_PacketID_name, int32(x))
}
func (x *BoosterTallyList_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoosterTallyList_PacketID_value, data, "BoosterTallyList_PacketID")
	if err != nil {
		return err
	}
	*x = BoosterTallyList_PacketID(value)
	return nil
}

type BoughtSoldCard_PacketID int32

const (
	BoughtSoldCard_ID BoughtSoldCard_PacketID = 258
)

var BoughtSoldCard_PacketID_name = map[int32]string{
	258: "ID",
}
var BoughtSoldCard_PacketID_value = map[string]int32{
	"ID": 258,
}

func (x BoughtSoldCard_PacketID) Enum() *BoughtSoldCard_PacketID {
	p := new(BoughtSoldCard_PacketID)
	*p = x
	return p
}
func (x BoughtSoldCard_PacketID) String() string {
	return proto.EnumName(BoughtSoldCard_PacketID_name, int32(x))
}
func (x *BoughtSoldCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoughtSoldCard_PacketID_value, data, "BoughtSoldCard_PacketID")
	if err != nil {
		return err
	}
	*x = BoughtSoldCard_PacketID(value)
	return nil
}

type BoughtSoldCard_Result int32

const (
	BoughtSoldCard_FAILED           BoughtSoldCard_Result = 1
	BoughtSoldCard_SOLD             BoughtSoldCard_Result = 2
	BoughtSoldCard_BOUGHT           BoughtSoldCard_Result = 3
	BoughtSoldCard_SOULBOUND        BoughtSoldCard_Result = 4
	BoughtSoldCard_WRONG_SELL_PRICE BoughtSoldCard_Result = 5
	BoughtSoldCard_WRONG_BUY_PRICE  BoughtSoldCard_Result = 6
	BoughtSoldCard_MISSING_ACHIEVE  BoughtSoldCard_Result = 7
)

var BoughtSoldCard_Result_name = map[int32]string{
	1: "FAILED",
	2: "SOLD",
	3: "BOUGHT",
	4: "SOULBOUND",
	5: "WRONG_SELL_PRICE",
	6: "WRONG_BUY_PRICE",
	7: "MISSING_ACHIEVE",
}
var BoughtSoldCard_Result_value = map[string]int32{
	"FAILED":           1,
	"SOLD":             2,
	"BOUGHT":           3,
	"SOULBOUND":        4,
	"WRONG_SELL_PRICE": 5,
	"WRONG_BUY_PRICE":  6,
	"MISSING_ACHIEVE":  7,
}

func (x BoughtSoldCard_Result) Enum() *BoughtSoldCard_Result {
	p := new(BoughtSoldCard_Result)
	*p = x
	return p
}
func (x BoughtSoldCard_Result) String() string {
	return proto.EnumName(BoughtSoldCard_Result_name, int32(x))
}
func (x *BoughtSoldCard_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoughtSoldCard_Result_value, data, "BoughtSoldCard_Result")
	if err != nil {
		return err
	}
	*x = BoughtSoldCard_Result(value)
	return nil
}

type BuySellCard_PacketID int32

const (
	BuySellCard_ID     BuySellCard_PacketID = 257
	BuySellCard_System BuySellCard_PacketID = 0
)

var BuySellCard_PacketID_name = map[int32]string{
	257: "ID",
	0:   "System",
}
var BuySellCard_PacketID_value = map[string]int32{
	"ID":     257,
	"System": 0,
}

func (x BuySellCard_PacketID) Enum() *BuySellCard_PacketID {
	p := new(BuySellCard_PacketID)
	*p = x
	return p
}
func (x BuySellCard_PacketID) String() string {
	return proto.EnumName(BuySellCard_PacketID_name, int32(x))
}
func (x *BuySellCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuySellCard_PacketID_value, data, "BuySellCard_PacketID")
	if err != nil {
		return err
	}
	*x = BuySellCard_PacketID(value)
	return nil
}

type CancelPurchase_PacketID int32

const (
	CancelPurchase_ID     CancelPurchase_PacketID = 274
	CancelPurchase_System CancelPurchase_PacketID = 1
)

var CancelPurchase_PacketID_name = map[int32]string{
	274: "ID",
	1:   "System",
}
var CancelPurchase_PacketID_value = map[string]int32{
	"ID":     274,
	"System": 1,
}

func (x CancelPurchase_PacketID) Enum() *CancelPurchase_PacketID {
	p := new(CancelPurchase_PacketID)
	*p = x
	return p
}
func (x CancelPurchase_PacketID) String() string {
	return proto.EnumName(CancelPurchase_PacketID_name, int32(x))
}
func (x *CancelPurchase_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchase_PacketID_value, data, "CancelPurchase_PacketID")
	if err != nil {
		return err
	}
	*x = CancelPurchase_PacketID(value)
	return nil
}

type CancelPurchase_ThirdPartyCancelReason int32

const (
	CancelPurchase_PROVIDER_REPORTED_FAILURE    CancelPurchase_ThirdPartyCancelReason = 1
	CancelPurchase_NOT_RECOGNIZED_BY_PROVIDER   CancelPurchase_ThirdPartyCancelReason = 2
	CancelPurchase_USER_CANCELED_BEFORE_PAYMENT CancelPurchase_ThirdPartyCancelReason = 3
	CancelPurchase_USER_CANCELING_TO_UNBLOCK    CancelPurchase_ThirdPartyCancelReason = 4
)

var CancelPurchase_ThirdPartyCancelReason_name = map[int32]string{
	1: "PROVIDER_REPORTED_FAILURE",
	2: "NOT_RECOGNIZED_BY_PROVIDER",
	3: "USER_CANCELED_BEFORE_PAYMENT",
	4: "USER_CANCELING_TO_UNBLOCK",
}
var CancelPurchase_ThirdPartyCancelReason_value = map[string]int32{
	"PROVIDER_REPORTED_FAILURE":    1,
	"NOT_RECOGNIZED_BY_PROVIDER":   2,
	"USER_CANCELED_BEFORE_PAYMENT": 3,
	"USER_CANCELING_TO_UNBLOCK":    4,
}

func (x CancelPurchase_ThirdPartyCancelReason) Enum() *CancelPurchase_ThirdPartyCancelReason {
	p := new(CancelPurchase_ThirdPartyCancelReason)
	*p = x
	return p
}
func (x CancelPurchase_ThirdPartyCancelReason) String() string {
	return proto.EnumName(CancelPurchase_ThirdPartyCancelReason_name, int32(x))
}
func (x *CancelPurchase_ThirdPartyCancelReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchase_ThirdPartyCancelReason_value, data, "CancelPurchase_ThirdPartyCancelReason")
	if err != nil {
		return err
	}
	*x = CancelPurchase_ThirdPartyCancelReason(value)
	return nil
}

type CancelPurchaseResponse_CancelResult int32

const (
	CancelPurchaseResponse_CR_SUCCESS           CancelPurchaseResponse_CancelResult = 1
	CancelPurchaseResponse_CR_NOT_ALLOWED       CancelPurchaseResponse_CancelResult = 2
	CancelPurchaseResponse_CR_NOTHING_TO_CANCEL CancelPurchaseResponse_CancelResult = 3
)

var CancelPurchaseResponse_CancelResult_name = map[int32]string{
	1: "CR_SUCCESS",
	2: "CR_NOT_ALLOWED",
	3: "CR_NOTHING_TO_CANCEL",
}
var CancelPurchaseResponse_CancelResult_value = map[string]int32{
	"CR_SUCCESS":           1,
	"CR_NOT_ALLOWED":       2,
	"CR_NOTHING_TO_CANCEL": 3,
}

func (x CancelPurchaseResponse_CancelResult) Enum() *CancelPurchaseResponse_CancelResult {
	p := new(CancelPurchaseResponse_CancelResult)
	*p = x
	return p
}
func (x CancelPurchaseResponse_CancelResult) String() string {
	return proto.EnumName(CancelPurchaseResponse_CancelResult_name, int32(x))
}
func (x *CancelPurchaseResponse_CancelResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchaseResponse_CancelResult_value, data, "CancelPurchaseResponse_CancelResult")
	if err != nil {
		return err
	}
	*x = CancelPurchaseResponse_CancelResult(value)
	return nil
}

type CancelPurchaseResponse_PacketID int32

const (
	CancelPurchaseResponse_ID CancelPurchaseResponse_PacketID = 275
)

var CancelPurchaseResponse_PacketID_name = map[int32]string{
	275: "ID",
}
var CancelPurchaseResponse_PacketID_value = map[string]int32{
	"ID": 275,
}

func (x CancelPurchaseResponse_PacketID) Enum() *CancelPurchaseResponse_PacketID {
	p := new(CancelPurchaseResponse_PacketID)
	*p = x
	return p
}
func (x CancelPurchaseResponse_PacketID) String() string {
	return proto.EnumName(CancelPurchaseResponse_PacketID_name, int32(x))
}
func (x *CancelPurchaseResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchaseResponse_PacketID_value, data, "CancelPurchaseResponse_PacketID")
	if err != nil {
		return err
	}
	*x = CancelPurchaseResponse_PacketID(value)
	return nil
}

type CancelQuest_PacketID int32

const (
	CancelQuest_ID     CancelQuest_PacketID = 281
	CancelQuest_System CancelQuest_PacketID = 0
)

var CancelQuest_PacketID_name = map[int32]string{
	281: "ID",
	0:   "System",
}
var CancelQuest_PacketID_value = map[string]int32{
	"ID":     281,
	"System": 0,
}

func (x CancelQuest_PacketID) Enum() *CancelQuest_PacketID {
	p := new(CancelQuest_PacketID)
	*p = x
	return p
}
func (x CancelQuest_PacketID) String() string {
	return proto.EnumName(CancelQuest_PacketID_name, int32(x))
}
func (x *CancelQuest_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelQuest_PacketID_value, data, "CancelQuest_PacketID")
	if err != nil {
		return err
	}
	*x = CancelQuest_PacketID(value)
	return nil
}

type CancelQuestResponse_PacketID int32

const (
	CancelQuestResponse_ID CancelQuestResponse_PacketID = 282
)

var CancelQuestResponse_PacketID_name = map[int32]string{
	282: "ID",
}
var CancelQuestResponse_PacketID_value = map[string]int32{
	"ID": 282,
}

func (x CancelQuestResponse_PacketID) Enum() *CancelQuestResponse_PacketID {
	p := new(CancelQuestResponse_PacketID)
	*p = x
	return p
}
func (x CancelQuestResponse_PacketID) String() string {
	return proto.EnumName(CancelQuestResponse_PacketID_name, int32(x))
}
func (x *CancelQuestResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelQuestResponse_PacketID_value, data, "CancelQuestResponse_PacketID")
	if err != nil {
		return err
	}
	*x = CancelQuestResponse_PacketID(value)
	return nil
}

type CardBacks_PacketID int32

const (
	CardBacks_ID     CardBacks_PacketID = 236
	CardBacks_System CardBacks_PacketID = 0
)

var CardBacks_PacketID_name = map[int32]string{
	236: "ID",
	0:   "System",
}
var CardBacks_PacketID_value = map[string]int32{
	"ID":     236,
	"System": 0,
}

func (x CardBacks_PacketID) Enum() *CardBacks_PacketID {
	p := new(CardBacks_PacketID)
	*p = x
	return p
}
func (x CardBacks_PacketID) String() string {
	return proto.EnumName(CardBacks_PacketID_name, int32(x))
}
func (x *CardBacks_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardBacks_PacketID_value, data, "CardBacks_PacketID")
	if err != nil {
		return err
	}
	*x = CardBacks_PacketID(value)
	return nil
}

type CardValues_PacketID int32

const (
	CardValues_ID CardValues_PacketID = 260
)

var CardValues_PacketID_name = map[int32]string{
	260: "ID",
}
var CardValues_PacketID_value = map[string]int32{
	"ID": 260,
}

func (x CardValues_PacketID) Enum() *CardValues_PacketID {
	p := new(CardValues_PacketID)
	*p = x
	return p
}
func (x CardValues_PacketID) String() string {
	return proto.EnumName(CardValues_PacketID_name, int32(x))
}
func (x *CardValues_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardValues_PacketID_value, data, "CardValues_PacketID")
	if err != nil {
		return err
	}
	*x = CardValues_PacketID(value)
	return nil
}

type CheckAccountLicenseAchieve_PacketID int32

const (
	CheckAccountLicenseAchieve_ID     CheckAccountLicenseAchieve_PacketID = 297
	CheckAccountLicenseAchieve_System CheckAccountLicenseAchieve_PacketID = 1
)

var CheckAccountLicenseAchieve_PacketID_name = map[int32]string{
	297: "ID",
	1:   "System",
}
var CheckAccountLicenseAchieve_PacketID_value = map[string]int32{
	"ID":     297,
	"System": 1,
}

func (x CheckAccountLicenseAchieve_PacketID) Enum() *CheckAccountLicenseAchieve_PacketID {
	p := new(CheckAccountLicenseAchieve_PacketID)
	*p = x
	return p
}
func (x CheckAccountLicenseAchieve_PacketID) String() string {
	return proto.EnumName(CheckAccountLicenseAchieve_PacketID_name, int32(x))
}
func (x *CheckAccountLicenseAchieve_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckAccountLicenseAchieve_PacketID_value, data, "CheckAccountLicenseAchieve_PacketID")
	if err != nil {
		return err
	}
	*x = CheckAccountLicenseAchieve_PacketID(value)
	return nil
}

type CheckAccountLicenses_PacketID int32

const (
	CheckAccountLicenses_ID     CheckAccountLicenses_PacketID = 267
	CheckAccountLicenses_System CheckAccountLicenses_PacketID = 0
)

var CheckAccountLicenses_PacketID_name = map[int32]string{
	267: "ID",
	0:   "System",
}
var CheckAccountLicenses_PacketID_value = map[string]int32{
	"ID":     267,
	"System": 0,
}

func (x CheckAccountLicenses_PacketID) Enum() *CheckAccountLicenses_PacketID {
	p := new(CheckAccountLicenses_PacketID)
	*p = x
	return p
}
func (x CheckAccountLicenses_PacketID) String() string {
	return proto.EnumName(CheckAccountLicenses_PacketID_name, int32(x))
}
func (x *CheckAccountLicenses_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckAccountLicenses_PacketID_value, data, "CheckAccountLicenses_PacketID")
	if err != nil {
		return err
	}
	*x = CheckAccountLicenses_PacketID(value)
	return nil
}

type CheckGameLicenses_PacketID int32

const (
	CheckGameLicenses_ID     CheckGameLicenses_PacketID = 276
	CheckGameLicenses_System CheckGameLicenses_PacketID = 1
)

var CheckGameLicenses_PacketID_name = map[int32]string{
	276: "ID",
	1:   "System",
}
var CheckGameLicenses_PacketID_value = map[string]int32{
	"ID":     276,
	"System": 1,
}

func (x CheckGameLicenses_PacketID) Enum() *CheckGameLicenses_PacketID {
	p := new(CheckGameLicenses_PacketID)
	*p = x
	return p
}
func (x CheckGameLicenses_PacketID) String() string {
	return proto.EnumName(CheckGameLicenses_PacketID_name, int32(x))
}
func (x *CheckGameLicenses_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckGameLicenses_PacketID_value, data, "CheckGameLicenses_PacketID")
	if err != nil {
		return err
	}
	*x = CheckGameLicenses_PacketID(value)
	return nil
}

type CheckLicensesResponse_PacketID int32

const (
	CheckLicensesResponse_ID CheckLicensesResponse_PacketID = 277
)

var CheckLicensesResponse_PacketID_name = map[int32]string{
	277: "ID",
}
var CheckLicensesResponse_PacketID_value = map[string]int32{
	"ID": 277,
}

func (x CheckLicensesResponse_PacketID) Enum() *CheckLicensesResponse_PacketID {
	p := new(CheckLicensesResponse_PacketID)
	*p = x
	return p
}
func (x CheckLicensesResponse_PacketID) String() string {
	return proto.EnumName(CheckLicensesResponse_PacketID_name, int32(x))
}
func (x *CheckLicensesResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckLicensesResponse_PacketID_value, data, "CheckLicensesResponse_PacketID")
	if err != nil {
		return err
	}
	*x = CheckLicensesResponse_PacketID(value)
	return nil
}

type ClientOptions_PacketID int32

const (
	ClientOptions_ID ClientOptions_PacketID = 241
)

var ClientOptions_PacketID_name = map[int32]string{
	241: "ID",
}
var ClientOptions_PacketID_value = map[string]int32{
	"ID": 241,
}

func (x ClientOptions_PacketID) Enum() *ClientOptions_PacketID {
	p := new(ClientOptions_PacketID)
	*p = x
	return p
}
func (x ClientOptions_PacketID) String() string {
	return proto.EnumName(ClientOptions_PacketID_name, int32(x))
}
func (x *ClientOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientOptions_PacketID_value, data, "ClientOptions_PacketID")
	if err != nil {
		return err
	}
	*x = ClientOptions_PacketID(value)
	return nil
}

type CloseCardMarket_PacketID int32

const (
	CloseCardMarket_ID     CloseCardMarket_PacketID = 263
	CloseCardMarket_System CloseCardMarket_PacketID = 0
)

var CloseCardMarket_PacketID_name = map[int32]string{
	263: "ID",
	0:   "System",
}
var CloseCardMarket_PacketID_value = map[string]int32{
	"ID":     263,
	"System": 0,
}

func (x CloseCardMarket_PacketID) Enum() *CloseCardMarket_PacketID {
	p := new(CloseCardMarket_PacketID)
	*p = x
	return p
}
func (x CloseCardMarket_PacketID) String() string {
	return proto.EnumName(CloseCardMarket_PacketID_name, int32(x))
}
func (x *CloseCardMarket_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CloseCardMarket_PacketID_value, data, "CloseCardMarket_PacketID")
	if err != nil {
		return err
	}
	*x = CloseCardMarket_PacketID(value)
	return nil
}

type Collection_PacketID int32

const (
	Collection_ID Collection_PacketID = 207
)

var Collection_PacketID_name = map[int32]string{
	207: "ID",
}
var Collection_PacketID_value = map[string]int32{
	"ID": 207,
}

func (x Collection_PacketID) Enum() *Collection_PacketID {
	p := new(Collection_PacketID)
	*p = x
	return p
}
func (x Collection_PacketID) String() string {
	return proto.EnumName(Collection_PacketID_name, int32(x))
}
func (x *Collection_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Collection_PacketID_value, data, "Collection_PacketID")
	if err != nil {
		return err
	}
	*x = Collection_PacketID(value)
	return nil
}

type CreateDeck_PacketID int32

const (
	CreateDeck_ID     CreateDeck_PacketID = 209
	CreateDeck_System CreateDeck_PacketID = 0
)

var CreateDeck_PacketID_name = map[int32]string{
	209: "ID",
	0:   "System",
}
var CreateDeck_PacketID_value = map[string]int32{
	"ID":     209,
	"System": 0,
}

func (x CreateDeck_PacketID) Enum() *CreateDeck_PacketID {
	p := new(CreateDeck_PacketID)
	*p = x
	return p
}
func (x CreateDeck_PacketID) String() string {
	return proto.EnumName(CreateDeck_PacketID_name, int32(x))
}
func (x *CreateDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CreateDeck_PacketID_value, data, "CreateDeck_PacketID")
	if err != nil {
		return err
	}
	*x = CreateDeck_PacketID(value)
	return nil
}

type DBAction_PacketID int32

const (
	DBAction_ID DBAction_PacketID = 216
)

var DBAction_PacketID_name = map[int32]string{
	216: "ID",
}
var DBAction_PacketID_value = map[string]int32{
	"ID": 216,
}

func (x DBAction_PacketID) Enum() *DBAction_PacketID {
	p := new(DBAction_PacketID)
	*p = x
	return p
}
func (x DBAction_PacketID) String() string {
	return proto.EnumName(DBAction_PacketID_name, int32(x))
}
func (x *DBAction_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DBAction_PacketID_value, data, "DBAction_PacketID")
	if err != nil {
		return err
	}
	*x = DBAction_PacketID(value)
	return nil
}

type DebugAuth_PacketID int32

const (
	DebugAuth_ID DebugAuth_PacketID = 206
)

var DebugAuth_PacketID_name = map[int32]string{
	206: "ID",
}
var DebugAuth_PacketID_value = map[string]int32{
	"ID": 206,
}

func (x DebugAuth_PacketID) Enum() *DebugAuth_PacketID {
	p := new(DebugAuth_PacketID)
	*p = x
	return p
}
func (x DebugAuth_PacketID) String() string {
	return proto.EnumName(DebugAuth_PacketID_name, int32(x))
}
func (x *DebugAuth_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DebugAuth_PacketID_value, data, "DebugAuth_PacketID")
	if err != nil {
		return err
	}
	*x = DebugAuth_PacketID(value)
	return nil
}

type DebugAuth_Result int32

const (
	DebugAuth_UNKNOWN      DebugAuth_Result = 0
	DebugAuth_VALID        DebugAuth_Result = 1
	DebugAuth_BAD_USER     DebugAuth_Result = 2
	DebugAuth_BAD_PASSWORD DebugAuth_Result = 3
)

var DebugAuth_Result_name = map[int32]string{
	0: "UNKNOWN",
	1: "VALID",
	2: "BAD_USER",
	3: "BAD_PASSWORD",
}
var DebugAuth_Result_value = map[string]int32{
	"UNKNOWN":      0,
	"VALID":        1,
	"BAD_USER":     2,
	"BAD_PASSWORD": 3,
}

func (x DebugAuth_Result) Enum() *DebugAuth_Result {
	p := new(DebugAuth_Result)
	*p = x
	return p
}
func (x DebugAuth_Result) String() string {
	return proto.EnumName(DebugAuth_Result_name, int32(x))
}
func (x *DebugAuth_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DebugAuth_Result_value, data, "DebugAuth_Result")
	if err != nil {
		return err
	}
	*x = DebugAuth_Result(value)
	return nil
}

type DeckContents_PacketID int32

const (
	DeckContents_ID DeckContents_PacketID = 215
)

var DeckContents_PacketID_name = map[int32]string{
	215: "ID",
}
var DeckContents_PacketID_value = map[string]int32{
	"ID": 215,
}

func (x DeckContents_PacketID) Enum() *DeckContents_PacketID {
	p := new(DeckContents_PacketID)
	*p = x
	return p
}
func (x DeckContents_PacketID) String() string {
	return proto.EnumName(DeckContents_PacketID_name, int32(x))
}
func (x *DeckContents_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckContents_PacketID_value, data, "DeckContents_PacketID")
	if err != nil {
		return err
	}
	*x = DeckContents_PacketID(value)
	return nil
}

type DeckCreated_PacketID int32

const (
	DeckCreated_ID DeckCreated_PacketID = 217
)

var DeckCreated_PacketID_name = map[int32]string{
	217: "ID",
}
var DeckCreated_PacketID_value = map[string]int32{
	"ID": 217,
}

func (x DeckCreated_PacketID) Enum() *DeckCreated_PacketID {
	p := new(DeckCreated_PacketID)
	*p = x
	return p
}
func (x DeckCreated_PacketID) String() string {
	return proto.EnumName(DeckCreated_PacketID_name, int32(x))
}
func (x *DeckCreated_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckCreated_PacketID_value, data, "DeckCreated_PacketID")
	if err != nil {
		return err
	}
	*x = DeckCreated_PacketID(value)
	return nil
}

type DeckDeleted_PacketID int32

const (
	DeckDeleted_ID DeckDeleted_PacketID = 218
)

var DeckDeleted_PacketID_name = map[int32]string{
	218: "ID",
}
var DeckDeleted_PacketID_value = map[string]int32{
	"ID": 218,
}

func (x DeckDeleted_PacketID) Enum() *DeckDeleted_PacketID {
	p := new(DeckDeleted_PacketID)
	*p = x
	return p
}
func (x DeckDeleted_PacketID) String() string {
	return proto.EnumName(DeckDeleted_PacketID_name, int32(x))
}
func (x *DeckDeleted_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckDeleted_PacketID_value, data, "DeckDeleted_PacketID")
	if err != nil {
		return err
	}
	*x = DeckDeleted_PacketID(value)
	return nil
}

type DeckGainedCard_PacketID int32

const (
	DeckGainedCard_ID DeckGainedCard_PacketID = 220
)

var DeckGainedCard_PacketID_name = map[int32]string{
	220: "ID",
}
var DeckGainedCard_PacketID_value = map[string]int32{
	"ID": 220,
}

func (x DeckGainedCard_PacketID) Enum() *DeckGainedCard_PacketID {
	p := new(DeckGainedCard_PacketID)
	*p = x
	return p
}
func (x DeckGainedCard_PacketID) String() string {
	return proto.EnumName(DeckGainedCard_PacketID_name, int32(x))
}
func (x *DeckGainedCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckGainedCard_PacketID_value, data, "DeckGainedCard_PacketID")
	if err != nil {
		return err
	}
	*x = DeckGainedCard_PacketID(value)
	return nil
}

type DeckList_PacketID int32

const (
	DeckList_ID DeckList_PacketID = 202
)

var DeckList_PacketID_name = map[int32]string{
	202: "ID",
}
var DeckList_PacketID_value = map[string]int32{
	"ID": 202,
}

func (x DeckList_PacketID) Enum() *DeckList_PacketID {
	p := new(DeckList_PacketID)
	*p = x
	return p
}
func (x DeckList_PacketID) String() string {
	return proto.EnumName(DeckList_PacketID_name, int32(x))
}
func (x *DeckList_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckList_PacketID_value, data, "DeckList_PacketID")
	if err != nil {
		return err
	}
	*x = DeckList_PacketID(value)
	return nil
}

type DeckLostCard_PacketID int32

const (
	DeckLostCard_ID DeckLostCard_PacketID = 221
)

var DeckLostCard_PacketID_name = map[int32]string{
	221: "ID",
}
var DeckLostCard_PacketID_value = map[string]int32{
	"ID": 221,
}

func (x DeckLostCard_PacketID) Enum() *DeckLostCard_PacketID {
	p := new(DeckLostCard_PacketID)
	*p = x
	return p
}
func (x DeckLostCard_PacketID) String() string {
	return proto.EnumName(DeckLostCard_PacketID_name, int32(x))
}
func (x *DeckLostCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckLostCard_PacketID_value, data, "DeckLostCard_PacketID")
	if err != nil {
		return err
	}
	*x = DeckLostCard_PacketID(value)
	return nil
}

type DeckRenamed_PacketID int32

const (
	DeckRenamed_ID DeckRenamed_PacketID = 219
)

var DeckRenamed_PacketID_name = map[int32]string{
	219: "ID",
}
var DeckRenamed_PacketID_value = map[string]int32{
	"ID": 219,
}

func (x DeckRenamed_PacketID) Enum() *DeckRenamed_PacketID {
	p := new(DeckRenamed_PacketID)
	*p = x
	return p
}
func (x DeckRenamed_PacketID) String() string {
	return proto.EnumName(DeckRenamed_PacketID_name, int32(x))
}
func (x *DeckRenamed_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckRenamed_PacketID_value, data, "DeckRenamed_PacketID")
	if err != nil {
		return err
	}
	*x = DeckRenamed_PacketID(value)
	return nil
}

type DeckSetData_PacketID int32

const (
	DeckSetData_ID     DeckSetData_PacketID = 222
	DeckSetData_System DeckSetData_PacketID = 0
)

var DeckSetData_PacketID_name = map[int32]string{
	222: "ID",
	0:   "System",
}
var DeckSetData_PacketID_value = map[string]int32{
	"ID":     222,
	"System": 0,
}

func (x DeckSetData_PacketID) Enum() *DeckSetData_PacketID {
	p := new(DeckSetData_PacketID)
	*p = x
	return p
}
func (x DeckSetData_PacketID) String() string {
	return proto.EnumName(DeckSetData_PacketID_name, int32(x))
}
func (x *DeckSetData_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckSetData_PacketID_value, data, "DeckSetData_PacketID")
	if err != nil {
		return err
	}
	*x = DeckSetData_PacketID(value)
	return nil
}

type DeleteDeck_PacketID int32

const (
	DeleteDeck_ID     DeleteDeck_PacketID = 210
	DeleteDeck_System DeleteDeck_PacketID = 0
)

var DeleteDeck_PacketID_name = map[int32]string{
	210: "ID",
	0:   "System",
}
var DeleteDeck_PacketID_value = map[string]int32{
	"ID":     210,
	"System": 0,
}

func (x DeleteDeck_PacketID) Enum() *DeleteDeck_PacketID {
	p := new(DeleteDeck_PacketID)
	*p = x
	return p
}
func (x DeleteDeck_PacketID) String() string {
	return proto.EnumName(DeleteDeck_PacketID_name, int32(x))
}
func (x *DeleteDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeleteDeck_PacketID_value, data, "DeleteDeck_PacketID")
	if err != nil {
		return err
	}
	*x = DeleteDeck_PacketID(value)
	return nil
}

type DevBnetIdentify_PacketID int32

const (
	DevBnetIdentify_ID     DevBnetIdentify_PacketID = 259
	DevBnetIdentify_System DevBnetIdentify_PacketID = 0
)

var DevBnetIdentify_PacketID_name = map[int32]string{
	259: "ID",
	0:   "System",
}
var DevBnetIdentify_PacketID_value = map[string]int32{
	"ID":     259,
	"System": 0,
}

func (x DevBnetIdentify_PacketID) Enum() *DevBnetIdentify_PacketID {
	p := new(DevBnetIdentify_PacketID)
	*p = x
	return p
}
func (x DevBnetIdentify_PacketID) String() string {
	return proto.EnumName(DevBnetIdentify_PacketID_name, int32(x))
}
func (x *DevBnetIdentify_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DevBnetIdentify_PacketID_value, data, "DevBnetIdentify_PacketID")
	if err != nil {
		return err
	}
	*x = DevBnetIdentify_PacketID(value)
	return nil
}

type Disconnected_PacketID int32

const (
	Disconnected_ID Disconnected_PacketID = 289
)

var Disconnected_PacketID_name = map[int32]string{
	289: "ID",
}
var Disconnected_PacketID_value = map[string]int32{
	"ID": 289,
}

func (x Disconnected_PacketID) Enum() *Disconnected_PacketID {
	p := new(Disconnected_PacketID)
	*p = x
	return p
}
func (x Disconnected_PacketID) String() string {
	return proto.EnumName(Disconnected_PacketID_name, int32(x))
}
func (x *Disconnected_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Disconnected_PacketID_value, data, "Disconnected_PacketID")
	if err != nil {
		return err
	}
	*x = Disconnected_PacketID(value)
	return nil
}

type DoPurchase_PacketID int32

const (
	DoPurchase_ID     DoPurchase_PacketID = 273
	DoPurchase_System DoPurchase_PacketID = 1
)

var DoPurchase_PacketID_name = map[int32]string{
	273: "ID",
	1:   "System",
}
var DoPurchase_PacketID_value = map[string]int32{
	"ID":     273,
	"System": 1,
}

func (x DoPurchase_PacketID) Enum() *DoPurchase_PacketID {
	p := new(DoPurchase_PacketID)
	*p = x
	return p
}
func (x DoPurchase_PacketID) String() string {
	return proto.EnumName(DoPurchase_PacketID_name, int32(x))
}
func (x *DoPurchase_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DoPurchase_PacketID_value, data, "DoPurchase_PacketID")
	if err != nil {
		return err
	}
	*x = DoPurchase_PacketID(value)
	return nil
}

type DraftAckRewards_PacketID int32

const (
	DraftAckRewards_ID     DraftAckRewards_PacketID = 287
	DraftAckRewards_System DraftAckRewards_PacketID = 0
)

var DraftAckRewards_PacketID_name = map[int32]string{
	287: "ID",
	0:   "System",
}
var DraftAckRewards_PacketID_value = map[string]int32{
	"ID":     287,
	"System": 0,
}

func (x DraftAckRewards_PacketID) Enum() *DraftAckRewards_PacketID {
	p := new(DraftAckRewards_PacketID)
	*p = x
	return p
}
func (x DraftAckRewards_PacketID) String() string {
	return proto.EnumName(DraftAckRewards_PacketID_name, int32(x))
}
func (x *DraftAckRewards_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftAckRewards_PacketID_value, data, "DraftAckRewards_PacketID")
	if err != nil {
		return err
	}
	*x = DraftAckRewards_PacketID(value)
	return nil
}

type DraftBegin_PacketID int32

const (
	DraftBegin_ID     DraftBegin_PacketID = 235
	DraftBegin_System DraftBegin_PacketID = 0
)

var DraftBegin_PacketID_name = map[int32]string{
	235: "ID",
	0:   "System",
}
var DraftBegin_PacketID_value = map[string]int32{
	"ID":     235,
	"System": 0,
}

func (x DraftBegin_PacketID) Enum() *DraftBegin_PacketID {
	p := new(DraftBegin_PacketID)
	*p = x
	return p
}
func (x DraftBegin_PacketID) String() string {
	return proto.EnumName(DraftBegin_PacketID_name, int32(x))
}
func (x *DraftBegin_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftBegin_PacketID_value, data, "DraftBegin_PacketID")
	if err != nil {
		return err
	}
	*x = DraftBegin_PacketID(value)
	return nil
}

type DraftBeginning_PacketID int32

const (
	DraftBeginning_ID DraftBeginning_PacketID = 246
)

var DraftBeginning_PacketID_name = map[int32]string{
	246: "ID",
}
var DraftBeginning_PacketID_value = map[string]int32{
	"ID": 246,
}

func (x DraftBeginning_PacketID) Enum() *DraftBeginning_PacketID {
	p := new(DraftBeginning_PacketID)
	*p = x
	return p
}
func (x DraftBeginning_PacketID) String() string {
	return proto.EnumName(DraftBeginning_PacketID_name, int32(x))
}
func (x *DraftBeginning_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftBeginning_PacketID_value, data, "DraftBeginning_PacketID")
	if err != nil {
		return err
	}
	*x = DraftBeginning_PacketID(value)
	return nil
}

type DraftChosen_PacketID int32

const (
	DraftChosen_ID DraftChosen_PacketID = 249
)

var DraftChosen_PacketID_name = map[int32]string{
	249: "ID",
}
var DraftChosen_PacketID_value = map[string]int32{
	"ID": 249,
}

func (x DraftChosen_PacketID) Enum() *DraftChosen_PacketID {
	p := new(DraftChosen_PacketID)
	*p = x
	return p
}
func (x DraftChosen_PacketID) String() string {
	return proto.EnumName(DraftChosen_PacketID_name, int32(x))
}
func (x *DraftChosen_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftChosen_PacketID_value, data, "DraftChosen_PacketID")
	if err != nil {
		return err
	}
	*x = DraftChosen_PacketID(value)
	return nil
}

type DraftError_ErrorCode int32

const (
	DraftError_DE_UNKNOWN                   DraftError_ErrorCode = 0
	DraftError_DE_NO_LICENSE                DraftError_ErrorCode = 1
	DraftError_DE_RETIRE_FIRST              DraftError_ErrorCode = 2
	DraftError_DE_NOT_IN_DRAFT              DraftError_ErrorCode = 3
	DraftError_DE_BAD_DECK                  DraftError_ErrorCode = 4
	DraftError_DE_BAD_SLOT                  DraftError_ErrorCode = 5
	DraftError_DE_BAD_INDEX                 DraftError_ErrorCode = 6
	DraftError_DE_NOT_IN_DRAFT_BUT_COULD_BE DraftError_ErrorCode = 7
	DraftError_DE_FEATURE_DISABLED          DraftError_ErrorCode = 8
)

var DraftError_ErrorCode_name = map[int32]string{
	0: "DE_UNKNOWN",
	1: "DE_NO_LICENSE",
	2: "DE_RETIRE_FIRST",
	3: "DE_NOT_IN_DRAFT",
	4: "DE_BAD_DECK",
	5: "DE_BAD_SLOT",
	6: "DE_BAD_INDEX",
	7: "DE_NOT_IN_DRAFT_BUT_COULD_BE",
	8: "DE_FEATURE_DISABLED",
}
var DraftError_ErrorCode_value = map[string]int32{
	"DE_UNKNOWN":                   0,
	"DE_NO_LICENSE":                1,
	"DE_RETIRE_FIRST":              2,
	"DE_NOT_IN_DRAFT":              3,
	"DE_BAD_DECK":                  4,
	"DE_BAD_SLOT":                  5,
	"DE_BAD_INDEX":                 6,
	"DE_NOT_IN_DRAFT_BUT_COULD_BE": 7,
	"DE_FEATURE_DISABLED":          8,
}

func (x DraftError_ErrorCode) Enum() *DraftError_ErrorCode {
	p := new(DraftError_ErrorCode)
	*p = x
	return p
}
func (x DraftError_ErrorCode) String() string {
	return proto.EnumName(DraftError_ErrorCode_name, int32(x))
}
func (x *DraftError_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftError_ErrorCode_value, data, "DraftError_ErrorCode")
	if err != nil {
		return err
	}
	*x = DraftError_ErrorCode(value)
	return nil
}

type DraftError_PacketID int32

const (
	DraftError_ID DraftError_PacketID = 251
)

var DraftError_PacketID_name = map[int32]string{
	251: "ID",
}
var DraftError_PacketID_value = map[string]int32{
	"ID": 251,
}

func (x DraftError_PacketID) Enum() *DraftError_PacketID {
	p := new(DraftError_PacketID)
	*p = x
	return p
}
func (x DraftError_PacketID) String() string {
	return proto.EnumName(DraftError_PacketID_name, int32(x))
}
func (x *DraftError_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftError_PacketID_value, data, "DraftError_PacketID")
	if err != nil {
		return err
	}
	*x = DraftError_PacketID(value)
	return nil
}

type DraftGetPicksAndContents_PacketID int32

const (
	DraftGetPicksAndContents_ID     DraftGetPicksAndContents_PacketID = 244
	DraftGetPicksAndContents_System DraftGetPicksAndContents_PacketID = 0
)

var DraftGetPicksAndContents_PacketID_name = map[int32]string{
	244: "ID",
	0:   "System",
}
var DraftGetPicksAndContents_PacketID_value = map[string]int32{
	"ID":     244,
	"System": 0,
}

func (x DraftGetPicksAndContents_PacketID) Enum() *DraftGetPicksAndContents_PacketID {
	p := new(DraftGetPicksAndContents_PacketID)
	*p = x
	return p
}
func (x DraftGetPicksAndContents_PacketID) String() string {
	return proto.EnumName(DraftGetPicksAndContents_PacketID_name, int32(x))
}
func (x *DraftGetPicksAndContents_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftGetPicksAndContents_PacketID_value, data, "DraftGetPicksAndContents_PacketID")
	if err != nil {
		return err
	}
	*x = DraftGetPicksAndContents_PacketID(value)
	return nil
}

type DraftMakePick_PacketID int32

const (
	DraftMakePick_ID     DraftMakePick_PacketID = 245
	DraftMakePick_System DraftMakePick_PacketID = 0
)

var DraftMakePick_PacketID_name = map[int32]string{
	245: "ID",
	0:   "System",
}
var DraftMakePick_PacketID_value = map[string]int32{
	"ID":     245,
	"System": 0,
}

func (x DraftMakePick_PacketID) Enum() *DraftMakePick_PacketID {
	p := new(DraftMakePick_PacketID)
	*p = x
	return p
}
func (x DraftMakePick_PacketID) String() string {
	return proto.EnumName(DraftMakePick_PacketID_name, int32(x))
}
func (x *DraftMakePick_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftMakePick_PacketID_value, data, "DraftMakePick_PacketID")
	if err != nil {
		return err
	}
	*x = DraftMakePick_PacketID(value)
	return nil
}

type DraftRetire_PacketID int32

const (
	DraftRetire_ID     DraftRetire_PacketID = 242
	DraftRetire_System DraftRetire_PacketID = 0
)

var DraftRetire_PacketID_name = map[int32]string{
	242: "ID",
	0:   "System",
}
var DraftRetire_PacketID_value = map[string]int32{
	"ID":     242,
	"System": 0,
}

func (x DraftRetire_PacketID) Enum() *DraftRetire_PacketID {
	p := new(DraftRetire_PacketID)
	*p = x
	return p
}
func (x DraftRetire_PacketID) String() string {
	return proto.EnumName(DraftRetire_PacketID_name, int32(x))
}
func (x *DraftRetire_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftRetire_PacketID_value, data, "DraftRetire_PacketID")
	if err != nil {
		return err
	}
	*x = DraftRetire_PacketID(value)
	return nil
}

type DraftChoicesAndContents_PacketID int32

const (
	DraftChoicesAndContents_ID DraftChoicesAndContents_PacketID = 248
)

var DraftChoicesAndContents_PacketID_name = map[int32]string{
	248: "ID",
}
var DraftChoicesAndContents_PacketID_value = map[string]int32{
	"ID": 248,
}

func (x DraftChoicesAndContents_PacketID) Enum() *DraftChoicesAndContents_PacketID {
	p := new(DraftChoicesAndContents_PacketID)
	*p = x
	return p
}
func (x DraftChoicesAndContents_PacketID) String() string {
	return proto.EnumName(DraftChoicesAndContents_PacketID_name, int32(x))
}
func (x *DraftChoicesAndContents_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftChoicesAndContents_PacketID_value, data, "DraftChoicesAndContents_PacketID")
	if err != nil {
		return err
	}
	*x = DraftChoicesAndContents_PacketID(value)
	return nil
}

type DraftRetired_PacketID int32

const (
	DraftRetired_ID DraftRetired_PacketID = 247
)

var DraftRetired_PacketID_name = map[int32]string{
	247: "ID",
}
var DraftRetired_PacketID_value = map[string]int32{
	"ID": 247,
}

func (x DraftRetired_PacketID) Enum() *DraftRetired_PacketID {
	p := new(DraftRetired_PacketID)
	*p = x
	return p
}
func (x DraftRetired_PacketID) String() string {
	return proto.EnumName(DraftRetired_PacketID_name, int32(x))
}
func (x *DraftRetired_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftRetired_PacketID_value, data, "DraftRetired_PacketID")
	if err != nil {
		return err
	}
	*x = DraftRetired_PacketID(value)
	return nil
}

type DraftRewardsAcked_PacketID int32

const (
	DraftRewardsAcked_ID DraftRewardsAcked_PacketID = 288
)

var DraftRewardsAcked_PacketID_name = map[int32]string{
	288: "ID",
}
var DraftRewardsAcked_PacketID_value = map[string]int32{
	"ID": 288,
}

func (x DraftRewardsAcked_PacketID) Enum() *DraftRewardsAcked_PacketID {
	p := new(DraftRewardsAcked_PacketID)
	*p = x
	return p
}
func (x DraftRewardsAcked_PacketID) String() string {
	return proto.EnumName(DraftRewardsAcked_PacketID_name, int32(x))
}
func (x *DraftRewardsAcked_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftRewardsAcked_PacketID_value, data, "DraftRewardsAcked_PacketID")
	if err != nil {
		return err
	}
	*x = DraftRewardsAcked_PacketID(value)
	return nil
}

type DroppedRequest_PacketID int32

const (
	DroppedRequest_ID DroppedRequest_PacketID = 0
)

var DroppedRequest_PacketID_name = map[int32]string{
	0: "ID",
}
var DroppedRequest_PacketID_value = map[string]int32{
	"ID": 0,
}

func (x DroppedRequest_PacketID) Enum() *DroppedRequest_PacketID {
	p := new(DroppedRequest_PacketID)
	*p = x
	return p
}
func (x DroppedRequest_PacketID) String() string {
	return proto.EnumName(DroppedRequest_PacketID_name, int32(x))
}
func (x *DroppedRequest_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DroppedRequest_PacketID_value, data, "DroppedRequest_PacketID")
	if err != nil {
		return err
	}
	*x = DroppedRequest_PacketID(value)
	return nil
}

type Error37_PacketID int32

const (
	Error37_ID Error37_PacketID = 266
)

var Error37_PacketID_name = map[int32]string{
	266: "ID",
}
var Error37_PacketID_value = map[string]int32{
	"ID": 266,
}

func (x Error37_PacketID) Enum() *Error37_PacketID {
	p := new(Error37_PacketID)
	*p = x
	return p
}
func (x Error37_PacketID) String() string {
	return proto.EnumName(Error37_PacketID_name, int32(x))
}
func (x *Error37_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Error37_PacketID_value, data, "Error37_PacketID")
	if err != nil {
		return err
	}
	*x = Error37_PacketID(value)
	return nil
}

type Error37_ThrottleReason int32

const (
	Error37_TR_DB_LOAD Error37_ThrottleReason = 0
)

var Error37_ThrottleReason_name = map[int32]string{
	0: "TR_DB_LOAD",
}
var Error37_ThrottleReason_value = map[string]int32{
	"TR_DB_LOAD": 0,
}

func (x Error37_ThrottleReason) Enum() *Error37_ThrottleReason {
	p := new(Error37_ThrottleReason)
	*p = x
	return p
}
func (x Error37_ThrottleReason) String() string {
	return proto.EnumName(Error37_ThrottleReason_name, int32(x))
}
func (x *Error37_ThrottleReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Error37_ThrottleReason_value, data, "Error37_ThrottleReason")
	if err != nil {
		return err
	}
	*x = Error37_ThrottleReason(value)
	return nil
}

type GamesInfo_PacketID int32

const (
	GamesInfo_ID GamesInfo_PacketID = 208
)

var GamesInfo_PacketID_name = map[int32]string{
	208: "ID",
}
var GamesInfo_PacketID_value = map[string]int32{
	"ID": 208,
}

func (x GamesInfo_PacketID) Enum() *GamesInfo_PacketID {
	p := new(GamesInfo_PacketID)
	*p = x
	return p
}
func (x GamesInfo_PacketID) String() string {
	return proto.EnumName(GamesInfo_PacketID_name, int32(x))
}
func (x *GamesInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamesInfo_PacketID_value, data, "GamesInfo_PacketID")
	if err != nil {
		return err
	}
	*x = GamesInfo_PacketID(value)
	return nil
}

type GetAccountInfo_PacketID int32

const (
	GetAccountInfo_ID     GetAccountInfo_PacketID = 201
	GetAccountInfo_System GetAccountInfo_PacketID = 0
)

var GetAccountInfo_PacketID_name = map[int32]string{
	201: "ID",
	0:   "System",
}
var GetAccountInfo_PacketID_value = map[string]int32{
	"ID":     201,
	"System": 0,
}

func (x GetAccountInfo_PacketID) Enum() *GetAccountInfo_PacketID {
	p := new(GetAccountInfo_PacketID)
	*p = x
	return p
}
func (x GetAccountInfo_PacketID) String() string {
	return proto.EnumName(GetAccountInfo_PacketID_name, int32(x))
}
func (x *GetAccountInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAccountInfo_PacketID_value, data, "GetAccountInfo_PacketID")
	if err != nil {
		return err
	}
	*x = GetAccountInfo_PacketID(value)
	return nil
}

type GetAccountInfo_Request int32

const (
	GetAccountInfo_LAST_LOGIN          GetAccountInfo_Request = 1
	GetAccountInfo_DECK_LIST           GetAccountInfo_Request = 2
	GetAccountInfo_COLLECTION          GetAccountInfo_Request = 3
	GetAccountInfo_MEDAL_INFO          GetAccountInfo_Request = 4
	GetAccountInfo_MEDAL_HISTORY       GetAccountInfo_Request = 5
	GetAccountInfo_BOOSTERS            GetAccountInfo_Request = 6
	GetAccountInfo_CARD_BACKS          GetAccountInfo_Request = 7
	GetAccountInfo_PLAYER_RECORD       GetAccountInfo_Request = 8
	GetAccountInfo_GAMES_PLAYED        GetAccountInfo_Request = 9
	GetAccountInfo_DECK_LIMIT          GetAccountInfo_Request = 10
	GetAccountInfo_CAMPAIGN_INFO       GetAccountInfo_Request = 11
	GetAccountInfo_NOTICES             GetAccountInfo_Request = 12
	GetAccountInfo_MOTD                GetAccountInfo_Request = 13
	GetAccountInfo_CLIENT_OPTIONS      GetAccountInfo_Request = 14
	GetAccountInfo_CARD_VALUES         GetAccountInfo_Request = 15
	GetAccountInfo_DISCONNECTED        GetAccountInfo_Request = 16
	GetAccountInfo_ARCANE_DUST_BALANCE GetAccountInfo_Request = 17
	GetAccountInfo_FEATURES            GetAccountInfo_Request = 18
	GetAccountInfo_REWARD_PROGRESS     GetAccountInfo_Request = 19
	GetAccountInfo_GOLD_BALANCE        GetAccountInfo_Request = 20
	GetAccountInfo_HERO_XP             GetAccountInfo_Request = 21
	GetAccountInfo_PVP_QUEUE           GetAccountInfo_Request = 22
	GetAccountInfo_MASSIVE_LOGIN       GetAccountInfo_Request = 23
	GetAccountInfo_BOOSTER_TALLY       GetAccountInfo_Request = 24
)

var GetAccountInfo_Request_name = map[int32]string{
	1:  "LAST_LOGIN",
	2:  "DECK_LIST",
	3:  "COLLECTION",
	4:  "MEDAL_INFO",
	5:  "MEDAL_HISTORY",
	6:  "BOOSTERS",
	7:  "CARD_BACKS",
	8:  "PLAYER_RECORD",
	9:  "GAMES_PLAYED",
	10: "DECK_LIMIT",
	11: "CAMPAIGN_INFO",
	12: "NOTICES",
	13: "MOTD",
	14: "CLIENT_OPTIONS",
	15: "CARD_VALUES",
	16: "DISCONNECTED",
	17: "ARCANE_DUST_BALANCE",
	18: "FEATURES",
	19: "REWARD_PROGRESS",
	20: "GOLD_BALANCE",
	21: "HERO_XP",
	22: "PVP_QUEUE",
	23: "MASSIVE_LOGIN",
	24: "BOOSTER_TALLY",
}
var GetAccountInfo_Request_value = map[string]int32{
	"LAST_LOGIN":          1,
	"DECK_LIST":           2,
	"COLLECTION":          3,
	"MEDAL_INFO":          4,
	"MEDAL_HISTORY":       5,
	"BOOSTERS":            6,
	"CARD_BACKS":          7,
	"PLAYER_RECORD":       8,
	"GAMES_PLAYED":        9,
	"DECK_LIMIT":          10,
	"CAMPAIGN_INFO":       11,
	"NOTICES":             12,
	"MOTD":                13,
	"CLIENT_OPTIONS":      14,
	"CARD_VALUES":         15,
	"DISCONNECTED":        16,
	"ARCANE_DUST_BALANCE": 17,
	"FEATURES":            18,
	"REWARD_PROGRESS":     19,
	"GOLD_BALANCE":        20,
	"HERO_XP":             21,
	"PVP_QUEUE":           22,
	"MASSIVE_LOGIN":       23,
	"BOOSTER_TALLY":       24,
}

func (x GetAccountInfo_Request) Enum() *GetAccountInfo_Request {
	p := new(GetAccountInfo_Request)
	*p = x
	return p
}
func (x GetAccountInfo_Request) String() string {
	return proto.EnumName(GetAccountInfo_Request_name, int32(x))
}
func (x *GetAccountInfo_Request) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAccountInfo_Request_value, data, "GetAccountInfo_Request")
	if err != nil {
		return err
	}
	*x = GetAccountInfo_Request(value)
	return nil
}

type GetAchieves_PacketID int32

const (
	GetAchieves_ID     GetAchieves_PacketID = 253
	GetAchieves_System GetAchieves_PacketID = 0
)

var GetAchieves_PacketID_name = map[int32]string{
	253: "ID",
	0:   "System",
}
var GetAchieves_PacketID_value = map[string]int32{
	"ID":     253,
	"System": 0,
}

func (x GetAchieves_PacketID) Enum() *GetAchieves_PacketID {
	p := new(GetAchieves_PacketID)
	*p = x
	return p
}
func (x GetAchieves_PacketID) String() string {
	return proto.EnumName(GetAchieves_PacketID_name, int32(x))
}
func (x *GetAchieves_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAchieves_PacketID_value, data, "GetAchieves_PacketID")
	if err != nil {
		return err
	}
	*x = GetAchieves_PacketID(value)
	return nil
}

type GetAdventureProgress_PacketID int32

const (
	GetAdventureProgress_ID     GetAdventureProgress_PacketID = 305
	GetAdventureProgress_System GetAdventureProgress_PacketID = 0
)

var GetAdventureProgress_PacketID_name = map[int32]string{
	305: "ID",
	0:   "System",
}
var GetAdventureProgress_PacketID_value = map[string]int32{
	"ID":     305,
	"System": 0,
}

func (x GetAdventureProgress_PacketID) Enum() *GetAdventureProgress_PacketID {
	p := new(GetAdventureProgress_PacketID)
	*p = x
	return p
}
func (x GetAdventureProgress_PacketID) String() string {
	return proto.EnumName(GetAdventureProgress_PacketID_name, int32(x))
}
func (x *GetAdventureProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAdventureProgress_PacketID_value, data, "GetAdventureProgress_PacketID")
	if err != nil {
		return err
	}
	*x = GetAdventureProgress_PacketID(value)
	return nil
}

type GetAssetsVersion_PacketID int32

const (
	GetAssetsVersion_ID     GetAssetsVersion_PacketID = 303
	GetAssetsVersion_System GetAssetsVersion_PacketID = 0
)

var GetAssetsVersion_PacketID_name = map[int32]string{
	303: "ID",
	0:   "System",
}
var GetAssetsVersion_PacketID_value = map[string]int32{
	"ID":     303,
	"System": 0,
}

func (x GetAssetsVersion_PacketID) Enum() *GetAssetsVersion_PacketID {
	p := new(GetAssetsVersion_PacketID)
	*p = x
	return p
}
func (x GetAssetsVersion_PacketID) String() string {
	return proto.EnumName(GetAssetsVersion_PacketID_name, int32(x))
}
func (x *GetAssetsVersion_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAssetsVersion_PacketID_value, data, "GetAssetsVersion_PacketID")
	if err != nil {
		return err
	}
	*x = GetAssetsVersion_PacketID(value)
	return nil
}

type GetBattlePayConfig_PacketID int32

const (
	GetBattlePayConfig_ID     GetBattlePayConfig_PacketID = 237
	GetBattlePayConfig_System GetBattlePayConfig_PacketID = 1
)

var GetBattlePayConfig_PacketID_name = map[int32]string{
	237: "ID",
	1:   "System",
}
var GetBattlePayConfig_PacketID_value = map[string]int32{
	"ID":     237,
	"System": 1,
}

func (x GetBattlePayConfig_PacketID) Enum() *GetBattlePayConfig_PacketID {
	p := new(GetBattlePayConfig_PacketID)
	*p = x
	return p
}
func (x GetBattlePayConfig_PacketID) String() string {
	return proto.EnumName(GetBattlePayConfig_PacketID_name, int32(x))
}
func (x *GetBattlePayConfig_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetBattlePayConfig_PacketID_value, data, "GetBattlePayConfig_PacketID")
	if err != nil {
		return err
	}
	*x = GetBattlePayConfig_PacketID(value)
	return nil
}

type GetBattlePayStatus_PacketID int32

const (
	GetBattlePayStatus_ID     GetBattlePayStatus_PacketID = 255
	GetBattlePayStatus_System GetBattlePayStatus_PacketID = 1
)

var GetBattlePayStatus_PacketID_name = map[int32]string{
	255: "ID",
	1:   "System",
}
var GetBattlePayStatus_PacketID_value = map[string]int32{
	"ID":     255,
	"System": 1,
}

func (x GetBattlePayStatus_PacketID) Enum() *GetBattlePayStatus_PacketID {
	p := new(GetBattlePayStatus_PacketID)
	*p = x
	return p
}
func (x GetBattlePayStatus_PacketID) String() string {
	return proto.EnumName(GetBattlePayStatus_PacketID_name, int32(x))
}
func (x *GetBattlePayStatus_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetBattlePayStatus_PacketID_value, data, "GetBattlePayStatus_PacketID")
	if err != nil {
		return err
	}
	*x = GetBattlePayStatus_PacketID(value)
	return nil
}

type GetDeck_PacketID int32

const (
	GetDeck_ID     GetDeck_PacketID = 214
	GetDeck_System GetDeck_PacketID = 0
)

var GetDeck_PacketID_name = map[int32]string{
	214: "ID",
	0:   "System",
}
var GetDeck_PacketID_value = map[string]int32{
	"ID":     214,
	"System": 0,
}

func (x GetDeck_PacketID) Enum() *GetDeck_PacketID {
	p := new(GetDeck_PacketID)
	*p = x
	return p
}
func (x GetDeck_PacketID) String() string {
	return proto.EnumName(GetDeck_PacketID_name, int32(x))
}
func (x *GetDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetDeck_PacketID_value, data, "GetDeck_PacketID")
	if err != nil {
		return err
	}
	*x = GetDeck_PacketID(value)
	return nil
}

type GetOptions_PacketID int32

const (
	GetOptions_ID     GetOptions_PacketID = 240
	GetOptions_System GetOptions_PacketID = 0
)

var GetOptions_PacketID_name = map[int32]string{
	240: "ID",
	0:   "System",
}
var GetOptions_PacketID_value = map[string]int32{
	"ID":     240,
	"System": 0,
}

func (x GetOptions_PacketID) Enum() *GetOptions_PacketID {
	p := new(GetOptions_PacketID)
	*p = x
	return p
}
func (x GetOptions_PacketID) String() string {
	return proto.EnumName(GetOptions_PacketID_name, int32(x))
}
func (x *GetOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetOptions_PacketID_value, data, "GetOptions_PacketID")
	if err != nil {
		return err
	}
	*x = GetOptions_PacketID(value)
	return nil
}

type GetPurchaseMethod_PacketID int32

const (
	GetPurchaseMethod_ID     GetPurchaseMethod_PacketID = 250
	GetPurchaseMethod_System GetPurchaseMethod_PacketID = 1
)

var GetPurchaseMethod_PacketID_name = map[int32]string{
	250: "ID",
	1:   "System",
}
var GetPurchaseMethod_PacketID_value = map[string]int32{
	"ID":     250,
	"System": 1,
}

func (x GetPurchaseMethod_PacketID) Enum() *GetPurchaseMethod_PacketID {
	p := new(GetPurchaseMethod_PacketID)
	*p = x
	return p
}
func (x GetPurchaseMethod_PacketID) String() string {
	return proto.EnumName(GetPurchaseMethod_PacketID_name, int32(x))
}
func (x *GetPurchaseMethod_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetPurchaseMethod_PacketID_value, data, "GetPurchaseMethod_PacketID")
	if err != nil {
		return err
	}
	*x = GetPurchaseMethod_PacketID(value)
	return nil
}

type GetThirdPartyPurchaseStatus_PacketID int32

const (
	GetThirdPartyPurchaseStatus_ID     GetThirdPartyPurchaseStatus_PacketID = 294
	GetThirdPartyPurchaseStatus_System GetThirdPartyPurchaseStatus_PacketID = 1
)

var GetThirdPartyPurchaseStatus_PacketID_name = map[int32]string{
	294: "ID",
	1:   "System",
}
var GetThirdPartyPurchaseStatus_PacketID_value = map[string]int32{
	"ID":     294,
	"System": 1,
}

func (x GetThirdPartyPurchaseStatus_PacketID) Enum() *GetThirdPartyPurchaseStatus_PacketID {
	p := new(GetThirdPartyPurchaseStatus_PacketID)
	*p = x
	return p
}
func (x GetThirdPartyPurchaseStatus_PacketID) String() string {
	return proto.EnumName(GetThirdPartyPurchaseStatus_PacketID_name, int32(x))
}
func (x *GetThirdPartyPurchaseStatus_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetThirdPartyPurchaseStatus_PacketID_value, data, "GetThirdPartyPurchaseStatus_PacketID")
	if err != nil {
		return err
	}
	*x = GetThirdPartyPurchaseStatus_PacketID(value)
	return nil
}

type GoldBalance_PacketID int32

const (
	GoldBalance_ID GoldBalance_PacketID = 278
)

var GoldBalance_PacketID_name = map[int32]string{
	278: "ID",
}
var GoldBalance_PacketID_value = map[string]int32{
	"ID": 278,
}

func (x GoldBalance_PacketID) Enum() *GoldBalance_PacketID {
	p := new(GoldBalance_PacketID)
	*p = x
	return p
}
func (x GoldBalance_PacketID) String() string {
	return proto.EnumName(GoldBalance_PacketID_name, int32(x))
}
func (x *GoldBalance_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GoldBalance_PacketID_value, data, "GoldBalance_PacketID")
	if err != nil {
		return err
	}
	*x = GoldBalance_PacketID(value)
	return nil
}

type BattlePayConfigResponse_PacketID int32

const (
	BattlePayConfigResponse_ID BattlePayConfigResponse_PacketID = 238
)

var BattlePayConfigResponse_PacketID_name = map[int32]string{
	238: "ID",
}
var BattlePayConfigResponse_PacketID_value = map[string]int32{
	"ID": 238,
}

func (x BattlePayConfigResponse_PacketID) Enum() *BattlePayConfigResponse_PacketID {
	p := new(BattlePayConfigResponse_PacketID)
	*p = x
	return p
}
func (x BattlePayConfigResponse_PacketID) String() string {
	return proto.EnumName(BattlePayConfigResponse_PacketID_name, int32(x))
}
func (x *BattlePayConfigResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayConfigResponse_PacketID_value, data, "BattlePayConfigResponse_PacketID")
	if err != nil {
		return err
	}
	*x = BattlePayConfigResponse_PacketID(value)
	return nil
}

type GuardianTrack_PacketID int32

const (
	GuardianTrack_ID     GuardianTrack_PacketID = 261
	GuardianTrack_System GuardianTrack_PacketID = 0
)

var GuardianTrack_PacketID_name = map[int32]string{
	261: "ID",
	0:   "System",
}
var GuardianTrack_PacketID_value = map[string]int32{
	"ID":     261,
	"System": 0,
}

func (x GuardianTrack_PacketID) Enum() *GuardianTrack_PacketID {
	p := new(GuardianTrack_PacketID)
	*p = x
	return p
}
func (x GuardianTrack_PacketID) String() string {
	return proto.EnumName(GuardianTrack_PacketID_name, int32(x))
}
func (x *GuardianTrack_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuardianTrack_PacketID_value, data, "GuardianTrack_PacketID")
	if err != nil {
		return err
	}
	*x = GuardianTrack_PacketID(value)
	return nil
}

type GuardianVars_PacketID int32

const (
	GuardianVars_ID GuardianVars_PacketID = 264
)

var GuardianVars_PacketID_name = map[int32]string{
	264: "ID",
}
var GuardianVars_PacketID_value = map[string]int32{
	"ID": 264,
}

func (x GuardianVars_PacketID) Enum() *GuardianVars_PacketID {
	p := new(GuardianVars_PacketID)
	*p = x
	return p
}
func (x GuardianVars_PacketID) String() string {
	return proto.EnumName(GuardianVars_PacketID_name, int32(x))
}
func (x *GuardianVars_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuardianVars_PacketID_value, data, "GuardianVars_PacketID")
	if err != nil {
		return err
	}
	*x = GuardianVars_PacketID(value)
	return nil
}

type MassDisenchantRequest_PacketID int32

const (
	MassDisenchantRequest_ID     MassDisenchantRequest_PacketID = 268
	MassDisenchantRequest_System MassDisenchantRequest_PacketID = 0
)

var MassDisenchantRequest_PacketID_name = map[int32]string{
	268: "ID",
	0:   "System",
}
var MassDisenchantRequest_PacketID_value = map[string]int32{
	"ID":     268,
	"System": 0,
}

func (x MassDisenchantRequest_PacketID) Enum() *MassDisenchantRequest_PacketID {
	p := new(MassDisenchantRequest_PacketID)
	*p = x
	return p
}
func (x MassDisenchantRequest_PacketID) String() string {
	return proto.EnumName(MassDisenchantRequest_PacketID_name, int32(x))
}
func (x *MassDisenchantRequest_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MassDisenchantRequest_PacketID_value, data, "MassDisenchantRequest_PacketID")
	if err != nil {
		return err
	}
	*x = MassDisenchantRequest_PacketID(value)
	return nil
}

type MassDisenchantResponse_PacketID int32

const (
	MassDisenchantResponse_ID MassDisenchantResponse_PacketID = 269
)

var MassDisenchantResponse_PacketID_name = map[int32]string{
	269: "ID",
}
var MassDisenchantResponse_PacketID_value = map[string]int32{
	"ID": 269,
}

func (x MassDisenchantResponse_PacketID) Enum() *MassDisenchantResponse_PacketID {
	p := new(MassDisenchantResponse_PacketID)
	*p = x
	return p
}
func (x MassDisenchantResponse_PacketID) String() string {
	return proto.EnumName(MassDisenchantResponse_PacketID_name, int32(x))
}
func (x *MassDisenchantResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MassDisenchantResponse_PacketID_value, data, "MassDisenchantResponse_PacketID")
	if err != nil {
		return err
	}
	*x = MassDisenchantResponse_PacketID(value)
	return nil
}

type MedalHistory_PacketID int32

const (
	MedalHistory_ID MedalHistory_PacketID = 234
)

var MedalHistory_PacketID_name = map[int32]string{
	234: "ID",
}
var MedalHistory_PacketID_value = map[string]int32{
	"ID": 234,
}

func (x MedalHistory_PacketID) Enum() *MedalHistory_PacketID {
	p := new(MedalHistory_PacketID)
	*p = x
	return p
}
func (x MedalHistory_PacketID) String() string {
	return proto.EnumName(MedalHistory_PacketID_name, int32(x))
}
func (x *MedalHistory_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MedalHistory_PacketID_value, data, "MedalHistory_PacketID")
	if err != nil {
		return err
	}
	*x = MedalHistory_PacketID(value)
	return nil
}

type MedalInfo_PacketID int32

const (
	MedalInfo_ID MedalInfo_PacketID = 232
)

var MedalInfo_PacketID_name = map[int32]string{
	232: "ID",
}
var MedalInfo_PacketID_value = map[string]int32{
	"ID": 232,
}

func (x MedalInfo_PacketID) Enum() *MedalInfo_PacketID {
	p := new(MedalInfo_PacketID)
	*p = x
	return p
}
func (x MedalInfo_PacketID) String() string {
	return proto.EnumName(MedalInfo_PacketID_name, int32(x))
}
func (x *MedalInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MedalInfo_PacketID_value, data, "MedalInfo_PacketID")
	if err != nil {
		return err
	}
	*x = MedalInfo_PacketID(value)
	return nil
}

type HeroXP_PacketID int32

const (
	HeroXP_ID HeroXP_PacketID = 283
)

var HeroXP_PacketID_name = map[int32]string{
	283: "ID",
}
var HeroXP_PacketID_value = map[string]int32{
	"ID": 283,
}

func (x HeroXP_PacketID) Enum() *HeroXP_PacketID {
	p := new(HeroXP_PacketID)
	*p = x
	return p
}
func (x HeroXP_PacketID) String() string {
	return proto.EnumName(HeroXP_PacketID_name, int32(x))
}
func (x *HeroXP_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HeroXP_PacketID_value, data, "HeroXP_PacketID")
	if err != nil {
		return err
	}
	*x = HeroXP_PacketID(value)
	return nil
}

type NOP_PacketID int32

const (
	NOP_ID NOP_PacketID = 254
)

var NOP_PacketID_name = map[int32]string{
	254: "ID",
}
var NOP_PacketID_value = map[string]int32{
	"ID": 254,
}

func (x NOP_PacketID) Enum() *NOP_PacketID {
	p := new(NOP_PacketID)
	*p = x
	return p
}
func (x NOP_PacketID) String() string {
	return proto.EnumName(NOP_PacketID_name, int32(x))
}
func (x *NOP_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NOP_PacketID_value, data, "NOP_PacketID")
	if err != nil {
		return err
	}
	*x = NOP_PacketID(value)
	return nil
}

type OneClientTracking_Level int32

const (
	OneClientTracking_L_INFO    OneClientTracking_Level = 1
	OneClientTracking_L_WARNING OneClientTracking_Level = 2
	OneClientTracking_L_ERROR   OneClientTracking_Level = 3
)

var OneClientTracking_Level_name = map[int32]string{
	1: "L_INFO",
	2: "L_WARNING",
	3: "L_ERROR",
}
var OneClientTracking_Level_value = map[string]int32{
	"L_INFO":    1,
	"L_WARNING": 2,
	"L_ERROR":   3,
}

func (x OneClientTracking_Level) Enum() *OneClientTracking_Level {
	p := new(OneClientTracking_Level)
	*p = x
	return p
}
func (x OneClientTracking_Level) String() string {
	return proto.EnumName(OneClientTracking_Level_name, int32(x))
}
func (x *OneClientTracking_Level) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OneClientTracking_Level_value, data, "OneClientTracking_Level")
	if err != nil {
		return err
	}
	*x = OneClientTracking_Level(value)
	return nil
}

type ClientTracking_PacketID int32

const (
	ClientTracking_ID     ClientTracking_PacketID = 228
	ClientTracking_System ClientTracking_PacketID = 0
)

var ClientTracking_PacketID_name = map[int32]string{
	228: "ID",
	0:   "System",
}
var ClientTracking_PacketID_value = map[string]int32{
	"ID":     228,
	"System": 0,
}

func (x ClientTracking_PacketID) Enum() *ClientTracking_PacketID {
	p := new(ClientTracking_PacketID)
	*p = x
	return p
}
func (x ClientTracking_PacketID) String() string {
	return proto.EnumName(ClientTracking_PacketID_name, int32(x))
}
func (x *ClientTracking_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientTracking_PacketID_value, data, "ClientTracking_PacketID")
	if err != nil {
		return err
	}
	*x = ClientTracking_PacketID(value)
	return nil
}

type OpenBooster_PacketID int32

const (
	OpenBooster_ID     OpenBooster_PacketID = 225
	OpenBooster_System OpenBooster_PacketID = 0
)

var OpenBooster_PacketID_name = map[int32]string{
	225: "ID",
	0:   "System",
}
var OpenBooster_PacketID_value = map[string]int32{
	"ID":     225,
	"System": 0,
}

func (x OpenBooster_PacketID) Enum() *OpenBooster_PacketID {
	p := new(OpenBooster_PacketID)
	*p = x
	return p
}
func (x OpenBooster_PacketID) String() string {
	return proto.EnumName(OpenBooster_PacketID_name, int32(x))
}
func (x *OpenBooster_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OpenBooster_PacketID_value, data, "OpenBooster_PacketID")
	if err != nil {
		return err
	}
	*x = OpenBooster_PacketID(value)
	return nil
}

type PlayerRecords_PacketID int32

const (
	PlayerRecords_ID PlayerRecords_PacketID = 270
)

var PlayerRecords_PacketID_name = map[int32]string{
	270: "ID",
}
var PlayerRecords_PacketID_value = map[string]int32{
	"ID": 270,
}

func (x PlayerRecords_PacketID) Enum() *PlayerRecords_PacketID {
	p := new(PlayerRecords_PacketID)
	*p = x
	return p
}
func (x PlayerRecords_PacketID) String() string {
	return proto.EnumName(PlayerRecords_PacketID_name, int32(x))
}
func (x *PlayerRecords_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerRecords_PacketID_value, data, "PlayerRecords_PacketID")
	if err != nil {
		return err
	}
	*x = PlayerRecords_PacketID(value)
	return nil
}

type PlayQueue_PacketID int32

const (
	PlayQueue_ID PlayQueue_PacketID = 286
)

var PlayQueue_PacketID_name = map[int32]string{
	286: "ID",
}
var PlayQueue_PacketID_value = map[string]int32{
	"ID": 286,
}

func (x PlayQueue_PacketID) Enum() *PlayQueue_PacketID {
	p := new(PlayQueue_PacketID)
	*p = x
	return p
}
func (x PlayQueue_PacketID) String() string {
	return proto.EnumName(PlayQueue_PacketID_name, int32(x))
}
func (x *PlayQueue_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayQueue_PacketID_value, data, "PlayQueue_PacketID")
	if err != nil {
		return err
	}
	*x = PlayQueue_PacketID(value)
	return nil
}

type ProfileDeckLimit_PacketID int32

const (
	ProfileDeckLimit_ID ProfileDeckLimit_PacketID = 231
)

var ProfileDeckLimit_PacketID_name = map[int32]string{
	231: "ID",
}
var ProfileDeckLimit_PacketID_value = map[string]int32{
	"ID": 231,
}

func (x ProfileDeckLimit_PacketID) Enum() *ProfileDeckLimit_PacketID {
	p := new(ProfileDeckLimit_PacketID)
	*p = x
	return p
}
func (x ProfileDeckLimit_PacketID) String() string {
	return proto.EnumName(ProfileDeckLimit_PacketID_name, int32(x))
}
func (x *ProfileDeckLimit_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileDeckLimit_PacketID_value, data, "ProfileDeckLimit_PacketID")
	if err != nil {
		return err
	}
	*x = ProfileDeckLimit_PacketID(value)
	return nil
}

type ProfileLastLogin_PacketID int32

const (
	ProfileLastLogin_ID ProfileLastLogin_PacketID = 227
)

var ProfileLastLogin_PacketID_name = map[int32]string{
	227: "ID",
}
var ProfileLastLogin_PacketID_value = map[string]int32{
	"ID": 227,
}

func (x ProfileLastLogin_PacketID) Enum() *ProfileLastLogin_PacketID {
	p := new(ProfileLastLogin_PacketID)
	*p = x
	return p
}
func (x ProfileLastLogin_PacketID) String() string {
	return proto.EnumName(ProfileLastLogin_PacketID_name, int32(x))
}
func (x *ProfileLastLogin_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileLastLogin_PacketID_value, data, "ProfileLastLogin_PacketID")
	if err != nil {
		return err
	}
	*x = ProfileLastLogin_PacketID(value)
	return nil
}

type ProfileNotices_PacketID int32

const (
	ProfileNotices_ID ProfileNotices_PacketID = 212
)

var ProfileNotices_PacketID_name = map[int32]string{
	212: "ID",
}
var ProfileNotices_PacketID_value = map[string]int32{
	"ID": 212,
}

func (x ProfileNotices_PacketID) Enum() *ProfileNotices_PacketID {
	p := new(ProfileNotices_PacketID)
	*p = x
	return p
}
func (x ProfileNotices_PacketID) String() string {
	return proto.EnumName(ProfileNotices_PacketID_name, int32(x))
}
func (x *ProfileNotices_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNotices_PacketID_value, data, "ProfileNotices_PacketID")
	if err != nil {
		return err
	}
	*x = ProfileNotices_PacketID(value)
	return nil
}

type ProfileProgress_PacketID int32

const (
	ProfileProgress_ID ProfileProgress_PacketID = 233
)

var ProfileProgress_PacketID_name = map[int32]string{
	233: "ID",
}
var ProfileProgress_PacketID_value = map[string]int32{
	"ID": 233,
}

func (x ProfileProgress_PacketID) Enum() *ProfileProgress_PacketID {
	p := new(ProfileProgress_PacketID)
	*p = x
	return p
}
func (x ProfileProgress_PacketID) String() string {
	return proto.EnumName(ProfileProgress_PacketID_name, int32(x))
}
func (x *ProfileProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileProgress_PacketID_value, data, "ProfileProgress_PacketID")
	if err != nil {
		return err
	}
	*x = ProfileProgress_PacketID(value)
	return nil
}

type PurchaseError_Error int32

const (
	PurchaseError_E_UNKNOWN                        PurchaseError_Error = -1
	PurchaseError_E_SUCCESS                        PurchaseError_Error = 0
	PurchaseError_E_STILL_IN_PROGRESS              PurchaseError_Error = 1
	PurchaseError_E_INVALID_BNET                   PurchaseError_Error = 2
	PurchaseError_E_SERVICE_NA                     PurchaseError_Error = 3
	PurchaseError_E_PURCHASE_IN_PROGRESS           PurchaseError_Error = 4
	PurchaseError_E_DATABASE                       PurchaseError_Error = 5
	PurchaseError_E_INVALID_QUANTITY               PurchaseError_Error = 6
	PurchaseError_E_DUPLICATE_LICENSE              PurchaseError_Error = 7
	PurchaseError_E_REQUEST_NOT_SENT               PurchaseError_Error = 8
	PurchaseError_E_NO_ACTIVE_BPAY                 PurchaseError_Error = 9
	PurchaseError_E_FAILED_RISK                    PurchaseError_Error = 10
	PurchaseError_E_CANCELED                       PurchaseError_Error = 11
	PurchaseError_E_WAIT_MOP                       PurchaseError_Error = 12
	PurchaseError_E_WAIT_CLIENT_CONFIRM            PurchaseError_Error = 13
	PurchaseError_E_WAIT_CLIENT_RISK               PurchaseError_Error = 14
	PurchaseError_E_PRODUCT_NA                     PurchaseError_Error = 15
	PurchaseError_E_RISK_TIMEOUT                   PurchaseError_Error = 16
	PurchaseError_E_PRODUCT_ALREADY_OWNED          PurchaseError_Error = 17
	PurchaseError_E_WAIT_THIRD_PARTY_RECEIPT       PurchaseError_Error = 18
	PurchaseError_E_PRODUCT_EVENT_HAS_ENDED        PurchaseError_Error = 19
	PurchaseError_E_BP_GENERIC_FAIL                PurchaseError_Error = 100
	PurchaseError_E_BP_INVALID_CC_EXPIRY           PurchaseError_Error = 101
	PurchaseError_E_BP_RISK_ERROR                  PurchaseError_Error = 102
	PurchaseError_E_BP_NO_VALID_PAYMENT            PurchaseError_Error = 103
	PurchaseError_E_BP_PAYMENT_AUTH                PurchaseError_Error = 104
	PurchaseError_E_BP_PROVIDER_DENIED             PurchaseError_Error = 105
	PurchaseError_E_BP_PURCHASE_BAN                PurchaseError_Error = 106
	PurchaseError_E_BP_SPENDING_LIMIT              PurchaseError_Error = 107
	PurchaseError_E_BP_PARENTAL_CONTROL            PurchaseError_Error = 108
	PurchaseError_E_BP_THROTTLED                   PurchaseError_Error = 109
	PurchaseError_E_BP_THIRD_PARTY_BAD_RECEIPT     PurchaseError_Error = 110
	PurchaseError_E_BP_THIRD_PARTY_RECEIPT_USED    PurchaseError_Error = 111
	PurchaseError_E_BP_PRODUCT_UNIQUENESS_VIOLATED PurchaseError_Error = 112
	PurchaseError_E_BP_REGION_IS_DOWN              PurchaseError_Error = 113
)

var PurchaseError_Error_name = map[int32]string{
	-1:  "E_UNKNOWN",
	0:   "E_SUCCESS",
	1:   "E_STILL_IN_PROGRESS",
	2:   "E_INVALID_BNET",
	3:   "E_SERVICE_NA",
	4:   "E_PURCHASE_IN_PROGRESS",
	5:   "E_DATABASE",
	6:   "E_INVALID_QUANTITY",
	7:   "E_DUPLICATE_LICENSE",
	8:   "E_REQUEST_NOT_SENT",
	9:   "E_NO_ACTIVE_BPAY",
	10:  "E_FAILED_RISK",
	11:  "E_CANCELED",
	12:  "E_WAIT_MOP",
	13:  "E_WAIT_CLIENT_CONFIRM",
	14:  "E_WAIT_CLIENT_RISK",
	15:  "E_PRODUCT_NA",
	16:  "E_RISK_TIMEOUT",
	17:  "E_PRODUCT_ALREADY_OWNED",
	18:  "E_WAIT_THIRD_PARTY_RECEIPT",
	19:  "E_PRODUCT_EVENT_HAS_ENDED",
	100: "E_BP_GENERIC_FAIL",
	101: "E_BP_INVALID_CC_EXPIRY",
	102: "E_BP_RISK_ERROR",
	103: "E_BP_NO_VALID_PAYMENT",
	104: "E_BP_PAYMENT_AUTH",
	105: "E_BP_PROVIDER_DENIED",
	106: "E_BP_PURCHASE_BAN",
	107: "E_BP_SPENDING_LIMIT",
	108: "E_BP_PARENTAL_CONTROL",
	109: "E_BP_THROTTLED",
	110: "E_BP_THIRD_PARTY_BAD_RECEIPT",
	111: "E_BP_THIRD_PARTY_RECEIPT_USED",
	112: "E_BP_PRODUCT_UNIQUENESS_VIOLATED",
	113: "E_BP_REGION_IS_DOWN",
}
var PurchaseError_Error_value = map[string]int32{
	"E_UNKNOWN":                        -1,
	"E_SUCCESS":                        0,
	"E_STILL_IN_PROGRESS":              1,
	"E_INVALID_BNET":                   2,
	"E_SERVICE_NA":                     3,
	"E_PURCHASE_IN_PROGRESS":           4,
	"E_DATABASE":                       5,
	"E_INVALID_QUANTITY":               6,
	"E_DUPLICATE_LICENSE":              7,
	"E_REQUEST_NOT_SENT":               8,
	"E_NO_ACTIVE_BPAY":                 9,
	"E_FAILED_RISK":                    10,
	"E_CANCELED":                       11,
	"E_WAIT_MOP":                       12,
	"E_WAIT_CLIENT_CONFIRM":            13,
	"E_WAIT_CLIENT_RISK":               14,
	"E_PRODUCT_NA":                     15,
	"E_RISK_TIMEOUT":                   16,
	"E_PRODUCT_ALREADY_OWNED":          17,
	"E_WAIT_THIRD_PARTY_RECEIPT":       18,
	"E_PRODUCT_EVENT_HAS_ENDED":        19,
	"E_BP_GENERIC_FAIL":                100,
	"E_BP_INVALID_CC_EXPIRY":           101,
	"E_BP_RISK_ERROR":                  102,
	"E_BP_NO_VALID_PAYMENT":            103,
	"E_BP_PAYMENT_AUTH":                104,
	"E_BP_PROVIDER_DENIED":             105,
	"E_BP_PURCHASE_BAN":                106,
	"E_BP_SPENDING_LIMIT":              107,
	"E_BP_PARENTAL_CONTROL":            108,
	"E_BP_THROTTLED":                   109,
	"E_BP_THIRD_PARTY_BAD_RECEIPT":     110,
	"E_BP_THIRD_PARTY_RECEIPT_USED":    111,
	"E_BP_PRODUCT_UNIQUENESS_VIOLATED": 112,
	"E_BP_REGION_IS_DOWN":              113,
}

func (x PurchaseError_Error) Enum() *PurchaseError_Error {
	p := new(PurchaseError_Error)
	*p = x
	return p
}
func (x PurchaseError_Error) String() string {
	return proto.EnumName(PurchaseError_Error_name, int32(x))
}
func (x *PurchaseError_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseError_Error_value, data, "PurchaseError_Error")
	if err != nil {
		return err
	}
	*x = PurchaseError_Error(value)
	return nil
}

type BattlePayStatusResponse_PacketID int32

const (
	BattlePayStatusResponse_ID BattlePayStatusResponse_PacketID = 265
)

var BattlePayStatusResponse_PacketID_name = map[int32]string{
	265: "ID",
}
var BattlePayStatusResponse_PacketID_value = map[string]int32{
	"ID": 265,
}

func (x BattlePayStatusResponse_PacketID) Enum() *BattlePayStatusResponse_PacketID {
	p := new(BattlePayStatusResponse_PacketID)
	*p = x
	return p
}
func (x BattlePayStatusResponse_PacketID) String() string {
	return proto.EnumName(BattlePayStatusResponse_PacketID_name, int32(x))
}
func (x *BattlePayStatusResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayStatusResponse_PacketID_value, data, "BattlePayStatusResponse_PacketID")
	if err != nil {
		return err
	}
	*x = BattlePayStatusResponse_PacketID(value)
	return nil
}

type BattlePayStatusResponse_PurchaseState int32

const (
	BattlePayStatusResponse_PS_READY         BattlePayStatusResponse_PurchaseState = 0
	BattlePayStatusResponse_PS_CHECK_RESULTS BattlePayStatusResponse_PurchaseState = 1
	BattlePayStatusResponse_PS_ERROR         BattlePayStatusResponse_PurchaseState = 2
)

var BattlePayStatusResponse_PurchaseState_name = map[int32]string{
	0: "PS_READY",
	1: "PS_CHECK_RESULTS",
	2: "PS_ERROR",
}
var BattlePayStatusResponse_PurchaseState_value = map[string]int32{
	"PS_READY":         0,
	"PS_CHECK_RESULTS": 1,
	"PS_ERROR":         2,
}

func (x BattlePayStatusResponse_PurchaseState) Enum() *BattlePayStatusResponse_PurchaseState {
	p := new(BattlePayStatusResponse_PurchaseState)
	*p = x
	return p
}
func (x BattlePayStatusResponse_PurchaseState) String() string {
	return proto.EnumName(BattlePayStatusResponse_PurchaseState_name, int32(x))
}
func (x *BattlePayStatusResponse_PurchaseState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayStatusResponse_PurchaseState_value, data, "BattlePayStatusResponse_PurchaseState")
	if err != nil {
		return err
	}
	*x = BattlePayStatusResponse_PurchaseState(value)
	return nil
}

type PurchaseMethod_PacketID int32

const (
	PurchaseMethod_ID PurchaseMethod_PacketID = 272
)

var PurchaseMethod_PacketID_name = map[int32]string{
	272: "ID",
}
var PurchaseMethod_PacketID_value = map[string]int32{
	"ID": 272,
}

func (x PurchaseMethod_PacketID) Enum() *PurchaseMethod_PacketID {
	p := new(PurchaseMethod_PacketID)
	*p = x
	return p
}
func (x PurchaseMethod_PacketID) String() string {
	return proto.EnumName(PurchaseMethod_PacketID_name, int32(x))
}
func (x *PurchaseMethod_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseMethod_PacketID_value, data, "PurchaseMethod_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseMethod_PacketID(value)
	return nil
}

type PurchaseResponse_PacketID int32

const (
	PurchaseResponse_ID PurchaseResponse_PacketID = 256
)

var PurchaseResponse_PacketID_name = map[int32]string{
	256: "ID",
}
var PurchaseResponse_PacketID_value = map[string]int32{
	"ID": 256,
}

func (x PurchaseResponse_PacketID) Enum() *PurchaseResponse_PacketID {
	p := new(PurchaseResponse_PacketID)
	*p = x
	return p
}
func (x PurchaseResponse_PacketID) String() string {
	return proto.EnumName(PurchaseResponse_PacketID_name, int32(x))
}
func (x *PurchaseResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseResponse_PacketID_value, data, "PurchaseResponse_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseResponse_PacketID(value)
	return nil
}

type PurchaseWithGold_PacketID int32

const (
	PurchaseWithGold_ID     PurchaseWithGold_PacketID = 279
	PurchaseWithGold_System PurchaseWithGold_PacketID = 0
)

var PurchaseWithGold_PacketID_name = map[int32]string{
	279: "ID",
	0:   "System",
}
var PurchaseWithGold_PacketID_value = map[string]int32{
	"ID":     279,
	"System": 0,
}

func (x PurchaseWithGold_PacketID) Enum() *PurchaseWithGold_PacketID {
	p := new(PurchaseWithGold_PacketID)
	*p = x
	return p
}
func (x PurchaseWithGold_PacketID) String() string {
	return proto.EnumName(PurchaseWithGold_PacketID_name, int32(x))
}
func (x *PurchaseWithGold_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseWithGold_PacketID_value, data, "PurchaseWithGold_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseWithGold_PacketID(value)
	return nil
}

type PurchaseWithGoldResponse_PacketID int32

const (
	PurchaseWithGoldResponse_ID PurchaseWithGoldResponse_PacketID = 280
)

var PurchaseWithGoldResponse_PacketID_name = map[int32]string{
	280: "ID",
}
var PurchaseWithGoldResponse_PacketID_value = map[string]int32{
	"ID": 280,
}

func (x PurchaseWithGoldResponse_PacketID) Enum() *PurchaseWithGoldResponse_PacketID {
	p := new(PurchaseWithGoldResponse_PacketID)
	*p = x
	return p
}
func (x PurchaseWithGoldResponse_PacketID) String() string {
	return proto.EnumName(PurchaseWithGoldResponse_PacketID_name, int32(x))
}
func (x *PurchaseWithGoldResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseWithGoldResponse_PacketID_value, data, "PurchaseWithGoldResponse_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseWithGoldResponse_PacketID(value)
	return nil
}

type PurchaseWithGoldResponse_PurchaseResult int32

const (
	PurchaseWithGoldResponse_PR_SUCCESS            PurchaseWithGoldResponse_PurchaseResult = 1
	PurchaseWithGoldResponse_PR_INSUFFICIENT_FUNDS PurchaseWithGoldResponse_PurchaseResult = 2
	PurchaseWithGoldResponse_PR_PRODUCT_NA         PurchaseWithGoldResponse_PurchaseResult = 3
	PurchaseWithGoldResponse_PR_FEATURE_NA         PurchaseWithGoldResponse_PurchaseResult = 4
	PurchaseWithGoldResponse_PR_INVALID_QUANTITY   PurchaseWithGoldResponse_PurchaseResult = 5
)

var PurchaseWithGoldResponse_PurchaseResult_name = map[int32]string{
	1: "PR_SUCCESS",
	2: "PR_INSUFFICIENT_FUNDS",
	3: "PR_PRODUCT_NA",
	4: "PR_FEATURE_NA",
	5: "PR_INVALID_QUANTITY",
}
var PurchaseWithGoldResponse_PurchaseResult_value = map[string]int32{
	"PR_SUCCESS":            1,
	"PR_INSUFFICIENT_FUNDS": 2,
	"PR_PRODUCT_NA":         3,
	"PR_FEATURE_NA":         4,
	"PR_INVALID_QUANTITY":   5,
}

func (x PurchaseWithGoldResponse_PurchaseResult) Enum() *PurchaseWithGoldResponse_PurchaseResult {
	p := new(PurchaseWithGoldResponse_PurchaseResult)
	*p = x
	return p
}
func (x PurchaseWithGoldResponse_PurchaseResult) String() string {
	return proto.EnumName(PurchaseWithGoldResponse_PurchaseResult_name, int32(x))
}
func (x *PurchaseWithGoldResponse_PurchaseResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseWithGoldResponse_PurchaseResult_value, data, "PurchaseWithGoldResponse_PurchaseResult")
	if err != nil {
		return err
	}
	*x = PurchaseWithGoldResponse_PurchaseResult(value)
	return nil
}

type RenameDeck_PacketID int32

const (
	RenameDeck_ID     RenameDeck_PacketID = 211
	RenameDeck_System RenameDeck_PacketID = 0
)

var RenameDeck_PacketID_name = map[int32]string{
	211: "ID",
	0:   "System",
}
var RenameDeck_PacketID_value = map[string]int32{
	"ID":     211,
	"System": 0,
}

func (x RenameDeck_PacketID) Enum() *RenameDeck_PacketID {
	p := new(RenameDeck_PacketID)
	*p = x
	return p
}
func (x RenameDeck_PacketID) String() string {
	return proto.EnumName(RenameDeck_PacketID_name, int32(x))
}
func (x *RenameDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RenameDeck_PacketID_value, data, "RenameDeck_PacketID")
	if err != nil {
		return err
	}
	*x = RenameDeck_PacketID(value)
	return nil
}

type RewardProgress_PacketID int32

const (
	RewardProgress_ID RewardProgress_PacketID = 271
)

var RewardProgress_PacketID_name = map[int32]string{
	271: "ID",
}
var RewardProgress_PacketID_value = map[string]int32{
	"ID": 271,
}

func (x RewardProgress_PacketID) Enum() *RewardProgress_PacketID {
	p := new(RewardProgress_PacketID)
	*p = x
	return p
}
func (x RewardProgress_PacketID) String() string {
	return proto.EnumName(RewardProgress_PacketID_name, int32(x))
}
func (x *RewardProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RewardProgress_PacketID_value, data, "RewardProgress_PacketID")
	if err != nil {
		return err
	}
	*x = RewardProgress_PacketID(value)
	return nil
}

type SetAdventureOptions_PacketID int32

const (
	SetAdventureOptions_ID     SetAdventureOptions_PacketID = 310
	SetAdventureOptions_System SetAdventureOptions_PacketID = 0
)

var SetAdventureOptions_PacketID_name = map[int32]string{
	310: "ID",
	0:   "System",
}
var SetAdventureOptions_PacketID_value = map[string]int32{
	"ID":     310,
	"System": 0,
}

func (x SetAdventureOptions_PacketID) Enum() *SetAdventureOptions_PacketID {
	p := new(SetAdventureOptions_PacketID)
	*p = x
	return p
}
func (x SetAdventureOptions_PacketID) String() string {
	return proto.EnumName(SetAdventureOptions_PacketID_name, int32(x))
}
func (x *SetAdventureOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetAdventureOptions_PacketID_value, data, "SetAdventureOptions_PacketID")
	if err != nil {
		return err
	}
	*x = SetAdventureOptions_PacketID(value)
	return nil
}

type SetCardBack_PacketID int32

const (
	SetCardBack_ID     SetCardBack_PacketID = 291
	SetCardBack_System SetCardBack_PacketID = 0
)

var SetCardBack_PacketID_name = map[int32]string{
	291: "ID",
	0:   "System",
}
var SetCardBack_PacketID_value = map[string]int32{
	"ID":     291,
	"System": 0,
}

func (x SetCardBack_PacketID) Enum() *SetCardBack_PacketID {
	p := new(SetCardBack_PacketID)
	*p = x
	return p
}
func (x SetCardBack_PacketID) String() string {
	return proto.EnumName(SetCardBack_PacketID_name, int32(x))
}
func (x *SetCardBack_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetCardBack_PacketID_value, data, "SetCardBack_PacketID")
	if err != nil {
		return err
	}
	*x = SetCardBack_PacketID(value)
	return nil
}

type SetCardBackResponse_PacketID int32

const (
	SetCardBackResponse_ID SetCardBackResponse_PacketID = 292
)

var SetCardBackResponse_PacketID_name = map[int32]string{
	292: "ID",
}
var SetCardBackResponse_PacketID_value = map[string]int32{
	"ID": 292,
}

func (x SetCardBackResponse_PacketID) Enum() *SetCardBackResponse_PacketID {
	p := new(SetCardBackResponse_PacketID)
	*p = x
	return p
}
func (x SetCardBackResponse_PacketID) String() string {
	return proto.EnumName(SetCardBackResponse_PacketID_name, int32(x))
}
func (x *SetCardBackResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetCardBackResponse_PacketID_value, data, "SetCardBackResponse_PacketID")
	if err != nil {
		return err
	}
	*x = SetCardBackResponse_PacketID(value)
	return nil
}

type SetOptions_PacketID int32

const (
	SetOptions_ID     SetOptions_PacketID = 239
	SetOptions_System SetOptions_PacketID = 0
)

var SetOptions_PacketID_name = map[int32]string{
	239: "ID",
	0:   "System",
}
var SetOptions_PacketID_value = map[string]int32{
	"ID":     239,
	"System": 0,
}

func (x SetOptions_PacketID) Enum() *SetOptions_PacketID {
	p := new(SetOptions_PacketID)
	*p = x
	return p
}
func (x SetOptions_PacketID) String() string {
	return proto.EnumName(SetOptions_PacketID_name, int32(x))
}
func (x *SetOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetOptions_PacketID_value, data, "SetOptions_PacketID")
	if err != nil {
		return err
	}
	*x = SetOptions_PacketID(value)
	return nil
}

type SetProgress_PacketID int32

const (
	SetProgress_ID     SetProgress_PacketID = 230
	SetProgress_System SetProgress_PacketID = 0
)

var SetProgress_PacketID_name = map[int32]string{
	230: "ID",
	0:   "System",
}
var SetProgress_PacketID_value = map[string]int32{
	"ID":     230,
	"System": 0,
}

func (x SetProgress_PacketID) Enum() *SetProgress_PacketID {
	p := new(SetProgress_PacketID)
	*p = x
	return p
}
func (x SetProgress_PacketID) String() string {
	return proto.EnumName(SetProgress_PacketID_name, int32(x))
}
func (x *SetProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetProgress_PacketID_value, data, "SetProgress_PacketID")
	if err != nil {
		return err
	}
	*x = SetProgress_PacketID(value)
	return nil
}

type SetProgressResponse_PacketID int32

const (
	SetProgressResponse_ID SetProgressResponse_PacketID = 296
)

var SetProgressResponse_PacketID_name = map[int32]string{
	296: "ID",
}
var SetProgressResponse_PacketID_value = map[string]int32{
	"ID": 296,
}

func (x SetProgressResponse_PacketID) Enum() *SetProgressResponse_PacketID {
	p := new(SetProgressResponse_PacketID)
	*p = x
	return p
}
func (x SetProgressResponse_PacketID) String() string {
	return proto.EnumName(SetProgressResponse_PacketID_name, int32(x))
}
func (x *SetProgressResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetProgressResponse_PacketID_value, data, "SetProgressResponse_PacketID")
	if err != nil {
		return err
	}
	*x = SetProgressResponse_PacketID(value)
	return nil
}

type SetProgressResponse_Result int32

const (
	SetProgressResponse_SUCCESS      SetProgressResponse_Result = 1
	SetProgressResponse_FAILED       SetProgressResponse_Result = 2
	SetProgressResponse_ALREADY_DONE SetProgressResponse_Result = 3
)

var SetProgressResponse_Result_name = map[int32]string{
	1: "SUCCESS",
	2: "FAILED",
	3: "ALREADY_DONE",
}
var SetProgressResponse_Result_value = map[string]int32{
	"SUCCESS":      1,
	"FAILED":       2,
	"ALREADY_DONE": 3,
}

func (x SetProgressResponse_Result) Enum() *SetProgressResponse_Result {
	p := new(SetProgressResponse_Result)
	*p = x
	return p
}
func (x SetProgressResponse_Result) String() string {
	return proto.EnumName(SetProgressResponse_Result_name, int32(x))
}
func (x *SetProgressResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetProgressResponse_Result_value, data, "SetProgressResponse_Result")
	if err != nil {
		return err
	}
	*x = SetProgressResponse_Result(value)
	return nil
}

type MassiveLoginReply_PacketID int32

const (
	MassiveLoginReply_ID MassiveLoginReply_PacketID = 300
)

var MassiveLoginReply_PacketID_name = map[int32]string{
	300: "ID",
}
var MassiveLoginReply_PacketID_value = map[string]int32{
	"ID": 300,
}

func (x MassiveLoginReply_PacketID) Enum() *MassiveLoginReply_PacketID {
	p := new(MassiveLoginReply_PacketID)
	*p = x
	return p
}
func (x MassiveLoginReply_PacketID) String() string {
	return proto.EnumName(MassiveLoginReply_PacketID_name, int32(x))
}
func (x *MassiveLoginReply_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MassiveLoginReply_PacketID_value, data, "MassiveLoginReply_PacketID")
	if err != nil {
		return err
	}
	*x = MassiveLoginReply_PacketID(value)
	return nil
}

type Subscribe_PacketID int32

const (
	Subscribe_ID Subscribe_PacketID = 314
)

var Subscribe_PacketID_name = map[int32]string{
	314: "ID",
}
var Subscribe_PacketID_value = map[string]int32{
	"ID": 314,
}

func (x Subscribe_PacketID) Enum() *Subscribe_PacketID {
	p := new(Subscribe_PacketID)
	*p = x
	return p
}
func (x Subscribe_PacketID) String() string {
	return proto.EnumName(Subscribe_PacketID_name, int32(x))
}
func (x *Subscribe_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Subscribe_PacketID_value, data, "Subscribe_PacketID")
	if err != nil {
		return err
	}
	*x = Subscribe_PacketID(value)
	return nil
}

type SubscribeResponse_Features int32

const (
	SubscribeResponse_F_SYSTEM_0 SubscribeResponse_Features = 1
	SubscribeResponse_F_SYSTEM_1 SubscribeResponse_Features = 2
)

var SubscribeResponse_Features_name = map[int32]string{
	1: "F_SYSTEM_0",
	2: "F_SYSTEM_1",
}
var SubscribeResponse_Features_value = map[string]int32{
	"F_SYSTEM_0": 1,
	"F_SYSTEM_1": 2,
}

func (x SubscribeResponse_Features) Enum() *SubscribeResponse_Features {
	p := new(SubscribeResponse_Features)
	*p = x
	return p
}
func (x SubscribeResponse_Features) String() string {
	return proto.EnumName(SubscribeResponse_Features_name, int32(x))
}
func (x *SubscribeResponse_Features) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubscribeResponse_Features_value, data, "SubscribeResponse_Features")
	if err != nil {
		return err
	}
	*x = SubscribeResponse_Features(value)
	return nil
}

type SubscribeResponse_PacketID int32

const (
	SubscribeResponse_ID SubscribeResponse_PacketID = 315
)

var SubscribeResponse_PacketID_name = map[int32]string{
	315: "ID",
}
var SubscribeResponse_PacketID_value = map[string]int32{
	"ID": 315,
}

func (x SubscribeResponse_PacketID) Enum() *SubscribeResponse_PacketID {
	p := new(SubscribeResponse_PacketID)
	*p = x
	return p
}
func (x SubscribeResponse_PacketID) String() string {
	return proto.EnumName(SubscribeResponse_PacketID_name, int32(x))
}
func (x *SubscribeResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubscribeResponse_PacketID_value, data, "SubscribeResponse_PacketID")
	if err != nil {
		return err
	}
	*x = SubscribeResponse_PacketID(value)
	return nil
}

type ThirdPartyPurchaseStatusResponse_PacketID int32

const (
	ThirdPartyPurchaseStatusResponse_ID ThirdPartyPurchaseStatusResponse_PacketID = 295
)

var ThirdPartyPurchaseStatusResponse_PacketID_name = map[int32]string{
	295: "ID",
}
var ThirdPartyPurchaseStatusResponse_PacketID_value = map[string]int32{
	"ID": 295,
}

func (x ThirdPartyPurchaseStatusResponse_PacketID) Enum() *ThirdPartyPurchaseStatusResponse_PacketID {
	p := new(ThirdPartyPurchaseStatusResponse_PacketID)
	*p = x
	return p
}
func (x ThirdPartyPurchaseStatusResponse_PacketID) String() string {
	return proto.EnumName(ThirdPartyPurchaseStatusResponse_PacketID_name, int32(x))
}
func (x *ThirdPartyPurchaseStatusResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThirdPartyPurchaseStatusResponse_PacketID_value, data, "ThirdPartyPurchaseStatusResponse_PacketID")
	if err != nil {
		return err
	}
	*x = ThirdPartyPurchaseStatusResponse_PacketID(value)
	return nil
}

type ThirdPartyPurchaseStatusResponse_Status int32

const (
	ThirdPartyPurchaseStatusResponse_NOT_FOUND   ThirdPartyPurchaseStatusResponse_Status = 1
	ThirdPartyPurchaseStatusResponse_SUCCEEDED   ThirdPartyPurchaseStatusResponse_Status = 2
	ThirdPartyPurchaseStatusResponse_FAILED      ThirdPartyPurchaseStatusResponse_Status = 3
	ThirdPartyPurchaseStatusResponse_IN_PROGRESS ThirdPartyPurchaseStatusResponse_Status = 4
)

var ThirdPartyPurchaseStatusResponse_Status_name = map[int32]string{
	1: "NOT_FOUND",
	2: "SUCCEEDED",
	3: "FAILED",
	4: "IN_PROGRESS",
}
var ThirdPartyPurchaseStatusResponse_Status_value = map[string]int32{
	"NOT_FOUND":   1,
	"SUCCEEDED":   2,
	"FAILED":      3,
	"IN_PROGRESS": 4,
}

func (x ThirdPartyPurchaseStatusResponse_Status) Enum() *ThirdPartyPurchaseStatusResponse_Status {
	p := new(ThirdPartyPurchaseStatusResponse_Status)
	*p = x
	return p
}
func (x ThirdPartyPurchaseStatusResponse_Status) String() string {
	return proto.EnumName(ThirdPartyPurchaseStatusResponse_Status_name, int32(x))
}
func (x *ThirdPartyPurchaseStatusResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThirdPartyPurchaseStatusResponse_Status_value, data, "ThirdPartyPurchaseStatusResponse_Status")
	if err != nil {
		return err
	}
	*x = ThirdPartyPurchaseStatusResponse_Status(value)
	return nil
}

type StartThirdPartyPurchase_PacketID int32

const (
	StartThirdPartyPurchase_ID     StartThirdPartyPurchase_PacketID = 312
	StartThirdPartyPurchase_System StartThirdPartyPurchase_PacketID = 1
)

var StartThirdPartyPurchase_PacketID_name = map[int32]string{
	312: "ID",
	1:   "System",
}
var StartThirdPartyPurchase_PacketID_value = map[string]int32{
	"ID":     312,
	"System": 1,
}

func (x StartThirdPartyPurchase_PacketID) Enum() *StartThirdPartyPurchase_PacketID {
	p := new(StartThirdPartyPurchase_PacketID)
	*p = x
	return p
}
func (x StartThirdPartyPurchase_PacketID) String() string {
	return proto.EnumName(StartThirdPartyPurchase_PacketID_name, int32(x))
}
func (x *StartThirdPartyPurchase_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StartThirdPartyPurchase_PacketID_value, data, "StartThirdPartyPurchase_PacketID")
	if err != nil {
		return err
	}
	*x = StartThirdPartyPurchase_PacketID(value)
	return nil
}

type SubmitThirdPartyReceipt_PacketID int32

const (
	SubmitThirdPartyReceipt_ID     SubmitThirdPartyReceipt_PacketID = 293
	SubmitThirdPartyReceipt_System SubmitThirdPartyReceipt_PacketID = 1
)

var SubmitThirdPartyReceipt_PacketID_name = map[int32]string{
	293: "ID",
	1:   "System",
}
var SubmitThirdPartyReceipt_PacketID_value = map[string]int32{
	"ID":     293,
	"System": 1,
}

func (x SubmitThirdPartyReceipt_PacketID) Enum() *SubmitThirdPartyReceipt_PacketID {
	p := new(SubmitThirdPartyReceipt_PacketID)
	*p = x
	return p
}
func (x SubmitThirdPartyReceipt_PacketID) String() string {
	return proto.EnumName(SubmitThirdPartyReceipt_PacketID_name, int32(x))
}
func (x *SubmitThirdPartyReceipt_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubmitThirdPartyReceipt_PacketID_value, data, "SubmitThirdPartyReceipt_PacketID")
	if err != nil {
		return err
	}
	*x = SubmitThirdPartyReceipt_PacketID(value)
	return nil
}

type TriggerEventResponse_PacketID int32

const (
	TriggerEventResponse_ID TriggerEventResponse_PacketID = 299
)

var TriggerEventResponse_PacketID_name = map[int32]string{
	299: "ID",
}
var TriggerEventResponse_PacketID_value = map[string]int32{
	"ID": 299,
}

func (x TriggerEventResponse_PacketID) Enum() *TriggerEventResponse_PacketID {
	p := new(TriggerEventResponse_PacketID)
	*p = x
	return p
}
func (x TriggerEventResponse_PacketID) String() string {
	return proto.EnumName(TriggerEventResponse_PacketID_name, int32(x))
}
func (x *TriggerEventResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TriggerEventResponse_PacketID_value, data, "TriggerEventResponse_PacketID")
	if err != nil {
		return err
	}
	*x = TriggerEventResponse_PacketID(value)
	return nil
}

type TriggerLaunchDayEvent_PacketID int32

const (
	TriggerLaunchDayEvent_ID     TriggerLaunchDayEvent_PacketID = 298
	TriggerLaunchDayEvent_System TriggerLaunchDayEvent_PacketID = 0
)

var TriggerLaunchDayEvent_PacketID_name = map[int32]string{
	298: "ID",
	0:   "System",
}
var TriggerLaunchDayEvent_PacketID_value = map[string]int32{
	"ID":     298,
	"System": 0,
}

func (x TriggerLaunchDayEvent_PacketID) Enum() *TriggerLaunchDayEvent_PacketID {
	p := new(TriggerLaunchDayEvent_PacketID)
	*p = x
	return p
}
func (x TriggerLaunchDayEvent_PacketID) String() string {
	return proto.EnumName(TriggerLaunchDayEvent_PacketID_name, int32(x))
}
func (x *TriggerLaunchDayEvent_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TriggerLaunchDayEvent_PacketID_value, data, "TriggerLaunchDayEvent_PacketID")
	if err != nil {
		return err
	}
	*x = TriggerLaunchDayEvent_PacketID(value)
	return nil
}

type UpdateLogin_PacketID int32

const (
	UpdateLogin_ID     UpdateLogin_PacketID = 205
	UpdateLogin_System UpdateLogin_PacketID = 0
)

var UpdateLogin_PacketID_name = map[int32]string{
	205: "ID",
	0:   "System",
}
var UpdateLogin_PacketID_value = map[string]int32{
	"ID":     205,
	"System": 0,
}

func (x UpdateLogin_PacketID) Enum() *UpdateLogin_PacketID {
	p := new(UpdateLogin_PacketID)
	*p = x
	return p
}
func (x UpdateLogin_PacketID) String() string {
	return proto.EnumName(UpdateLogin_PacketID_name, int32(x))
}
func (x *UpdateLogin_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateLogin_PacketID_value, data, "UpdateLogin_PacketID")
	if err != nil {
		return err
	}
	*x = UpdateLogin_PacketID(value)
	return nil
}

type UpdateLoginComplete_PacketID int32

const (
	UpdateLoginComplete_ID UpdateLoginComplete_PacketID = 307
)

var UpdateLoginComplete_PacketID_name = map[int32]string{
	307: "ID",
}
var UpdateLoginComplete_PacketID_value = map[string]int32{
	"ID": 307,
}

func (x UpdateLoginComplete_PacketID) Enum() *UpdateLoginComplete_PacketID {
	p := new(UpdateLoginComplete_PacketID)
	*p = x
	return p
}
func (x UpdateLoginComplete_PacketID) String() string {
	return proto.EnumName(UpdateLoginComplete_PacketID_name, int32(x))
}
func (x *UpdateLoginComplete_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateLoginComplete_PacketID_value, data, "UpdateLoginComplete_PacketID")
	if err != nil {
		return err
	}
	*x = UpdateLoginComplete_PacketID(value)
	return nil
}

type UtilAuth_PacketID int32

const (
	UtilAuth_ID UtilAuth_PacketID = 204
)

var UtilAuth_PacketID_name = map[int32]string{
	204: "ID",
}
var UtilAuth_PacketID_value = map[string]int32{
	"ID": 204,
}

func (x UtilAuth_PacketID) Enum() *UtilAuth_PacketID {
	p := new(UtilAuth_PacketID)
	*p = x
	return p
}
func (x UtilAuth_PacketID) String() string {
	return proto.EnumName(UtilAuth_PacketID_name, int32(x))
}
func (x *UtilAuth_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UtilAuth_PacketID_value, data, "UtilAuth_PacketID")
	if err != nil {
		return err
	}
	*x = UtilAuth_PacketID(value)
	return nil
}

type UtilAuth_Result int32

const (
	UtilAuth_UNKNOWN   UtilAuth_Result = 0
	UtilAuth_ALLOWED   UtilAuth_Result = 1
	UtilAuth_INVALID   UtilAuth_Result = 2
	UtilAuth_NO_SERVER UtilAuth_Result = 3
)

var UtilAuth_Result_name = map[int32]string{
	0: "UNKNOWN",
	1: "ALLOWED",
	2: "INVALID",
	3: "NO_SERVER",
}
var UtilAuth_Result_value = map[string]int32{
	"UNKNOWN":   0,
	"ALLOWED":   1,
	"INVALID":   2,
	"NO_SERVER": 3,
}

func (x UtilAuth_Result) Enum() *UtilAuth_Result {
	p := new(UtilAuth_Result)
	*p = x
	return p
}
func (x UtilAuth_Result) String() string {
	return proto.EnumName(UtilAuth_Result_name, int32(x))
}
func (x *UtilAuth_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UtilAuth_Result_value, data, "UtilAuth_Result")
	if err != nil {
		return err
	}
	*x = UtilAuth_Result(value)
	return nil
}

type UtilHandshake_PacketID int32

const (
	UtilHandshake_ID UtilHandshake_PacketID = 203
)

var UtilHandshake_PacketID_name = map[int32]string{
	203: "ID",
}
var UtilHandshake_PacketID_value = map[string]int32{
	"ID": 203,
}

func (x UtilHandshake_PacketID) Enum() *UtilHandshake_PacketID {
	p := new(UtilHandshake_PacketID)
	*p = x
	return p
}
func (x UtilHandshake_PacketID) String() string {
	return proto.EnumName(UtilHandshake_PacketID_name, int32(x))
}
func (x *UtilHandshake_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UtilHandshake_PacketID_value, data, "UtilHandshake_PacketID")
	if err != nil {
		return err
	}
	*x = UtilHandshake_PacketID(value)
	return nil
}

type ValidateAchieve_PacketID int32

const (
	ValidateAchieve_ID     ValidateAchieve_PacketID = 284
	ValidateAchieve_System ValidateAchieve_PacketID = 0
)

var ValidateAchieve_PacketID_name = map[int32]string{
	284: "ID",
	0:   "System",
}
var ValidateAchieve_PacketID_value = map[string]int32{
	"ID":     284,
	"System": 0,
}

func (x ValidateAchieve_PacketID) Enum() *ValidateAchieve_PacketID {
	p := new(ValidateAchieve_PacketID)
	*p = x
	return p
}
func (x ValidateAchieve_PacketID) String() string {
	return proto.EnumName(ValidateAchieve_PacketID_name, int32(x))
}
func (x *ValidateAchieve_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ValidateAchieve_PacketID_value, data, "ValidateAchieve_PacketID")
	if err != nil {
		return err
	}
	*x = ValidateAchieve_PacketID(value)
	return nil
}

type ValidateAchieveResponse_PacketID int32

const (
	ValidateAchieveResponse_ID ValidateAchieveResponse_PacketID = 285
)

var ValidateAchieveResponse_PacketID_name = map[int32]string{
	285: "ID",
}
var ValidateAchieveResponse_PacketID_value = map[string]int32{
	"ID": 285,
}

func (x ValidateAchieveResponse_PacketID) Enum() *ValidateAchieveResponse_PacketID {
	p := new(ValidateAchieveResponse_PacketID)
	*p = x
	return p
}
func (x ValidateAchieveResponse_PacketID) String() string {
	return proto.EnumName(ValidateAchieveResponse_PacketID_name, int32(x))
}
func (x *ValidateAchieveResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ValidateAchieveResponse_PacketID_value, data, "ValidateAchieveResponse_PacketID")
	if err != nil {
		return err
	}
	*x = ValidateAchieveResponse_PacketID(value)
	return nil
}

type AccountLicenseAchieveResponse struct {
	Achieve          *int32                                `protobuf:"varint,1,opt,name=achieve" json:"achieve,omitempty"`
	Result           *AccountLicenseAchieveResponse_Result `protobuf:"varint,2,opt,name=result,enum=PegasusUtil.AccountLicenseAchieveResponse_Result,def=1" json:"result,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *AccountLicenseAchieveResponse) Reset()         { *m = AccountLicenseAchieveResponse{} }
func (m *AccountLicenseAchieveResponse) String() string { return proto.CompactTextString(m) }
func (*AccountLicenseAchieveResponse) ProtoMessage()    {}

const Default_AccountLicenseAchieveResponse_Result AccountLicenseAchieveResponse_Result = AccountLicenseAchieveResponse_INVALID_ACHIEVE

func (m *AccountLicenseAchieveResponse) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

func (m *AccountLicenseAchieveResponse) GetResult() AccountLicenseAchieveResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_AccountLicenseAchieveResponse_Result
}

type Achieve struct {
	Id               *int32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Progress         *int32              `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	AckProgress      *int32              `protobuf:"varint,3,opt,name=ack_progress" json:"ack_progress,omitempty"`
	CompletionCount  *int32              `protobuf:"varint,4,opt,name=completion_count" json:"completion_count,omitempty"`
	Active           *bool               `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
	StartedCount     *int32              `protobuf:"varint,6,opt,name=started_count" json:"started_count,omitempty"`
	DateGiven        *PegasusShared.Date `protobuf:"bytes,7,opt,name=date_given" json:"date_given,omitempty"`
	DateCompleted    *PegasusShared.Date `protobuf:"bytes,8,opt,name=date_completed" json:"date_completed,omitempty"`
	DoNotAck         *bool               `protobuf:"varint,9,opt,name=do_not_ack" json:"do_not_ack,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Achieve) Reset()         { *m = Achieve{} }
func (m *Achieve) String() string { return proto.CompactTextString(m) }
func (*Achieve) ProtoMessage()    {}

func (m *Achieve) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Achieve) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *Achieve) GetAckProgress() int32 {
	if m != nil && m.AckProgress != nil {
		return *m.AckProgress
	}
	return 0
}

func (m *Achieve) GetCompletionCount() int32 {
	if m != nil && m.CompletionCount != nil {
		return *m.CompletionCount
	}
	return 0
}

func (m *Achieve) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

func (m *Achieve) GetStartedCount() int32 {
	if m != nil && m.StartedCount != nil {
		return *m.StartedCount
	}
	return 0
}

func (m *Achieve) GetDateGiven() *PegasusShared.Date {
	if m != nil {
		return m.DateGiven
	}
	return nil
}

func (m *Achieve) GetDateCompleted() *PegasusShared.Date {
	if m != nil {
		return m.DateCompleted
	}
	return nil
}

func (m *Achieve) GetDoNotAck() bool {
	if m != nil && m.DoNotAck != nil {
		return *m.DoNotAck
	}
	return false
}

type AchieveInfo struct {
	Desc             *string `protobuf:"bytes,1,opt,name=desc" json:"desc,omitempty"`
	Type             *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Quota            *int32  `protobuf:"varint,3,opt,name=quota" json:"quota,omitempty"`
	Reward           *int32  `protobuf:"varint,4,opt,name=reward" json:"reward,omitempty"`
	Data1            *int64  `protobuf:"varint,5,opt,name=data1" json:"data1,omitempty"`
	Data2            *int64  `protobuf:"varint,6,opt,name=data2" json:"data2,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AchieveInfo) Reset()         { *m = AchieveInfo{} }
func (m *AchieveInfo) String() string { return proto.CompactTextString(m) }
func (*AchieveInfo) ProtoMessage()    {}

func (m *AchieveInfo) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *AchieveInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AchieveInfo) GetQuota() int32 {
	if m != nil && m.Quota != nil {
		return *m.Quota
	}
	return 0
}

func (m *AchieveInfo) GetReward() int32 {
	if m != nil && m.Reward != nil {
		return *m.Reward
	}
	return 0
}

func (m *AchieveInfo) GetData1() int64 {
	if m != nil && m.Data1 != nil {
		return *m.Data1
	}
	return 0
}

func (m *AchieveInfo) GetData2() int64 {
	if m != nil && m.Data2 != nil {
		return *m.Data2
	}
	return 0
}

type Achieves struct {
	List             []*Achieve `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Achieves) Reset()         { *m = Achieves{} }
func (m *Achieves) String() string { return proto.CompactTextString(m) }
func (*Achieves) ProtoMessage()    {}

func (m *Achieves) GetList() []*Achieve {
	if m != nil {
		return m.List
	}
	return nil
}

type AckAchieveProgress struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AckProgress      *int32 `protobuf:"varint,2,opt,name=ack_progress" json:"ack_progress,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AckAchieveProgress) Reset()         { *m = AckAchieveProgress{} }
func (m *AckAchieveProgress) String() string { return proto.CompactTextString(m) }
func (*AckAchieveProgress) ProtoMessage()    {}

func (m *AckAchieveProgress) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AckAchieveProgress) GetAckProgress() int32 {
	if m != nil && m.AckProgress != nil {
		return *m.AckProgress
	}
	return 0
}

type AckCardSeen struct {
	CardDefs         []*PegasusShared.CardDef `protobuf:"bytes,1,rep,name=card_defs" json:"card_defs,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *AckCardSeen) Reset()         { *m = AckCardSeen{} }
func (m *AckCardSeen) String() string { return proto.CompactTextString(m) }
func (*AckCardSeen) ProtoMessage()    {}

func (m *AckCardSeen) GetCardDefs() []*PegasusShared.CardDef {
	if m != nil {
		return m.CardDefs
	}
	return nil
}

type AckNotice struct {
	Entry            *int64 `protobuf:"varint,1,opt,name=entry" json:"entry,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AckNotice) Reset()         { *m = AckNotice{} }
func (m *AckNotice) String() string { return proto.CompactTextString(m) }
func (*AckNotice) ProtoMessage()    {}

func (m *AckNotice) GetEntry() int64 {
	if m != nil && m.Entry != nil {
		return *m.Entry
	}
	return 0
}

type AcknowledgeBanner struct {
	Banner           *int32 `protobuf:"varint,1,opt,name=banner" json:"banner,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AcknowledgeBanner) Reset()         { *m = AcknowledgeBanner{} }
func (m *AcknowledgeBanner) String() string { return proto.CompactTextString(m) }
func (*AcknowledgeBanner) ProtoMessage()    {}

func (m *AcknowledgeBanner) GetBanner() int32 {
	if m != nil && m.Banner != nil {
		return *m.Banner
	}
	return 0
}

type AckWingProgress struct {
	Wing             *int32 `protobuf:"varint,1,opt,name=wing" json:"wing,omitempty"`
	Ack              *int32 `protobuf:"varint,2,opt,name=ack" json:"ack,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AckWingProgress) Reset()         { *m = AckWingProgress{} }
func (m *AckWingProgress) String() string { return proto.CompactTextString(m) }
func (*AckWingProgress) ProtoMessage()    {}

func (m *AckWingProgress) GetWing() int32 {
	if m != nil && m.Wing != nil {
		return *m.Wing
	}
	return 0
}

func (m *AckWingProgress) GetAck() int32 {
	if m != nil && m.Ack != nil {
		return *m.Ack
	}
	return 0
}

type AdventureOptions struct {
	AdventureId      *int32  `protobuf:"varint,1,opt,name=adventure_id" json:"adventure_id,omitempty"`
	Options          *uint64 `protobuf:"varint,2,opt,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdventureOptions) Reset()         { *m = AdventureOptions{} }
func (m *AdventureOptions) String() string { return proto.CompactTextString(m) }
func (*AdventureOptions) ProtoMessage()    {}

func (m *AdventureOptions) GetAdventureId() int32 {
	if m != nil && m.AdventureId != nil {
		return *m.AdventureId
	}
	return 0
}

func (m *AdventureOptions) GetOptions() uint64 {
	if m != nil && m.Options != nil {
		return *m.Options
	}
	return 0
}

type AdventureProgressResponse struct {
	List             []*PegasusShared.AdventureProgress `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *AdventureProgressResponse) Reset()         { *m = AdventureProgressResponse{} }
func (m *AdventureProgressResponse) String() string { return proto.CompactTextString(m) }
func (*AdventureProgressResponse) ProtoMessage()    {}

func (m *AdventureProgressResponse) GetList() []*PegasusShared.AdventureProgress {
	if m != nil {
		return m.List
	}
	return nil
}

type ArcaneDustBalance struct {
	Balance          *int64 `protobuf:"varint,1,opt,name=balance" json:"balance,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArcaneDustBalance) Reset()         { *m = ArcaneDustBalance{} }
func (m *ArcaneDustBalance) String() string { return proto.CompactTextString(m) }
func (*ArcaneDustBalance) ProtoMessage()    {}

func (m *ArcaneDustBalance) GetBalance() int64 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

type AssetsVersionResponse struct {
	Version          *int32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AssetsVersionResponse) Reset()         { *m = AssetsVersionResponse{} }
func (m *AssetsVersionResponse) String() string { return proto.CompactTextString(m) }
func (*AssetsVersionResponse) ProtoMessage()    {}

func (m *AssetsVersionResponse) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type AtlasAchieve struct {
	Id               *int32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Progress         *int32              `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	IsComplete       *bool               `protobuf:"varint,3,opt,name=is_complete" json:"is_complete,omitempty"`
	AckValue         *int32              `protobuf:"varint,4,opt,name=ack_value" json:"ack_value,omitempty"`
	DateCompleted    *PegasusShared.Date `protobuf:"bytes,5,opt,name=date_completed" json:"date_completed,omitempty"`
	CompletionCount  *int32              `protobuf:"varint,6,opt,name=completion_count" json:"completion_count,omitempty"`
	Active           *bool               `protobuf:"varint,7,opt,name=active" json:"active,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasAchieve) Reset()         { *m = AtlasAchieve{} }
func (m *AtlasAchieve) String() string { return proto.CompactTextString(m) }
func (*AtlasAchieve) ProtoMessage()    {}

func (m *AtlasAchieve) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AtlasAchieve) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *AtlasAchieve) GetIsComplete() bool {
	if m != nil && m.IsComplete != nil {
		return *m.IsComplete
	}
	return false
}

func (m *AtlasAchieve) GetAckValue() int32 {
	if m != nil && m.AckValue != nil {
		return *m.AckValue
	}
	return 0
}

func (m *AtlasAchieve) GetDateCompleted() *PegasusShared.Date {
	if m != nil {
		return m.DateCompleted
	}
	return nil
}

func (m *AtlasAchieve) GetCompletionCount() int32 {
	if m != nil && m.CompletionCount != nil {
		return *m.CompletionCount
	}
	return 0
}

func (m *AtlasAchieve) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

type AtlasAchieveInfo struct {
	Info             []*AchieveInfo `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AtlasAchieveInfo) Reset()         { *m = AtlasAchieveInfo{} }
func (m *AtlasAchieveInfo) String() string { return proto.CompactTextString(m) }
func (*AtlasAchieveInfo) ProtoMessage()    {}

func (m *AtlasAchieveInfo) GetInfo() []*AchieveInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type AtlasAchieves struct {
	Info             []*AtlasAchieve `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *AtlasAchieves) Reset()         { *m = AtlasAchieves{} }
func (m *AtlasAchieves) String() string { return proto.CompactTextString(m) }
func (*AtlasAchieves) ProtoMessage()    {}

func (m *AtlasAchieves) GetInfo() []*AtlasAchieve {
	if m != nil {
		return m.Info
	}
	return nil
}

type AtlasAddBooster struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Type             *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasAddBooster) Reset()         { *m = AtlasAddBooster{} }
func (m *AtlasAddBooster) String() string { return proto.CompactTextString(m) }
func (*AtlasAddBooster) ProtoMessage()    {}

func (m *AtlasAddBooster) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasAddBooster) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type AtlasAddCard struct {
	AccountId        *uint64                `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	CardDef          *PegasusShared.CardDef `protobuf:"bytes,2,opt,name=card_def" json:"card_def,omitempty"`
	IsSeen           *bool                  `protobuf:"varint,3,opt,name=is_seen" json:"is_seen,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *AtlasAddCard) Reset()         { *m = AtlasAddCard{} }
func (m *AtlasAddCard) String() string { return proto.CompactTextString(m) }
func (*AtlasAddCard) ProtoMessage()    {}

func (m *AtlasAddCard) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasAddCard) GetCardDef() *PegasusShared.CardDef {
	if m != nil {
		return m.CardDef
	}
	return nil
}

func (m *AtlasAddCard) GetIsSeen() bool {
	if m != nil && m.IsSeen != nil {
		return *m.IsSeen
	}
	return false
}

type AtlasAddCardBack struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	CardBack         *int32  `protobuf:"varint,2,opt,name=card_back" json:"card_back,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasAddCardBack) Reset()         { *m = AtlasAddCardBack{} }
func (m *AtlasAddCardBack) String() string { return proto.CompactTextString(m) }
func (*AtlasAddCardBack) ProtoMessage()    {}

func (m *AtlasAddCardBack) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasAddCardBack) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

type AtlasAddDraft struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasAddDraft) Reset()         { *m = AtlasAddDraft{} }
func (m *AtlasAddDraft) String() string { return proto.CompactTextString(m) }
func (*AtlasAddDraft) ProtoMessage()    {}

func (m *AtlasAddDraft) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasBoosterHistory struct {
	Action           *int32              `protobuf:"varint,1,opt,name=action" json:"action,omitempty"`
	When             *PegasusShared.Date `protobuf:"bytes,2,opt,name=when" json:"when,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasBoosterHistory) Reset()         { *m = AtlasBoosterHistory{} }
func (m *AtlasBoosterHistory) String() string { return proto.CompactTextString(m) }
func (*AtlasBoosterHistory) ProtoMessage()    {}

func (m *AtlasBoosterHistory) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *AtlasBoosterHistory) GetWhen() *PegasusShared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

type AtlasBooster struct {
	BoosterId        *uint64                `protobuf:"varint,1,opt,name=booster_id" json:"booster_id,omitempty"`
	IsOpen           *bool                  `protobuf:"varint,2,opt,name=is_open" json:"is_open,omitempty"`
	Type             *int32                 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	License          *uint64                `protobuf:"varint,4,opt,name=license" json:"license,omitempty"`
	History          []*AtlasBoosterHistory `protobuf:"bytes,5,rep,name=history" json:"history,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *AtlasBooster) Reset()         { *m = AtlasBooster{} }
func (m *AtlasBooster) String() string { return proto.CompactTextString(m) }
func (*AtlasBooster) ProtoMessage()    {}

func (m *AtlasBooster) GetBoosterId() uint64 {
	if m != nil && m.BoosterId != nil {
		return *m.BoosterId
	}
	return 0
}

func (m *AtlasBooster) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *AtlasBooster) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AtlasBooster) GetLicense() uint64 {
	if m != nil && m.License != nil {
		return *m.License
	}
	return 0
}

func (m *AtlasBooster) GetHistory() []*AtlasBoosterHistory {
	if m != nil {
		return m.History
	}
	return nil
}

type AtlasBoosters struct {
	Info             []*AtlasBooster `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *AtlasBoosters) Reset()         { *m = AtlasBoosters{} }
func (m *AtlasBoosters) String() string { return proto.CompactTextString(m) }
func (*AtlasBoosters) ProtoMessage()    {}

func (m *AtlasBoosters) GetInfo() []*AtlasBooster {
	if m != nil {
		return m.Info
	}
	return nil
}

type AtlasCardBackHistory struct {
	CardBack         *int32              `protobuf:"varint,1,opt,name=card_back" json:"card_back,omitempty"`
	Action           *int32              `protobuf:"varint,2,opt,name=action" json:"action,omitempty"`
	When             *PegasusShared.Date `protobuf:"bytes,3,opt,name=when" json:"when,omitempty"`
	Data1            *int64              `protobuf:"varint,4,opt,name=data1" json:"data1,omitempty"`
	Data2            *int64              `protobuf:"varint,5,opt,name=data2" json:"data2,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasCardBackHistory) Reset()         { *m = AtlasCardBackHistory{} }
func (m *AtlasCardBackHistory) String() string { return proto.CompactTextString(m) }
func (*AtlasCardBackHistory) ProtoMessage()    {}

func (m *AtlasCardBackHistory) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *AtlasCardBackHistory) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *AtlasCardBackHistory) GetWhen() *PegasusShared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *AtlasCardBackHistory) GetData1() int64 {
	if m != nil && m.Data1 != nil {
		return *m.Data1
	}
	return 0
}

func (m *AtlasCardBackHistory) GetData2() int64 {
	if m != nil && m.Data2 != nil {
		return *m.Data2
	}
	return 0
}

type AtlasCardBacks struct {
	CardBacks        []int32                 `protobuf:"varint,1,rep,name=card_backs" json:"card_backs,omitempty"`
	History          []*AtlasCardBackHistory `protobuf:"bytes,2,rep,name=history" json:"history,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *AtlasCardBacks) Reset()         { *m = AtlasCardBacks{} }
func (m *AtlasCardBacks) String() string { return proto.CompactTextString(m) }
func (*AtlasCardBacks) ProtoMessage()    {}

func (m *AtlasCardBacks) GetCardBacks() []int32 {
	if m != nil {
		return m.CardBacks
	}
	return nil
}

func (m *AtlasCardBacks) GetHistory() []*AtlasCardBackHistory {
	if m != nil {
		return m.History
	}
	return nil
}

type AtlasCardHistory struct {
	Action           *uint32             `protobuf:"varint,1,opt,name=action" json:"action,omitempty"`
	ActionDate       *PegasusShared.Date `protobuf:"bytes,2,opt,name=action_date" json:"action_date,omitempty"`
	Data             *uint64             `protobuf:"varint,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasCardHistory) Reset()         { *m = AtlasCardHistory{} }
func (m *AtlasCardHistory) String() string { return proto.CompactTextString(m) }
func (*AtlasCardHistory) ProtoMessage()    {}

func (m *AtlasCardHistory) GetAction() uint32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *AtlasCardHistory) GetActionDate() *PegasusShared.Date {
	if m != nil {
		return m.ActionDate
	}
	return nil
}

func (m *AtlasCardHistory) GetData() uint64 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

type AtlasCardDetail struct {
	CardId           *uint64             `protobuf:"varint,1,opt,name=card_id" json:"card_id,omitempty"`
	Deleted          *uint32             `protobuf:"varint,2,opt,name=deleted" json:"deleted,omitempty"`
	IsSeen           *bool               `protobuf:"varint,3,opt,name=is_seen" json:"is_seen,omitempty"`
	InsertDate       *PegasusShared.Date `protobuf:"bytes,4,opt,name=insert_date" json:"insert_date,omitempty"`
	History          []*AtlasCardHistory `protobuf:"bytes,5,rep,name=history" json:"history,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasCardDetail) Reset()         { *m = AtlasCardDetail{} }
func (m *AtlasCardDetail) String() string { return proto.CompactTextString(m) }
func (*AtlasCardDetail) ProtoMessage()    {}

func (m *AtlasCardDetail) GetCardId() uint64 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

func (m *AtlasCardDetail) GetDeleted() uint32 {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return 0
}

func (m *AtlasCardDetail) GetIsSeen() bool {
	if m != nil && m.IsSeen != nil {
		return *m.IsSeen
	}
	return false
}

func (m *AtlasCardDetail) GetInsertDate() *PegasusShared.Date {
	if m != nil {
		return m.InsertDate
	}
	return nil
}

func (m *AtlasCardDetail) GetHistory() []*AtlasCardHistory {
	if m != nil {
		return m.History
	}
	return nil
}

type AtlasCardDetails struct {
	Details          []*AtlasCardDetail `protobuf:"bytes,1,rep,name=details" json:"details,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *AtlasCardDetails) Reset()         { *m = AtlasCardDetails{} }
func (m *AtlasCardDetails) String() string { return proto.CompactTextString(m) }
func (*AtlasCardDetails) ProtoMessage()    {}

func (m *AtlasCardDetails) GetDetails() []*AtlasCardDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

type AtlasChangeArcaneDust struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Delta            *int64  `protobuf:"varint,2,opt,name=delta" json:"delta,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasChangeArcaneDust) Reset()         { *m = AtlasChangeArcaneDust{} }
func (m *AtlasChangeArcaneDust) String() string { return proto.CompactTextString(m) }
func (*AtlasChangeArcaneDust) ProtoMessage()    {}

func (m *AtlasChangeArcaneDust) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasChangeArcaneDust) GetDelta() int64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

type AtlasChangeBonusGold struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Delta            *int64  `protobuf:"varint,2,opt,name=delta" json:"delta,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasChangeBonusGold) Reset()         { *m = AtlasChangeBonusGold{} }
func (m *AtlasChangeBonusGold) String() string { return proto.CompactTextString(m) }
func (*AtlasChangeBonusGold) ProtoMessage()    {}

func (m *AtlasChangeBonusGold) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasChangeBonusGold) GetDelta() int64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

type AtlasChangeGold struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Delta            *int64  `protobuf:"varint,2,opt,name=delta" json:"delta,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasChangeGold) Reset()         { *m = AtlasChangeGold{} }
func (m *AtlasChangeGold) String() string { return proto.CompactTextString(m) }
func (*AtlasChangeGold) ProtoMessage()    {}

func (m *AtlasChangeGold) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasChangeGold) GetDelta() int64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return 0
}

type AtlasCollection struct {
	Stacks           []*PegasusShared.CardStack `protobuf:"bytes,1,rep,name=stacks" json:"stacks,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *AtlasCollection) Reset()         { *m = AtlasCollection{} }
func (m *AtlasCollection) String() string { return proto.CompactTextString(m) }
func (*AtlasCollection) ProtoMessage()    {}

func (m *AtlasCollection) GetStacks() []*PegasusShared.CardStack {
	if m != nil {
		return m.Stacks
	}
	return nil
}

type AtlasCurrencyHistory struct {
	Currency         *int32              `protobuf:"varint,1,opt,name=currency" json:"currency,omitempty"`
	Amount           *int64              `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Action           *int32              `protobuf:"varint,3,opt,name=action" json:"action,omitempty"`
	When             *PegasusShared.Date `protobuf:"bytes,4,opt,name=when" json:"when,omitempty"`
	Data1            *int64              `protobuf:"varint,5,opt,name=data1" json:"data1,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasCurrencyHistory) Reset()         { *m = AtlasCurrencyHistory{} }
func (m *AtlasCurrencyHistory) String() string { return proto.CompactTextString(m) }
func (*AtlasCurrencyHistory) ProtoMessage()    {}

func (m *AtlasCurrencyHistory) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *AtlasCurrencyHistory) GetAmount() int64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *AtlasCurrencyHistory) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *AtlasCurrencyHistory) GetWhen() *PegasusShared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *AtlasCurrencyHistory) GetData1() int64 {
	if m != nil && m.Data1 != nil {
		return *m.Data1
	}
	return 0
}

type AtlasCurrencyDetails struct {
	History          []*AtlasCurrencyHistory `protobuf:"bytes,1,rep,name=history" json:"history,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *AtlasCurrencyDetails) Reset()         { *m = AtlasCurrencyDetails{} }
func (m *AtlasCurrencyDetails) String() string { return proto.CompactTextString(m) }
func (*AtlasCurrencyDetails) ProtoMessage()    {}

func (m *AtlasCurrencyDetails) GetHistory() []*AtlasCurrencyHistory {
	if m != nil {
		return m.History
	}
	return nil
}

type AtlasCurrentDraft struct {
	DeckId           *uint64 `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32  `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	Wins             *int32  `protobuf:"varint,3,opt,name=wins" json:"wins,omitempty"`
	Losses           *int32  `protobuf:"varint,4,opt,name=losses" json:"losses,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasCurrentDraft) Reset()         { *m = AtlasCurrentDraft{} }
func (m *AtlasCurrentDraft) String() string { return proto.CompactTextString(m) }
func (*AtlasCurrentDraft) ProtoMessage()    {}

func (m *AtlasCurrentDraft) GetDeckId() uint64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *AtlasCurrentDraft) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *AtlasCurrentDraft) GetWins() int32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *AtlasCurrentDraft) GetLosses() int32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

type AtlasDeckCard struct {
	Def              *PegasusShared.CardDef `protobuf:"bytes,1,opt,name=def" json:"def,omitempty"`
	Qty              *int32                 `protobuf:"varint,2,opt,name=qty" json:"qty,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *AtlasDeckCard) Reset()         { *m = AtlasDeckCard{} }
func (m *AtlasDeckCard) String() string { return proto.CompactTextString(m) }
func (*AtlasDeckCard) ProtoMessage()    {}

func (m *AtlasDeckCard) GetDef() *PegasusShared.CardDef {
	if m != nil {
		return m.Def
	}
	return nil
}

func (m *AtlasDeckCard) GetQty() int32 {
	if m != nil && m.Qty != nil {
		return *m.Qty
	}
	return 0
}

type AtlasDeck struct {
	Header           *PegasusShared.DeckInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Cards            []*AtlasDeckCard        `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *AtlasDeck) Reset()         { *m = AtlasDeck{} }
func (m *AtlasDeck) String() string { return proto.CompactTextString(m) }
func (*AtlasDeck) ProtoMessage()    {}

func (m *AtlasDeck) GetHeader() *PegasusShared.DeckInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AtlasDeck) GetCards() []*AtlasDeckCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

type AtlasDecks struct {
	Decks            []*AtlasDeck `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *AtlasDecks) Reset()         { *m = AtlasDecks{} }
func (m *AtlasDecks) String() string { return proto.CompactTextString(m) }
func (*AtlasDecks) ProtoMessage()    {}

func (m *AtlasDecks) GetDecks() []*AtlasDeck {
	if m != nil {
		return m.Decks
	}
	return nil
}

type AtlasDraftHistory struct {
	DeckId           *uint64             `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Action           *int32              `protobuf:"varint,2,opt,name=action" json:"action,omitempty"`
	When             *PegasusShared.Date `protobuf:"bytes,3,opt,name=when" json:"when,omitempty"`
	Data1            *int64              `protobuf:"varint,4,opt,name=data1" json:"data1,omitempty"`
	Data2            *int64              `protobuf:"varint,5,opt,name=data2" json:"data2,omitempty"`
	Data3            *int64              `protobuf:"varint,6,opt,name=data3" json:"data3,omitempty"`
	Data4            *int64              `protobuf:"varint,7,opt,name=data4" json:"data4,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasDraftHistory) Reset()         { *m = AtlasDraftHistory{} }
func (m *AtlasDraftHistory) String() string { return proto.CompactTextString(m) }
func (*AtlasDraftHistory) ProtoMessage()    {}

func (m *AtlasDraftHistory) GetDeckId() uint64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *AtlasDraftHistory) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *AtlasDraftHistory) GetWhen() *PegasusShared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *AtlasDraftHistory) GetData1() int64 {
	if m != nil && m.Data1 != nil {
		return *m.Data1
	}
	return 0
}

func (m *AtlasDraftHistory) GetData2() int64 {
	if m != nil && m.Data2 != nil {
		return *m.Data2
	}
	return 0
}

func (m *AtlasDraftHistory) GetData3() int64 {
	if m != nil && m.Data3 != nil {
		return *m.Data3
	}
	return 0
}

func (m *AtlasDraftHistory) GetData4() int64 {
	if m != nil && m.Data4 != nil {
		return *m.Data4
	}
	return 0
}

type AtlasDraftTicketHistory struct {
	Action           *int32              `protobuf:"varint,1,opt,name=action" json:"action,omitempty"`
	When             *PegasusShared.Date `protobuf:"bytes,2,opt,name=when" json:"when,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasDraftTicketHistory) Reset()         { *m = AtlasDraftTicketHistory{} }
func (m *AtlasDraftTicketHistory) String() string { return proto.CompactTextString(m) }
func (*AtlasDraftTicketHistory) ProtoMessage()    {}

func (m *AtlasDraftTicketHistory) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *AtlasDraftTicketHistory) GetWhen() *PegasusShared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

type AtlasDraftTicket struct {
	TicketId         *uint64                    `protobuf:"varint,1,opt,name=ticket_id" json:"ticket_id,omitempty"`
	WasUsed          *bool                      `protobuf:"varint,2,opt,name=was_used" json:"was_used,omitempty"`
	License          *string                    `protobuf:"bytes,3,opt,name=license" json:"license,omitempty"`
	History          []*AtlasDraftTicketHistory `protobuf:"bytes,4,rep,name=history" json:"history,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *AtlasDraftTicket) Reset()         { *m = AtlasDraftTicket{} }
func (m *AtlasDraftTicket) String() string { return proto.CompactTextString(m) }
func (*AtlasDraftTicket) ProtoMessage()    {}

func (m *AtlasDraftTicket) GetTicketId() uint64 {
	if m != nil && m.TicketId != nil {
		return *m.TicketId
	}
	return 0
}

func (m *AtlasDraftTicket) GetWasUsed() bool {
	if m != nil && m.WasUsed != nil {
		return *m.WasUsed
	}
	return false
}

func (m *AtlasDraftTicket) GetLicense() string {
	if m != nil && m.License != nil {
		return *m.License
	}
	return ""
}

func (m *AtlasDraftTicket) GetHistory() []*AtlasDraftTicketHistory {
	if m != nil {
		return m.History
	}
	return nil
}

type AtlasDrafts struct {
	Tickets          []*AtlasDraftTicket  `protobuf:"bytes,1,rep,name=tickets" json:"tickets,omitempty"`
	CurrentDraft     *AtlasCurrentDraft   `protobuf:"bytes,2,opt,name=current_draft" json:"current_draft,omitempty"`
	History          []*AtlasDraftHistory `protobuf:"bytes,3,rep,name=history" json:"history,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *AtlasDrafts) Reset()         { *m = AtlasDrafts{} }
func (m *AtlasDrafts) String() string { return proto.CompactTextString(m) }
func (*AtlasDrafts) ProtoMessage()    {}

func (m *AtlasDrafts) GetTickets() []*AtlasDraftTicket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

func (m *AtlasDrafts) GetCurrentDraft() *AtlasCurrentDraft {
	if m != nil {
		return m.CurrentDraft
	}
	return nil
}

func (m *AtlasDrafts) GetHistory() []*AtlasDraftHistory {
	if m != nil {
		return m.History
	}
	return nil
}

type AtlasError struct {
	Type             *AtlasError_ErrorType `protobuf:"varint,1,opt,name=type,enum=PegasusUtil.AtlasError_ErrorType,def=1" json:"type,omitempty"`
	Error            *int32                `protobuf:"varint,2,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *AtlasError) Reset()         { *m = AtlasError{} }
func (m *AtlasError) String() string { return proto.CompactTextString(m) }
func (*AtlasError) ProtoMessage()    {}

const Default_AtlasError_Type AtlasError_ErrorType = AtlasError_BNET_ERROR

func (m *AtlasError) GetType() AtlasError_ErrorType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_AtlasError_Type
}

func (m *AtlasError) GetError() int32 {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return 0
}

type AtlasGetAchieveInfo struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	AchieveId        *uint64 `protobuf:"varint,2,opt,name=achieve_id" json:"achieve_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasGetAchieveInfo) Reset()         { *m = AtlasGetAchieveInfo{} }
func (m *AtlasGetAchieveInfo) String() string { return proto.CompactTextString(m) }
func (*AtlasGetAchieveInfo) ProtoMessage()    {}

func (m *AtlasGetAchieveInfo) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasGetAchieveInfo) GetAchieveId() uint64 {
	if m != nil && m.AchieveId != nil {
		return *m.AchieveId
	}
	return 0
}

type AtlasGetAchieves struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasGetAchieves) Reset()         { *m = AtlasGetAchieves{} }
func (m *AtlasGetAchieves) String() string { return proto.CompactTextString(m) }
func (*AtlasGetAchieves) ProtoMessage()    {}

func (m *AtlasGetAchieves) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasGetAdventureProgress struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasGetAdventureProgress) Reset()         { *m = AtlasGetAdventureProgress{} }
func (m *AtlasGetAdventureProgress) String() string { return proto.CompactTextString(m) }
func (*AtlasGetAdventureProgress) ProtoMessage()    {}

func (m *AtlasGetAdventureProgress) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasGetBoosters struct {
	AccountId        *uint64             `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	StartDate        *PegasusShared.Date `protobuf:"bytes,2,opt,name=start_date" json:"start_date,omitempty"`
	EndDate          *PegasusShared.Date `protobuf:"bytes,3,opt,name=end_date" json:"end_date,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasGetBoosters) Reset()         { *m = AtlasGetBoosters{} }
func (m *AtlasGetBoosters) String() string { return proto.CompactTextString(m) }
func (*AtlasGetBoosters) ProtoMessage()    {}

func (m *AtlasGetBoosters) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasGetBoosters) GetStartDate() *PegasusShared.Date {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *AtlasGetBoosters) GetEndDate() *PegasusShared.Date {
	if m != nil {
		return m.EndDate
	}
	return nil
}

type AtlasGetCardBacks struct {
	AccountId        *uint64             `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	StartDate        *PegasusShared.Date `protobuf:"bytes,2,opt,name=start_date" json:"start_date,omitempty"`
	EndDate          *PegasusShared.Date `protobuf:"bytes,3,opt,name=end_date" json:"end_date,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasGetCardBacks) Reset()         { *m = AtlasGetCardBacks{} }
func (m *AtlasGetCardBacks) String() string { return proto.CompactTextString(m) }
func (*AtlasGetCardBacks) ProtoMessage()    {}

func (m *AtlasGetCardBacks) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasGetCardBacks) GetStartDate() *PegasusShared.Date {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *AtlasGetCardBacks) GetEndDate() *PegasusShared.Date {
	if m != nil {
		return m.EndDate
	}
	return nil
}

type AtlasGetCardDetails struct {
	AccountId        *uint64                `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	CardDef          *PegasusShared.CardDef `protobuf:"bytes,2,opt,name=card_def" json:"card_def,omitempty"`
	StartDate        *PegasusShared.Date    `protobuf:"bytes,3,opt,name=start_date" json:"start_date,omitempty"`
	EndDate          *PegasusShared.Date    `protobuf:"bytes,4,opt,name=end_date" json:"end_date,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *AtlasGetCardDetails) Reset()         { *m = AtlasGetCardDetails{} }
func (m *AtlasGetCardDetails) String() string { return proto.CompactTextString(m) }
func (*AtlasGetCardDetails) ProtoMessage()    {}

func (m *AtlasGetCardDetails) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasGetCardDetails) GetCardDef() *PegasusShared.CardDef {
	if m != nil {
		return m.CardDef
	}
	return nil
}

func (m *AtlasGetCardDetails) GetStartDate() *PegasusShared.Date {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *AtlasGetCardDetails) GetEndDate() *PegasusShared.Date {
	if m != nil {
		return m.EndDate
	}
	return nil
}

type AtlasGetCollection struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasGetCollection) Reset()         { *m = AtlasGetCollection{} }
func (m *AtlasGetCollection) String() string { return proto.CompactTextString(m) }
func (*AtlasGetCollection) ProtoMessage()    {}

func (m *AtlasGetCollection) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasGetCurrencyDetails struct {
	AccountId        *uint64             `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	StartDate        *PegasusShared.Date `protobuf:"bytes,2,opt,name=start_date" json:"start_date,omitempty"`
	EndDate          *PegasusShared.Date `protobuf:"bytes,3,opt,name=end_date" json:"end_date,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasGetCurrencyDetails) Reset()         { *m = AtlasGetCurrencyDetails{} }
func (m *AtlasGetCurrencyDetails) String() string { return proto.CompactTextString(m) }
func (*AtlasGetCurrencyDetails) ProtoMessage()    {}

func (m *AtlasGetCurrencyDetails) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasGetCurrencyDetails) GetStartDate() *PegasusShared.Date {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *AtlasGetCurrencyDetails) GetEndDate() *PegasusShared.Date {
	if m != nil {
		return m.EndDate
	}
	return nil
}

type AtlasGetDecks struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasGetDecks) Reset()         { *m = AtlasGetDecks{} }
func (m *AtlasGetDecks) String() string { return proto.CompactTextString(m) }
func (*AtlasGetDecks) ProtoMessage()    {}

func (m *AtlasGetDecks) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasGetDrafts struct {
	AccountId        *uint64             `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	StartDate        *PegasusShared.Date `protobuf:"bytes,2,opt,name=start_date" json:"start_date,omitempty"`
	EndDate          *PegasusShared.Date `protobuf:"bytes,3,opt,name=end_date" json:"end_date,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AtlasGetDrafts) Reset()         { *m = AtlasGetDrafts{} }
func (m *AtlasGetDrafts) String() string { return proto.CompactTextString(m) }
func (*AtlasGetDrafts) ProtoMessage()    {}

func (m *AtlasGetDrafts) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasGetDrafts) GetStartDate() *PegasusShared.Date {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *AtlasGetDrafts) GetEndDate() *PegasusShared.Date {
	if m != nil {
		return m.EndDate
	}
	return nil
}

type AtlasGetOrders struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasGetOrders) Reset()         { *m = AtlasGetOrders{} }
func (m *AtlasGetOrders) String() string { return proto.CompactTextString(m) }
func (*AtlasGetOrders) ProtoMessage()    {}

func (m *AtlasGetOrders) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasGetPlayerInfo struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasGetPlayerInfo) Reset()         { *m = AtlasGetPlayerInfo{} }
func (m *AtlasGetPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*AtlasGetPlayerInfo) ProtoMessage()    {}

func (m *AtlasGetPlayerInfo) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasOrder struct {
	Id               *int64                           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *int32                           `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Status           *int32                           `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	Data             *int64                           `protobuf:"varint,4,opt,name=data" json:"data,omitempty"`
	FirstData        *int64                           `protobuf:"varint,5,opt,name=first_data" json:"first_data,omitempty"`
	Order            *string                          `protobuf:"bytes,6,opt,name=order" json:"order,omitempty"`
	Wallet           *int64                           `protobuf:"varint,7,opt,name=wallet" json:"wallet,omitempty"`
	ErrStr           *string                          `protobuf:"bytes,8,opt,name=err_str" json:"err_str,omitempty"`
	IpAddress        *string                          `protobuf:"bytes,9,opt,name=ip_address" json:"ip_address,omitempty"`
	ChallengeId      *string                          `protobuf:"bytes,10,opt,name=challenge_id" json:"challenge_id,omitempty"`
	Provider         *PegasusShared.BattlePayProvider `protobuf:"varint,11,opt,name=provider,enum=PegasusShared.BattlePayProvider,def=1" json:"provider,omitempty"`
	ThirdPartyId     *string                          `protobuf:"bytes,12,opt,name=third_party_id" json:"third_party_id,omitempty"`
	ProductId        *string                          `protobuf:"bytes,13,opt,name=product_id" json:"product_id,omitempty"`
	InsertDate       *PegasusShared.Date              `protobuf:"bytes,14,opt,name=insert_date" json:"insert_date,omitempty"`
	LastUpdate       *PegasusShared.Date              `protobuf:"bytes,15,opt,name=last_update" json:"last_update,omitempty"`
	ThirdPartyUserId *string                          `protobuf:"bytes,16,opt,name=third_party_user_id" json:"third_party_user_id,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *AtlasOrder) Reset()         { *m = AtlasOrder{} }
func (m *AtlasOrder) String() string { return proto.CompactTextString(m) }
func (*AtlasOrder) ProtoMessage()    {}

const Default_AtlasOrder_Provider PegasusShared.BattlePayProvider = PegasusShared.BattlePayProvider_BP_PROVIDER_BLIZZARD

func (m *AtlasOrder) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AtlasOrder) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AtlasOrder) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *AtlasOrder) GetData() int64 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *AtlasOrder) GetFirstData() int64 {
	if m != nil && m.FirstData != nil {
		return *m.FirstData
	}
	return 0
}

func (m *AtlasOrder) GetOrder() string {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return ""
}

func (m *AtlasOrder) GetWallet() int64 {
	if m != nil && m.Wallet != nil {
		return *m.Wallet
	}
	return 0
}

func (m *AtlasOrder) GetErrStr() string {
	if m != nil && m.ErrStr != nil {
		return *m.ErrStr
	}
	return ""
}

func (m *AtlasOrder) GetIpAddress() string {
	if m != nil && m.IpAddress != nil {
		return *m.IpAddress
	}
	return ""
}

func (m *AtlasOrder) GetChallengeId() string {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return ""
}

func (m *AtlasOrder) GetProvider() PegasusShared.BattlePayProvider {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return Default_AtlasOrder_Provider
}

func (m *AtlasOrder) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *AtlasOrder) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *AtlasOrder) GetInsertDate() *PegasusShared.Date {
	if m != nil {
		return m.InsertDate
	}
	return nil
}

func (m *AtlasOrder) GetLastUpdate() *PegasusShared.Date {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *AtlasOrder) GetThirdPartyUserId() string {
	if m != nil && m.ThirdPartyUserId != nil {
		return *m.ThirdPartyUserId
	}
	return ""
}

type AtlasOrders struct {
	Orders           []*AtlasOrder `protobuf:"bytes,1,rep,name=orders" json:"orders,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *AtlasOrders) Reset()         { *m = AtlasOrders{} }
func (m *AtlasOrders) String() string { return proto.CompactTextString(m) }
func (*AtlasOrders) ProtoMessage()    {}

func (m *AtlasOrders) GetOrders() []*AtlasOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

type AtlasReleaseMobilePurchaseLock struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasReleaseMobilePurchaseLock) Reset()         { *m = AtlasReleaseMobilePurchaseLock{} }
func (m *AtlasReleaseMobilePurchaseLock) String() string { return proto.CompactTextString(m) }
func (*AtlasReleaseMobilePurchaseLock) ProtoMessage()    {}

func (m *AtlasReleaseMobilePurchaseLock) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type AtlasRemoveBooster struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	BoosterId        *uint64 `protobuf:"varint,2,opt,name=booster_id" json:"booster_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasRemoveBooster) Reset()         { *m = AtlasRemoveBooster{} }
func (m *AtlasRemoveBooster) String() string { return proto.CompactTextString(m) }
func (*AtlasRemoveBooster) ProtoMessage()    {}

func (m *AtlasRemoveBooster) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasRemoveBooster) GetBoosterId() uint64 {
	if m != nil && m.BoosterId != nil {
		return *m.BoosterId
	}
	return 0
}

type AtlasRemoveCard struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	CardId           *uint64 `protobuf:"varint,2,opt,name=card_id" json:"card_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasRemoveCard) Reset()         { *m = AtlasRemoveCard{} }
func (m *AtlasRemoveCard) String() string { return proto.CompactTextString(m) }
func (*AtlasRemoveCard) ProtoMessage()    {}

func (m *AtlasRemoveCard) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasRemoveCard) GetCardId() uint64 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

type AtlasRemoveCardBack struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	CardBack         *int32  `protobuf:"varint,2,opt,name=card_back" json:"card_back,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasRemoveCardBack) Reset()         { *m = AtlasRemoveCardBack{} }
func (m *AtlasRemoveCardBack) String() string { return proto.CompactTextString(m) }
func (*AtlasRemoveCardBack) ProtoMessage()    {}

func (m *AtlasRemoveCardBack) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasRemoveCardBack) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

type AtlasRemoveDraft struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	TicketId         *uint64 `protobuf:"varint,2,opt,name=ticket_id" json:"ticket_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasRemoveDraft) Reset()         { *m = AtlasRemoveDraft{} }
func (m *AtlasRemoveDraft) String() string { return proto.CompactTextString(m) }
func (*AtlasRemoveDraft) ProtoMessage()    {}

func (m *AtlasRemoveDraft) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasRemoveDraft) GetTicketId() uint64 {
	if m != nil && m.TicketId != nil {
		return *m.TicketId
	}
	return 0
}

type AtlasRestoreCard struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	CardId           *uint64 `protobuf:"varint,2,opt,name=card_id" json:"card_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasRestoreCard) Reset()         { *m = AtlasRestoreCard{} }
func (m *AtlasRestoreCard) String() string { return proto.CompactTextString(m) }
func (*AtlasRestoreCard) ProtoMessage()    {}

func (m *AtlasRestoreCard) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasRestoreCard) GetCardId() uint64 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

type AtlasSetAdventureProgress struct {
	AccountId        *uint64 `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	WingId           *int32  `protobuf:"varint,2,opt,name=wing_id" json:"wing_id,omitempty"`
	Progress         *int32  `protobuf:"varint,3,opt,name=progress" json:"progress,omitempty"`
	AddWingFlags     *uint64 `protobuf:"varint,4,opt,name=add_wing_flags" json:"add_wing_flags,omitempty"`
	RemoveWingFlags  *uint64 `protobuf:"varint,5,opt,name=remove_wing_flags" json:"remove_wing_flags,omitempty"`
	ProgressAck      *int32  `protobuf:"varint,6,opt,name=progress_ack" json:"progress_ack,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AtlasSetAdventureProgress) Reset()         { *m = AtlasSetAdventureProgress{} }
func (m *AtlasSetAdventureProgress) String() string { return proto.CompactTextString(m) }
func (*AtlasSetAdventureProgress) ProtoMessage()    {}

func (m *AtlasSetAdventureProgress) GetAccountId() uint64 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *AtlasSetAdventureProgress) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

func (m *AtlasSetAdventureProgress) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *AtlasSetAdventureProgress) GetAddWingFlags() uint64 {
	if m != nil && m.AddWingFlags != nil {
		return *m.AddWingFlags
	}
	return 0
}

func (m *AtlasSetAdventureProgress) GetRemoveWingFlags() uint64 {
	if m != nil && m.RemoveWingFlags != nil {
		return *m.RemoveWingFlags
	}
	return 0
}

func (m *AtlasSetAdventureProgress) GetProgressAck() int32 {
	if m != nil && m.ProgressAck != nil {
		return *m.ProgressAck
	}
	return 0
}

type AtlasSuccess struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AtlasSuccess) Reset()         { *m = AtlasSuccess{} }
func (m *AtlasSuccess) String() string { return proto.CompactTextString(m) }
func (*AtlasSuccess) ProtoMessage()    {}

type AtlasWingProgress struct {
	Progress         *PegasusShared.AdventureProgress `protobuf:"bytes,1,opt,name=progress" json:"progress,omitempty"`
	LastUpdate       *PegasusShared.Date              `protobuf:"bytes,2,opt,name=last_update" json:"last_update,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *AtlasWingProgress) Reset()         { *m = AtlasWingProgress{} }
func (m *AtlasWingProgress) String() string { return proto.CompactTextString(m) }
func (*AtlasWingProgress) ProtoMessage()    {}

func (m *AtlasWingProgress) GetProgress() *PegasusShared.AdventureProgress {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *AtlasWingProgress) GetLastUpdate() *PegasusShared.Date {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

type AtlasAdventureProgress struct {
	List             []*AtlasWingProgress `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *AtlasAdventureProgress) Reset()         { *m = AtlasAdventureProgress{} }
func (m *AtlasAdventureProgress) String() string { return proto.CompactTextString(m) }
func (*AtlasAdventureProgress) ProtoMessage()    {}

func (m *AtlasAdventureProgress) GetList() []*AtlasWingProgress {
	if m != nil {
		return m.List
	}
	return nil
}

type BoosterCard struct {
	CardDef          *PegasusShared.CardDef `protobuf:"bytes,1,opt,name=card_def" json:"card_def,omitempty"`
	InsertDate       *PegasusShared.Date    `protobuf:"bytes,2,opt,name=insert_date" json:"insert_date,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *BoosterCard) Reset()         { *m = BoosterCard{} }
func (m *BoosterCard) String() string { return proto.CompactTextString(m) }
func (*BoosterCard) ProtoMessage()    {}

func (m *BoosterCard) GetCardDef() *PegasusShared.CardDef {
	if m != nil {
		return m.CardDef
	}
	return nil
}

func (m *BoosterCard) GetInsertDate() *PegasusShared.Date {
	if m != nil {
		return m.InsertDate
	}
	return nil
}

type BoosterContent struct {
	List             []*BoosterCard `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BoosterContent) Reset()         { *m = BoosterContent{} }
func (m *BoosterContent) String() string { return proto.CompactTextString(m) }
func (*BoosterContent) ProtoMessage()    {}

func (m *BoosterContent) GetList() []*BoosterCard {
	if m != nil {
		return m.List
	}
	return nil
}

type BoosterInfo struct {
	Type             *int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Count            *int32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BoosterInfo) Reset()         { *m = BoosterInfo{} }
func (m *BoosterInfo) String() string { return proto.CompactTextString(m) }
func (*BoosterInfo) ProtoMessage()    {}

func (m *BoosterInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *BoosterInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type AtlasPlayer struct {
	PlayerId         *int64         `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	GamesStarted     *int32         `protobuf:"varint,2,opt,name=games_started" json:"games_started,omitempty"`
	GamesCompleted   *int32         `protobuf:"varint,3,opt,name=games_completed" json:"games_completed,omitempty"`
	GamesWon         *int32         `protobuf:"varint,4,opt,name=games_won" json:"games_won,omitempty"`
	GamesLost        *int32         `protobuf:"varint,5,opt,name=games_lost" json:"games_lost,omitempty"`
	DeletedReason    *int32         `protobuf:"varint,6,opt,name=deleted_reason" json:"deleted_reason,omitempty"`
	DeckLimit        *int32         `protobuf:"varint,7,opt,name=deck_limit" json:"deck_limit,omitempty"`
	CampaignProgress *int64         `protobuf:"varint,8,opt,name=campaign_progress" json:"campaign_progress,omitempty"`
	RandomDeckId     *int64         `protobuf:"varint,9,opt,name=random_deck_id" json:"random_deck_id,omitempty"`
	ArcaneDust       *int64         `protobuf:"varint,10,opt,name=arcane_dust" json:"arcane_dust,omitempty"`
	LastGameId       *int64         `protobuf:"varint,11,opt,name=last_game_id" json:"last_game_id,omitempty"`
	CraftAssetId     *int32         `protobuf:"varint,12,opt,name=craft_asset_id" json:"craft_asset_id,omitempty"`
	CraftPremium     *int32         `protobuf:"varint,13,opt,name=craft_premium" json:"craft_premium,omitempty"`
	CraftCount       *int32         `protobuf:"varint,14,opt,name=craft_count" json:"craft_count,omitempty"`
	BattlepayId      *int64         `protobuf:"varint,15,opt,name=battlepay_id" json:"battlepay_id,omitempty"`
	BoosterList      []*BoosterInfo `protobuf:"bytes,16,rep,name=booster_list" json:"booster_list,omitempty"`
	Gold             *int64         `protobuf:"varint,17,opt,name=gold" json:"gold,omitempty"`
	BonusGold        *int64         `protobuf:"varint,18,opt,name=bonus_gold" json:"bonus_gold,omitempty"`
	DefaultCardBack  *int32         `protobuf:"varint,19,opt,name=default_card_back" json:"default_card_back,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AtlasPlayer) Reset()         { *m = AtlasPlayer{} }
func (m *AtlasPlayer) String() string { return proto.CompactTextString(m) }
func (*AtlasPlayer) ProtoMessage()    {}

func (m *AtlasPlayer) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *AtlasPlayer) GetGamesStarted() int32 {
	if m != nil && m.GamesStarted != nil {
		return *m.GamesStarted
	}
	return 0
}

func (m *AtlasPlayer) GetGamesCompleted() int32 {
	if m != nil && m.GamesCompleted != nil {
		return *m.GamesCompleted
	}
	return 0
}

func (m *AtlasPlayer) GetGamesWon() int32 {
	if m != nil && m.GamesWon != nil {
		return *m.GamesWon
	}
	return 0
}

func (m *AtlasPlayer) GetGamesLost() int32 {
	if m != nil && m.GamesLost != nil {
		return *m.GamesLost
	}
	return 0
}

func (m *AtlasPlayer) GetDeletedReason() int32 {
	if m != nil && m.DeletedReason != nil {
		return *m.DeletedReason
	}
	return 0
}

func (m *AtlasPlayer) GetDeckLimit() int32 {
	if m != nil && m.DeckLimit != nil {
		return *m.DeckLimit
	}
	return 0
}

func (m *AtlasPlayer) GetCampaignProgress() int64 {
	if m != nil && m.CampaignProgress != nil {
		return *m.CampaignProgress
	}
	return 0
}

func (m *AtlasPlayer) GetRandomDeckId() int64 {
	if m != nil && m.RandomDeckId != nil {
		return *m.RandomDeckId
	}
	return 0
}

func (m *AtlasPlayer) GetArcaneDust() int64 {
	if m != nil && m.ArcaneDust != nil {
		return *m.ArcaneDust
	}
	return 0
}

func (m *AtlasPlayer) GetLastGameId() int64 {
	if m != nil && m.LastGameId != nil {
		return *m.LastGameId
	}
	return 0
}

func (m *AtlasPlayer) GetCraftAssetId() int32 {
	if m != nil && m.CraftAssetId != nil {
		return *m.CraftAssetId
	}
	return 0
}

func (m *AtlasPlayer) GetCraftPremium() int32 {
	if m != nil && m.CraftPremium != nil {
		return *m.CraftPremium
	}
	return 0
}

func (m *AtlasPlayer) GetCraftCount() int32 {
	if m != nil && m.CraftCount != nil {
		return *m.CraftCount
	}
	return 0
}

func (m *AtlasPlayer) GetBattlepayId() int64 {
	if m != nil && m.BattlepayId != nil {
		return *m.BattlepayId
	}
	return 0
}

func (m *AtlasPlayer) GetBoosterList() []*BoosterInfo {
	if m != nil {
		return m.BoosterList
	}
	return nil
}

func (m *AtlasPlayer) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *AtlasPlayer) GetBonusGold() int64 {
	if m != nil && m.BonusGold != nil {
		return *m.BonusGold
	}
	return 0
}

func (m *AtlasPlayer) GetDefaultCardBack() int32 {
	if m != nil && m.DefaultCardBack != nil {
		return *m.DefaultCardBack
	}
	return 0
}

type BoosterList struct {
	List             []*BoosterInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BoosterList) Reset()         { *m = BoosterList{} }
func (m *BoosterList) String() string { return proto.CompactTextString(m) }
func (*BoosterList) ProtoMessage()    {}

func (m *BoosterList) GetList() []*BoosterInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type BoosterTally struct {
	IsOpen           *bool  `protobuf:"varint,1,opt,name=is_open" json:"is_open,omitempty"`
	TypeId           *int32 `protobuf:"varint,2,opt,name=type_id" json:"type_id,omitempty"`
	IsBought         *bool  `protobuf:"varint,3,opt,name=is_bought" json:"is_bought,omitempty"`
	SourceId         *int32 `protobuf:"varint,4,opt,name=source_id" json:"source_id,omitempty"`
	Count            *int32 `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BoosterTally) Reset()         { *m = BoosterTally{} }
func (m *BoosterTally) String() string { return proto.CompactTextString(m) }
func (*BoosterTally) ProtoMessage()    {}

func (m *BoosterTally) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *BoosterTally) GetTypeId() int32 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *BoosterTally) GetIsBought() bool {
	if m != nil && m.IsBought != nil {
		return *m.IsBought
	}
	return false
}

func (m *BoosterTally) GetSourceId() int32 {
	if m != nil && m.SourceId != nil {
		return *m.SourceId
	}
	return 0
}

func (m *BoosterTally) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type BoosterTallyList struct {
	List             []*BoosterTally `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *BoosterTallyList) Reset()         { *m = BoosterTallyList{} }
func (m *BoosterTallyList) String() string { return proto.CompactTextString(m) }
func (*BoosterTallyList) ProtoMessage()    {}

func (m *BoosterTallyList) GetList() []*BoosterTally {
	if m != nil {
		return m.List
	}
	return nil
}

type BoughtSoldCard struct {
	Def              *PegasusShared.CardDef `protobuf:"bytes,1,opt,name=def" json:"def,omitempty"`
	Amount           *int32                 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Result           *BoughtSoldCard_Result `protobuf:"varint,3,opt,name=result,enum=PegasusUtil.BoughtSoldCard_Result,def=1" json:"result,omitempty"`
	Count            *int32                 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Nerfed           *bool                  `protobuf:"varint,5,opt,name=nerfed" json:"nerfed,omitempty"`
	UnitSellPrice    *int32                 `protobuf:"varint,6,opt,name=unit_sell_price" json:"unit_sell_price,omitempty"`
	UnitBuyPrice     *int32                 `protobuf:"varint,7,opt,name=unit_buy_price" json:"unit_buy_price,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *BoughtSoldCard) Reset()         { *m = BoughtSoldCard{} }
func (m *BoughtSoldCard) String() string { return proto.CompactTextString(m) }
func (*BoughtSoldCard) ProtoMessage()    {}

const Default_BoughtSoldCard_Result BoughtSoldCard_Result = BoughtSoldCard_FAILED

func (m *BoughtSoldCard) GetDef() *PegasusShared.CardDef {
	if m != nil {
		return m.Def
	}
	return nil
}

func (m *BoughtSoldCard) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *BoughtSoldCard) GetResult() BoughtSoldCard_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_BoughtSoldCard_Result
}

func (m *BoughtSoldCard) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *BoughtSoldCard) GetNerfed() bool {
	if m != nil && m.Nerfed != nil {
		return *m.Nerfed
	}
	return false
}

func (m *BoughtSoldCard) GetUnitSellPrice() int32 {
	if m != nil && m.UnitSellPrice != nil {
		return *m.UnitSellPrice
	}
	return 0
}

func (m *BoughtSoldCard) GetUnitBuyPrice() int32 {
	if m != nil && m.UnitBuyPrice != nil {
		return *m.UnitBuyPrice
	}
	return 0
}

type BundleItem struct {
	ProductType      *int32 `protobuf:"varint,1,opt,name=product_type" json:"product_type,omitempty"`
	Data             *int32 `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Quantity         *int32 `protobuf:"varint,3,opt,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BundleItem) Reset()         { *m = BundleItem{} }
func (m *BundleItem) String() string { return proto.CompactTextString(m) }
func (*BundleItem) ProtoMessage()    {}

func (m *BundleItem) GetProductType() int32 {
	if m != nil && m.ProductType != nil {
		return *m.ProductType
	}
	return 0
}

func (m *BundleItem) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *BundleItem) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type Bundle struct {
	Id               *string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Cost             *float64      `protobuf:"fixed64,2,opt,name=cost" json:"cost,omitempty"`
	AppleId          *string       `protobuf:"bytes,3,opt,name=apple_id" json:"apple_id,omitempty"`
	GooglePlayId     *string       `protobuf:"bytes,4,opt,name=google_play_id" json:"google_play_id,omitempty"`
	Items            []*BundleItem `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	GoldCost         *int64        `protobuf:"varint,6,opt,name=gold_cost" json:"gold_cost,omitempty"`
	AmazonId         *string       `protobuf:"bytes,7,opt,name=amazon_id" json:"amazon_id,omitempty"`
	ProductEventName *string       `protobuf:"bytes,9,opt,name=product_event_name" json:"product_event_name,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}

func (m *Bundle) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Bundle) GetCost() float64 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *Bundle) GetAppleId() string {
	if m != nil && m.AppleId != nil {
		return *m.AppleId
	}
	return ""
}

func (m *Bundle) GetGooglePlayId() string {
	if m != nil && m.GooglePlayId != nil {
		return *m.GooglePlayId
	}
	return ""
}

func (m *Bundle) GetItems() []*BundleItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Bundle) GetGoldCost() int64 {
	if m != nil && m.GoldCost != nil {
		return *m.GoldCost
	}
	return 0
}

func (m *Bundle) GetAmazonId() string {
	if m != nil && m.AmazonId != nil {
		return *m.AmazonId
	}
	return ""
}

func (m *Bundle) GetProductEventName() string {
	if m != nil && m.ProductEventName != nil {
		return *m.ProductEventName
	}
	return ""
}

type BuySellCard struct {
	Def              *PegasusShared.CardDef `protobuf:"bytes,1,opt,name=def" json:"def,omitempty"`
	Count            *int32                 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Buying           *bool                  `protobuf:"varint,3,opt,name=buying" json:"buying,omitempty"`
	UnitSellPrice    *int32                 `protobuf:"varint,4,opt,name=unit_sell_price" json:"unit_sell_price,omitempty"`
	UnitBuyPrice     *int32                 `protobuf:"varint,5,opt,name=unit_buy_price" json:"unit_buy_price,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *BuySellCard) Reset()         { *m = BuySellCard{} }
func (m *BuySellCard) String() string { return proto.CompactTextString(m) }
func (*BuySellCard) ProtoMessage()    {}

func (m *BuySellCard) GetDef() *PegasusShared.CardDef {
	if m != nil {
		return m.Def
	}
	return nil
}

func (m *BuySellCard) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *BuySellCard) GetBuying() bool {
	if m != nil && m.Buying != nil {
		return *m.Buying
	}
	return false
}

func (m *BuySellCard) GetUnitSellPrice() int32 {
	if m != nil && m.UnitSellPrice != nil {
		return *m.UnitSellPrice
	}
	return 0
}

func (m *BuySellCard) GetUnitBuyPrice() int32 {
	if m != nil && m.UnitBuyPrice != nil {
		return *m.UnitBuyPrice
	}
	return 0
}

type CancelPurchase struct {
	IsAutoCancel     *bool                                  `protobuf:"varint,1,opt,name=is_auto_cancel" json:"is_auto_cancel,omitempty"`
	ThirdPartyReason *CancelPurchase_ThirdPartyCancelReason `protobuf:"varint,2,opt,name=third_party_reason,enum=PegasusUtil.CancelPurchase_ThirdPartyCancelReason,def=1" json:"third_party_reason,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CancelPurchase) Reset()         { *m = CancelPurchase{} }
func (m *CancelPurchase) String() string { return proto.CompactTextString(m) }
func (*CancelPurchase) ProtoMessage()    {}

const Default_CancelPurchase_ThirdPartyReason CancelPurchase_ThirdPartyCancelReason = CancelPurchase_PROVIDER_REPORTED_FAILURE

func (m *CancelPurchase) GetIsAutoCancel() bool {
	if m != nil && m.IsAutoCancel != nil {
		return *m.IsAutoCancel
	}
	return false
}

func (m *CancelPurchase) GetThirdPartyReason() CancelPurchase_ThirdPartyCancelReason {
	if m != nil && m.ThirdPartyReason != nil {
		return *m.ThirdPartyReason
	}
	return Default_CancelPurchase_ThirdPartyReason
}

type CancelPurchaseResponse struct {
	Result           *CancelPurchaseResponse_CancelResult `protobuf:"varint,1,opt,name=result,enum=PegasusUtil.CancelPurchaseResponse_CancelResult,def=1" json:"result,omitempty"`
	TransactionId    *int64                               `protobuf:"varint,2,opt,name=transaction_id" json:"transaction_id,omitempty"`
	ProductId        *string                              `protobuf:"bytes,3,opt,name=product_id" json:"product_id,omitempty"`
	Currency         *int32                               `protobuf:"varint,4,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CancelPurchaseResponse) Reset()         { *m = CancelPurchaseResponse{} }
func (m *CancelPurchaseResponse) String() string { return proto.CompactTextString(m) }
func (*CancelPurchaseResponse) ProtoMessage()    {}

const Default_CancelPurchaseResponse_Result CancelPurchaseResponse_CancelResult = CancelPurchaseResponse_CR_SUCCESS

func (m *CancelPurchaseResponse) GetResult() CancelPurchaseResponse_CancelResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CancelPurchaseResponse_Result
}

func (m *CancelPurchaseResponse) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *CancelPurchaseResponse) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *CancelPurchaseResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

type CancelQuest struct {
	QuestId          *int32 `protobuf:"varint,1,opt,name=quest_id" json:"quest_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CancelQuest) Reset()         { *m = CancelQuest{} }
func (m *CancelQuest) String() string { return proto.CompactTextString(m) }
func (*CancelQuest) ProtoMessage()    {}

func (m *CancelQuest) GetQuestId() int32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type CancelQuestResponse struct {
	QuestId          *int32              `protobuf:"varint,1,opt,name=quest_id" json:"quest_id,omitempty"`
	Success          *bool               `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	NextQuestCancel  *PegasusShared.Date `protobuf:"bytes,3,opt,name=next_quest_cancel" json:"next_quest_cancel,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CancelQuestResponse) Reset()         { *m = CancelQuestResponse{} }
func (m *CancelQuestResponse) String() string { return proto.CompactTextString(m) }
func (*CancelQuestResponse) ProtoMessage()    {}

func (m *CancelQuestResponse) GetQuestId() int32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *CancelQuestResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CancelQuestResponse) GetNextQuestCancel() *PegasusShared.Date {
	if m != nil {
		return m.NextQuestCancel
	}
	return nil
}

type CardBacks struct {
	DefaultCardBack  *int32  `protobuf:"varint,1,opt,name=default_card_back" json:"default_card_back,omitempty"`
	CardBacks        []int32 `protobuf:"varint,2,rep,name=card_backs" json:"card_backs,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CardBacks) Reset()         { *m = CardBacks{} }
func (m *CardBacks) String() string { return proto.CompactTextString(m) }
func (*CardBacks) ProtoMessage()    {}

func (m *CardBacks) GetDefaultCardBack() int32 {
	if m != nil && m.DefaultCardBack != nil {
		return *m.DefaultCardBack
	}
	return 0
}

func (m *CardBacks) GetCardBacks() []int32 {
	if m != nil {
		return m.CardBacks
	}
	return nil
}

type CardUseCount struct {
	Asset            *int32 `protobuf:"varint,1,opt,name=asset" json:"asset,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardUseCount) Reset()         { *m = CardUseCount{} }
func (m *CardUseCount) String() string { return proto.CompactTextString(m) }
func (*CardUseCount) ProtoMessage()    {}

func (m *CardUseCount) GetAsset() int32 {
	if m != nil && m.Asset != nil {
		return *m.Asset
	}
	return 0
}

func (m *CardUseCount) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type CardValue struct {
	Card             *PegasusShared.CardDef `protobuf:"bytes,1,opt,name=card" json:"card,omitempty"`
	Buy              *int32                 `protobuf:"varint,2,opt,name=buy" json:"buy,omitempty"`
	Sell             *int32                 `protobuf:"varint,3,opt,name=sell" json:"sell,omitempty"`
	Nerfed           *bool                  `protobuf:"varint,4,opt,name=nerfed" json:"nerfed,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CardValue) Reset()         { *m = CardValue{} }
func (m *CardValue) String() string { return proto.CompactTextString(m) }
func (*CardValue) ProtoMessage()    {}

func (m *CardValue) GetCard() *PegasusShared.CardDef {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *CardValue) GetBuy() int32 {
	if m != nil && m.Buy != nil {
		return *m.Buy
	}
	return 0
}

func (m *CardValue) GetSell() int32 {
	if m != nil && m.Sell != nil {
		return *m.Sell
	}
	return 0
}

func (m *CardValue) GetNerfed() bool {
	if m != nil && m.Nerfed != nil {
		return *m.Nerfed
	}
	return false
}

type CardValues struct {
	Cards            []*CardValue `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
	CardNerfIndex    *int32       `protobuf:"varint,2,opt,name=card_nerf_index" json:"card_nerf_index,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CardValues) Reset()         { *m = CardValues{} }
func (m *CardValues) String() string { return proto.CompactTextString(m) }
func (*CardValues) ProtoMessage()    {}

func (m *CardValues) GetCards() []*CardValue {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *CardValues) GetCardNerfIndex() int32 {
	if m != nil && m.CardNerfIndex != nil {
		return *m.CardNerfIndex
	}
	return 0
}

type CheckAccountLicenseAchieve struct {
	Achieve          *int32 `protobuf:"varint,1,opt,name=achieve" json:"achieve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckAccountLicenseAchieve) Reset()         { *m = CheckAccountLicenseAchieve{} }
func (m *CheckAccountLicenseAchieve) String() string { return proto.CompactTextString(m) }
func (*CheckAccountLicenseAchieve) ProtoMessage()    {}

func (m *CheckAccountLicenseAchieve) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

type CheckAccountLicenses struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckAccountLicenses) Reset()         { *m = CheckAccountLicenses{} }
func (m *CheckAccountLicenses) String() string { return proto.CompactTextString(m) }
func (*CheckAccountLicenses) ProtoMessage()    {}

type CheckGameLicenses struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckGameLicenses) Reset()         { *m = CheckGameLicenses{} }
func (m *CheckGameLicenses) String() string { return proto.CompactTextString(m) }
func (*CheckGameLicenses) ProtoMessage()    {}

type CheckLicensesResponse struct {
	AccountLevel     *bool  `protobuf:"varint,1,opt,name=account_level" json:"account_level,omitempty"`
	Success          *bool  `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckLicensesResponse) Reset()         { *m = CheckLicensesResponse{} }
func (m *CheckLicensesResponse) String() string { return proto.CompactTextString(m) }
func (*CheckLicensesResponse) ProtoMessage()    {}

func (m *CheckLicensesResponse) GetAccountLevel() bool {
	if m != nil && m.AccountLevel != nil {
		return *m.AccountLevel
	}
	return false
}

func (m *CheckLicensesResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type ClientOption struct {
	Index            *int32   `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	AsBool           *bool    `protobuf:"varint,2,opt,name=as_bool" json:"as_bool,omitempty"`
	AsInt32          *int32   `protobuf:"varint,3,opt,name=as_int32" json:"as_int32,omitempty"`
	AsInt64          *int64   `protobuf:"varint,4,opt,name=as_int64" json:"as_int64,omitempty"`
	AsFloat          *float32 `protobuf:"fixed32,5,opt,name=as_float" json:"as_float,omitempty"`
	AsUint64         *uint64  `protobuf:"varint,6,opt,name=as_uint64" json:"as_uint64,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ClientOption) Reset()         { *m = ClientOption{} }
func (m *ClientOption) String() string { return proto.CompactTextString(m) }
func (*ClientOption) ProtoMessage()    {}

func (m *ClientOption) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ClientOption) GetAsBool() bool {
	if m != nil && m.AsBool != nil {
		return *m.AsBool
	}
	return false
}

func (m *ClientOption) GetAsInt32() int32 {
	if m != nil && m.AsInt32 != nil {
		return *m.AsInt32
	}
	return 0
}

func (m *ClientOption) GetAsInt64() int64 {
	if m != nil && m.AsInt64 != nil {
		return *m.AsInt64
	}
	return 0
}

func (m *ClientOption) GetAsFloat() float32 {
	if m != nil && m.AsFloat != nil {
		return *m.AsFloat
	}
	return 0
}

func (m *ClientOption) GetAsUint64() uint64 {
	if m != nil && m.AsUint64 != nil {
		return *m.AsUint64
	}
	return 0
}

type ClientOptions struct {
	Options          []*ClientOption `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
	Failed           *bool           `protobuf:"varint,2,opt,name=failed" json:"failed,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ClientOptions) Reset()         { *m = ClientOptions{} }
func (m *ClientOptions) String() string { return proto.CompactTextString(m) }
func (*ClientOptions) ProtoMessage()    {}

func (m *ClientOptions) GetOptions() []*ClientOption {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ClientOptions) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

type CloseCardMarket struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CloseCardMarket) Reset()         { *m = CloseCardMarket{} }
func (m *CloseCardMarket) String() string { return proto.CompactTextString(m) }
func (*CloseCardMarket) ProtoMessage()    {}

type Collection struct {
	Stacks           []*PegasusShared.CardStack `protobuf:"bytes,1,rep,name=stacks" json:"stacks,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}

func (m *Collection) GetStacks() []*PegasusShared.CardStack {
	if m != nil {
		return m.Stacks
	}
	return nil
}

type CreateDeck struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Hero             *int32  `protobuf:"varint,2,opt,name=hero" json:"hero,omitempty"`
	HeroPremium      *int32  `protobuf:"varint,3,opt,name=hero_premium" json:"hero_premium,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateDeck) Reset()         { *m = CreateDeck{} }
func (m *CreateDeck) String() string { return proto.CompactTextString(m) }
func (*CreateDeck) ProtoMessage()    {}

func (m *CreateDeck) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateDeck) GetHero() int32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

func (m *CreateDeck) GetHeroPremium() int32 {
	if m != nil && m.HeroPremium != nil {
		return *m.HeroPremium
	}
	return 0
}

type DBAction struct {
	Action           *PegasusShared.DatabaseAction `protobuf:"varint,1,opt,name=action,enum=PegasusShared.DatabaseAction" json:"action,omitempty"`
	Result           *PegasusShared.DatabaseResult `protobuf:"varint,2,opt,name=result,enum=PegasusShared.DatabaseResult,def=-1" json:"result,omitempty"`
	MetaData         *int64                        `protobuf:"varint,3,opt,name=meta_data" json:"meta_data,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *DBAction) Reset()         { *m = DBAction{} }
func (m *DBAction) String() string { return proto.CompactTextString(m) }
func (*DBAction) ProtoMessage()    {}

const Default_DBAction_Result PegasusShared.DatabaseResult = PegasusShared.DatabaseResult_DB_E_SQL_EX

func (m *DBAction) GetAction() PegasusShared.DatabaseAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return PegasusShared.DatabaseAction_DB_A_UNKNOWN
}

func (m *DBAction) GetResult() PegasusShared.DatabaseResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_DBAction_Result
}

func (m *DBAction) GetMetaData() int64 {
	if m != nil && m.MetaData != nil {
		return *m.MetaData
	}
	return 0
}

type DebugAuth struct {
	Result           *DebugAuth_Result `protobuf:"varint,1,opt,name=result,enum=PegasusUtil.DebugAuth_Result" json:"result,omitempty"`
	PlayerId         *int64            `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DebugAuth) Reset()         { *m = DebugAuth{} }
func (m *DebugAuth) String() string { return proto.CompactTextString(m) }
func (*DebugAuth) ProtoMessage()    {}

func (m *DebugAuth) GetResult() DebugAuth_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return DebugAuth_UNKNOWN
}

func (m *DebugAuth) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type DeckContents struct {
	Deck             *int64                        `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	Cards            []*PegasusShared.DeckCardData `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *DeckContents) Reset()         { *m = DeckContents{} }
func (m *DeckContents) String() string { return proto.CompactTextString(m) }
func (*DeckContents) ProtoMessage()    {}

func (m *DeckContents) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckContents) GetCards() []*PegasusShared.DeckCardData {
	if m != nil {
		return m.Cards
	}
	return nil
}

type DeckCreated struct {
	Info             *PegasusShared.DeckInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *DeckCreated) Reset()         { *m = DeckCreated{} }
func (m *DeckCreated) String() string { return proto.CompactTextString(m) }
func (*DeckCreated) ProtoMessage()    {}

func (m *DeckCreated) GetInfo() *PegasusShared.DeckInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type DeckDeleted struct {
	Deck             *int64 `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeckDeleted) Reset()         { *m = DeckDeleted{} }
func (m *DeckDeleted) String() string { return proto.CompactTextString(m) }
func (*DeckDeleted) ProtoMessage()    {}

func (m *DeckDeleted) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

type DeckGainedCard struct {
	Deck             *int64 `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	Card             *int64 `protobuf:"varint,2,opt,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeckGainedCard) Reset()         { *m = DeckGainedCard{} }
func (m *DeckGainedCard) String() string { return proto.CompactTextString(m) }
func (*DeckGainedCard) ProtoMessage()    {}

func (m *DeckGainedCard) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckGainedCard) GetCard() int64 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

type DeckList struct {
	Decks            []*PegasusShared.DeckInfo `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *DeckList) Reset()         { *m = DeckList{} }
func (m *DeckList) String() string { return proto.CompactTextString(m) }
func (*DeckList) ProtoMessage()    {}

func (m *DeckList) GetDecks() []*PegasusShared.DeckInfo {
	if m != nil {
		return m.Decks
	}
	return nil
}

type DeckLostCard struct {
	Deck             *int64 `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	Card             *int64 `protobuf:"varint,2,opt,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeckLostCard) Reset()         { *m = DeckLostCard{} }
func (m *DeckLostCard) String() string { return proto.CompactTextString(m) }
func (*DeckLostCard) ProtoMessage()    {}

func (m *DeckLostCard) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckLostCard) GetCard() int64 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

type DeckRenamed struct {
	Deck             *int64  `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeckRenamed) Reset()         { *m = DeckRenamed{} }
func (m *DeckRenamed) String() string { return proto.CompactTextString(m) }
func (*DeckRenamed) ProtoMessage()    {}

func (m *DeckRenamed) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckRenamed) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type DeckSetData struct {
	Deck             *int64                        `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	Cards            []*PegasusShared.DeckCardData `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *DeckSetData) Reset()         { *m = DeckSetData{} }
func (m *DeckSetData) String() string { return proto.CompactTextString(m) }
func (*DeckSetData) ProtoMessage()    {}

func (m *DeckSetData) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckSetData) GetCards() []*PegasusShared.DeckCardData {
	if m != nil {
		return m.Cards
	}
	return nil
}

type DeleteDeck struct {
	Deck             *int64 `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteDeck) Reset()         { *m = DeleteDeck{} }
func (m *DeleteDeck) String() string { return proto.CompactTextString(m) }
func (*DeleteDeck) ProtoMessage()    {}

func (m *DeleteDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

type DevBnetIdentify struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DevBnetIdentify) Reset()         { *m = DevBnetIdentify{} }
func (m *DevBnetIdentify) String() string { return proto.CompactTextString(m) }
func (*DevBnetIdentify) ProtoMessage()    {}

func (m *DevBnetIdentify) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Disconnected struct {
	Address          *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	GameHandle       *int32  `protobuf:"varint,2,opt,name=game_handle" json:"game_handle,omitempty"`
	ClientHandle     *int64  `protobuf:"varint,3,opt,name=client_handle" json:"client_handle,omitempty"`
	Port             *int32  `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	Version          *string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	AuroraPassword   *string `protobuf:"bytes,6,opt,name=aurora_password" json:"aurora_password,omitempty"`
	Scenario         *int32  `protobuf:"varint,7,opt,name=scenario" json:"scenario,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Disconnected) Reset()         { *m = Disconnected{} }
func (m *Disconnected) String() string { return proto.CompactTextString(m) }
func (*Disconnected) ProtoMessage()    {}

func (m *Disconnected) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Disconnected) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *Disconnected) GetClientHandle() int64 {
	if m != nil && m.ClientHandle != nil {
		return *m.ClientHandle
	}
	return 0
}

func (m *Disconnected) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *Disconnected) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Disconnected) GetAuroraPassword() string {
	if m != nil && m.AuroraPassword != nil {
		return *m.AuroraPassword
	}
	return ""
}

func (m *Disconnected) GetScenario() int32 {
	if m != nil && m.Scenario != nil {
		return *m.Scenario
	}
	return 0
}

type DoPurchase struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DoPurchase) Reset()         { *m = DoPurchase{} }
func (m *DoPurchase) String() string { return proto.CompactTextString(m) }
func (*DoPurchase) ProtoMessage()    {}

type DraftAckRewards struct {
	DeckId           *int64 `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32 `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftAckRewards) Reset()         { *m = DraftAckRewards{} }
func (m *DraftAckRewards) String() string { return proto.CompactTextString(m) }
func (*DraftAckRewards) ProtoMessage()    {}

func (m *DraftAckRewards) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftAckRewards) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type DraftBegin struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftBegin) Reset()         { *m = DraftBegin{} }
func (m *DraftBegin) String() string { return proto.CompactTextString(m) }
func (*DraftBegin) ProtoMessage()    {}

type DraftBeginning struct {
	DeckId           *int64  `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Choices          []int32 `protobuf:"varint,2,rep,name=choices" json:"choices,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DraftBeginning) Reset()         { *m = DraftBeginning{} }
func (m *DraftBeginning) String() string { return proto.CompactTextString(m) }
func (*DraftBeginning) ProtoMessage()    {}

func (m *DraftBeginning) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftBeginning) GetChoices() []int32 {
	if m != nil {
		return m.Choices
	}
	return nil
}

type DraftChosen struct {
	Asset            *int32  `protobuf:"varint,1,opt,name=asset" json:"asset,omitempty"`
	NextChoices      []int32 `protobuf:"varint,2,rep,name=next_choices" json:"next_choices,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DraftChosen) Reset()         { *m = DraftChosen{} }
func (m *DraftChosen) String() string { return proto.CompactTextString(m) }
func (*DraftChosen) ProtoMessage()    {}

func (m *DraftChosen) GetAsset() int32 {
	if m != nil && m.Asset != nil {
		return *m.Asset
	}
	return 0
}

func (m *DraftChosen) GetNextChoices() []int32 {
	if m != nil {
		return m.NextChoices
	}
	return nil
}

type DraftError struct {
	ErrorCode        *DraftError_ErrorCode `protobuf:"varint,1,opt,name=error_code,enum=PegasusUtil.DraftError_ErrorCode" json:"error_code,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *DraftError) Reset()         { *m = DraftError{} }
func (m *DraftError) String() string { return proto.CompactTextString(m) }
func (*DraftError) ProtoMessage()    {}

func (m *DraftError) GetErrorCode() DraftError_ErrorCode {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return DraftError_DE_UNKNOWN
}

type DraftGetPicksAndContents struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftGetPicksAndContents) Reset()         { *m = DraftGetPicksAndContents{} }
func (m *DraftGetPicksAndContents) String() string { return proto.CompactTextString(m) }
func (*DraftGetPicksAndContents) ProtoMessage()    {}

type DraftMakePick struct {
	DeckId           *int64 `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32 `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	Index            *int32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftMakePick) Reset()         { *m = DraftMakePick{} }
func (m *DraftMakePick) String() string { return proto.CompactTextString(m) }
func (*DraftMakePick) ProtoMessage()    {}

func (m *DraftMakePick) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftMakePick) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *DraftMakePick) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type DraftRetire struct {
	DeckId           *int64 `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32 `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftRetire) Reset()         { *m = DraftRetire{} }
func (m *DraftRetire) String() string { return proto.CompactTextString(m) }
func (*DraftRetire) ProtoMessage()    {}

func (m *DraftRetire) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftRetire) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type DraftRewardBag struct {
	RewardBooster    *PegasusShared.ProfileNoticeRewardBooster `protobuf:"bytes,1,opt,name=reward_booster" json:"reward_booster,omitempty"`
	RewardCard       *PegasusShared.ProfileNoticeRewardCard    `protobuf:"bytes,2,opt,name=reward_card" json:"reward_card,omitempty"`
	RewardDust       *PegasusShared.ProfileNoticeRewardDust    `protobuf:"bytes,3,opt,name=reward_dust" json:"reward_dust,omitempty"`
	RewardGold       *PegasusShared.ProfileNoticeRewardGold    `protobuf:"bytes,4,opt,name=reward_gold" json:"reward_gold,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *DraftRewardBag) Reset()         { *m = DraftRewardBag{} }
func (m *DraftRewardBag) String() string { return proto.CompactTextString(m) }
func (*DraftRewardBag) ProtoMessage()    {}

func (m *DraftRewardBag) GetRewardBooster() *PegasusShared.ProfileNoticeRewardBooster {
	if m != nil {
		return m.RewardBooster
	}
	return nil
}

func (m *DraftRewardBag) GetRewardCard() *PegasusShared.ProfileNoticeRewardCard {
	if m != nil {
		return m.RewardCard
	}
	return nil
}

func (m *DraftRewardBag) GetRewardDust() *PegasusShared.ProfileNoticeRewardDust {
	if m != nil {
		return m.RewardDust
	}
	return nil
}

func (m *DraftRewardBag) GetRewardGold() *PegasusShared.ProfileNoticeRewardGold {
	if m != nil {
		return m.RewardGold
	}
	return nil
}

type DraftRewardChest struct {
	Bag1             *DraftRewardBag `protobuf:"bytes,1,opt,name=bag1" json:"bag1,omitempty"`
	Bag2             *DraftRewardBag `protobuf:"bytes,2,opt,name=bag2" json:"bag2,omitempty"`
	Bag3             *DraftRewardBag `protobuf:"bytes,3,opt,name=bag3" json:"bag3,omitempty"`
	Bag4             *DraftRewardBag `protobuf:"bytes,4,opt,name=bag4" json:"bag4,omitempty"`
	Bag5             *DraftRewardBag `protobuf:"bytes,5,opt,name=bag5" json:"bag5,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *DraftRewardChest) Reset()         { *m = DraftRewardChest{} }
func (m *DraftRewardChest) String() string { return proto.CompactTextString(m) }
func (*DraftRewardChest) ProtoMessage()    {}

func (m *DraftRewardChest) GetBag1() *DraftRewardBag {
	if m != nil {
		return m.Bag1
	}
	return nil
}

func (m *DraftRewardChest) GetBag2() *DraftRewardBag {
	if m != nil {
		return m.Bag2
	}
	return nil
}

func (m *DraftRewardChest) GetBag3() *DraftRewardBag {
	if m != nil {
		return m.Bag3
	}
	return nil
}

func (m *DraftRewardChest) GetBag4() *DraftRewardBag {
	if m != nil {
		return m.Bag4
	}
	return nil
}

func (m *DraftRewardChest) GetBag5() *DraftRewardBag {
	if m != nil {
		return m.Bag5
	}
	return nil
}

type DraftChoicesAndContents struct {
	DeckId           *int64                        `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32                        `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	Choices          []int32                       `protobuf:"varint,3,rep,name=choices" json:"choices,omitempty"`
	Hero             *int32                        `protobuf:"varint,4,opt,name=hero" json:"hero,omitempty"`
	Cards            []*PegasusShared.DeckCardData `protobuf:"bytes,5,rep,name=cards" json:"cards,omitempty"`
	Wins             *int32                        `protobuf:"varint,6,opt,name=wins" json:"wins,omitempty"`
	Losses           *int32                        `protobuf:"varint,7,opt,name=losses" json:"losses,omitempty"`
	Chest            *DraftRewardChest             `protobuf:"bytes,8,opt,name=chest" json:"chest,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *DraftChoicesAndContents) Reset()         { *m = DraftChoicesAndContents{} }
func (m *DraftChoicesAndContents) String() string { return proto.CompactTextString(m) }
func (*DraftChoicesAndContents) ProtoMessage()    {}

func (m *DraftChoicesAndContents) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftChoicesAndContents) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *DraftChoicesAndContents) GetChoices() []int32 {
	if m != nil {
		return m.Choices
	}
	return nil
}

func (m *DraftChoicesAndContents) GetHero() int32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

func (m *DraftChoicesAndContents) GetCards() []*PegasusShared.DeckCardData {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *DraftChoicesAndContents) GetWins() int32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *DraftChoicesAndContents) GetLosses() int32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *DraftChoicesAndContents) GetChest() *DraftRewardChest {
	if m != nil {
		return m.Chest
	}
	return nil
}

type DraftRetired struct {
	DeckId           *int64            `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	Chest            *DraftRewardChest `protobuf:"bytes,2,opt,name=chest" json:"chest,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DraftRetired) Reset()         { *m = DraftRetired{} }
func (m *DraftRetired) String() string { return proto.CompactTextString(m) }
func (*DraftRetired) ProtoMessage()    {}

func (m *DraftRetired) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftRetired) GetChest() *DraftRewardChest {
	if m != nil {
		return m.Chest
	}
	return nil
}

type DraftRewardsAcked struct {
	DeckId           *int64 `protobuf:"varint,1,opt,name=deck_id" json:"deck_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftRewardsAcked) Reset()         { *m = DraftRewardsAcked{} }
func (m *DraftRewardsAcked) String() string { return proto.CompactTextString(m) }
func (*DraftRewardsAcked) ProtoMessage()    {}

func (m *DraftRewardsAcked) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

type DroppedRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DroppedRequest) Reset()         { *m = DroppedRequest{} }
func (m *DroppedRequest) String() string { return proto.CompactTextString(m) }
func (*DroppedRequest) ProtoMessage()    {}

type Error37 struct {
	Reason           *Error37_ThrottleReason `protobuf:"varint,1,opt,name=reason,enum=PegasusUtil.Error37_ThrottleReason" json:"reason,omitempty"`
	RetryMillis      *int64                  `protobuf:"varint,2,opt,name=retry_millis" json:"retry_millis,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *Error37) Reset()         { *m = Error37{} }
func (m *Error37) String() string { return proto.CompactTextString(m) }
func (*Error37) ProtoMessage()    {}

func (m *Error37) GetReason() Error37_ThrottleReason {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return Error37_TR_DB_LOAD
}

func (m *Error37) GetRetryMillis() int64 {
	if m != nil && m.RetryMillis != nil {
		return *m.RetryMillis
	}
	return 0
}

type GamesInfo struct {
	GamesStarted       *int32 `protobuf:"varint,1,opt,name=games_started" json:"games_started,omitempty"`
	GamesWon           *int32 `protobuf:"varint,2,opt,name=games_won" json:"games_won,omitempty"`
	GamesLost          *int32 `protobuf:"varint,3,opt,name=games_lost" json:"games_lost,omitempty"`
	FreeRewardProgress *int32 `protobuf:"varint,4,opt,name=free_reward_progress" json:"free_reward_progress,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *GamesInfo) Reset()         { *m = GamesInfo{} }
func (m *GamesInfo) String() string { return proto.CompactTextString(m) }
func (*GamesInfo) ProtoMessage()    {}

func (m *GamesInfo) GetGamesStarted() int32 {
	if m != nil && m.GamesStarted != nil {
		return *m.GamesStarted
	}
	return 0
}

func (m *GamesInfo) GetGamesWon() int32 {
	if m != nil && m.GamesWon != nil {
		return *m.GamesWon
	}
	return 0
}

func (m *GamesInfo) GetGamesLost() int32 {
	if m != nil && m.GamesLost != nil {
		return *m.GamesLost
	}
	return 0
}

func (m *GamesInfo) GetFreeRewardProgress() int32 {
	if m != nil && m.FreeRewardProgress != nil {
		return *m.FreeRewardProgress
	}
	return 0
}

type GetAccountInfo struct {
	Request          *GetAccountInfo_Request `protobuf:"varint,1,opt,name=request,enum=PegasusUtil.GetAccountInfo_Request,def=1" json:"request,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetAccountInfo) Reset()         { *m = GetAccountInfo{} }
func (m *GetAccountInfo) String() string { return proto.CompactTextString(m) }
func (*GetAccountInfo) ProtoMessage()    {}

const Default_GetAccountInfo_Request GetAccountInfo_Request = GetAccountInfo_LAST_LOGIN

func (m *GetAccountInfo) GetRequest() GetAccountInfo_Request {
	if m != nil && m.Request != nil {
		return *m.Request
	}
	return Default_GetAccountInfo_Request
}

type GetAchieves struct {
	OnlyActiveOrNewComplete *bool  `protobuf:"varint,1,opt,name=only_active_or_new_complete" json:"only_active_or_new_complete,omitempty"`
	XXX_unrecognized        []byte `json:"-"`
}

func (m *GetAchieves) Reset()         { *m = GetAchieves{} }
func (m *GetAchieves) String() string { return proto.CompactTextString(m) }
func (*GetAchieves) ProtoMessage()    {}

func (m *GetAchieves) GetOnlyActiveOrNewComplete() bool {
	if m != nil && m.OnlyActiveOrNewComplete != nil {
		return *m.OnlyActiveOrNewComplete
	}
	return false
}

type GetAdventureProgress struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAdventureProgress) Reset()         { *m = GetAdventureProgress{} }
func (m *GetAdventureProgress) String() string { return proto.CompactTextString(m) }
func (*GetAdventureProgress) ProtoMessage()    {}

type GetAssetsVersion struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAssetsVersion) Reset()         { *m = GetAssetsVersion{} }
func (m *GetAssetsVersion) String() string { return proto.CompactTextString(m) }
func (*GetAssetsVersion) ProtoMessage()    {}

type GetBattlePayConfig struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetBattlePayConfig) Reset()         { *m = GetBattlePayConfig{} }
func (m *GetBattlePayConfig) String() string { return proto.CompactTextString(m) }
func (*GetBattlePayConfig) ProtoMessage()    {}

type GetBattlePayStatus struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetBattlePayStatus) Reset()         { *m = GetBattlePayStatus{} }
func (m *GetBattlePayStatus) String() string { return proto.CompactTextString(m) }
func (*GetBattlePayStatus) ProtoMessage()    {}

type GetDeck struct {
	Deck             *int64 `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetDeck) Reset()         { *m = GetDeck{} }
func (m *GetDeck) String() string { return proto.CompactTextString(m) }
func (*GetDeck) ProtoMessage()    {}

func (m *GetDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

type GetOptions struct {
	Keys             []int32 `protobuf:"varint,1,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetOptions) Reset()         { *m = GetOptions{} }
func (m *GetOptions) String() string { return proto.CompactTextString(m) }
func (*GetOptions) ProtoMessage()    {}

func (m *GetOptions) GetKeys() []int32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

type GetPurchaseMethod struct {
	ProductId        *string `protobuf:"bytes,1,opt,name=product_id" json:"product_id,omitempty"`
	Quantity         *int32  `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	Currency         *int32  `protobuf:"varint,3,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetPurchaseMethod) Reset()         { *m = GetPurchaseMethod{} }
func (m *GetPurchaseMethod) String() string { return proto.CompactTextString(m) }
func (*GetPurchaseMethod) ProtoMessage()    {}

func (m *GetPurchaseMethod) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *GetPurchaseMethod) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *GetPurchaseMethod) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

type GetThirdPartyPurchaseStatus struct {
	ThirdPartyId     *string `protobuf:"bytes,1,opt,name=third_party_id" json:"third_party_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetThirdPartyPurchaseStatus) Reset()         { *m = GetThirdPartyPurchaseStatus{} }
func (m *GetThirdPartyPurchaseStatus) String() string { return proto.CompactTextString(m) }
func (*GetThirdPartyPurchaseStatus) ProtoMessage()    {}

func (m *GetThirdPartyPurchaseStatus) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

type GoldBalance struct {
	CappedBalance    *int64 `protobuf:"varint,1,opt,name=capped_balance" json:"capped_balance,omitempty"`
	BonusBalance     *int64 `protobuf:"varint,2,opt,name=bonus_balance" json:"bonus_balance,omitempty"`
	Cap              *int64 `protobuf:"varint,3,opt,name=cap" json:"cap,omitempty"`
	CapWarning       *int64 `protobuf:"varint,4,opt,name=cap_warning" json:"cap_warning,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GoldBalance) Reset()         { *m = GoldBalance{} }
func (m *GoldBalance) String() string { return proto.CompactTextString(m) }
func (*GoldBalance) ProtoMessage()    {}

func (m *GoldBalance) GetCappedBalance() int64 {
	if m != nil && m.CappedBalance != nil {
		return *m.CappedBalance
	}
	return 0
}

func (m *GoldBalance) GetBonusBalance() int64 {
	if m != nil && m.BonusBalance != nil {
		return *m.BonusBalance
	}
	return 0
}

func (m *GoldBalance) GetCap() int64 {
	if m != nil && m.Cap != nil {
		return *m.Cap
	}
	return 0
}

func (m *GoldBalance) GetCapWarning() int64 {
	if m != nil && m.CapWarning != nil {
		return *m.CapWarning
	}
	return 0
}

type GoldCostBooster struct {
	Cost             *int64 `protobuf:"varint,1,opt,name=cost" json:"cost,omitempty"`
	PackType         *int32 `protobuf:"varint,2,opt,name=pack_type" json:"pack_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GoldCostBooster) Reset()         { *m = GoldCostBooster{} }
func (m *GoldCostBooster) String() string { return proto.CompactTextString(m) }
func (*GoldCostBooster) ProtoMessage()    {}

func (m *GoldCostBooster) GetCost() int64 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *GoldCostBooster) GetPackType() int32 {
	if m != nil && m.PackType != nil {
		return *m.PackType
	}
	return 0
}

type BattlePayConfigResponse struct {
	Bundles              []*Bundle          `protobuf:"bytes,1,rep,name=bundles" json:"bundles,omitempty"`
	Currency             *int32             `protobuf:"varint,2,opt,name=currency" json:"currency,omitempty"`
	Unavailable          *bool              `protobuf:"varint,4,opt,name=unavailable" json:"unavailable,omitempty"`
	SecsBeforeAutoCancel *int32             `protobuf:"varint,5,opt,name=secs_before_auto_cancel" json:"secs_before_auto_cancel,omitempty"`
	GoldCostBoosters     []*GoldCostBooster `protobuf:"bytes,6,rep,name=gold_cost_boosters" json:"gold_cost_boosters,omitempty"`
	GoldCostArena        *int64             `protobuf:"varint,7,opt,name=gold_cost_arena" json:"gold_cost_arena,omitempty"`
	XXX_unrecognized     []byte             `json:"-"`
}

func (m *BattlePayConfigResponse) Reset()         { *m = BattlePayConfigResponse{} }
func (m *BattlePayConfigResponse) String() string { return proto.CompactTextString(m) }
func (*BattlePayConfigResponse) ProtoMessage()    {}

func (m *BattlePayConfigResponse) GetBundles() []*Bundle {
	if m != nil {
		return m.Bundles
	}
	return nil
}

func (m *BattlePayConfigResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *BattlePayConfigResponse) GetUnavailable() bool {
	if m != nil && m.Unavailable != nil {
		return *m.Unavailable
	}
	return false
}

func (m *BattlePayConfigResponse) GetSecsBeforeAutoCancel() int32 {
	if m != nil && m.SecsBeforeAutoCancel != nil {
		return *m.SecsBeforeAutoCancel
	}
	return 0
}

func (m *BattlePayConfigResponse) GetGoldCostBoosters() []*GoldCostBooster {
	if m != nil {
		return m.GoldCostBoosters
	}
	return nil
}

func (m *BattlePayConfigResponse) GetGoldCostArena() int64 {
	if m != nil && m.GoldCostArena != nil {
		return *m.GoldCostArena
	}
	return 0
}

type GuardianTrack struct {
	What             *int32 `protobuf:"varint,1,opt,name=what" json:"what,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuardianTrack) Reset()         { *m = GuardianTrack{} }
func (m *GuardianTrack) String() string { return proto.CompactTextString(m) }
func (*GuardianTrack) ProtoMessage()    {}

func (m *GuardianTrack) GetWhat() int32 {
	if m != nil && m.What != nil {
		return *m.What
	}
	return 0
}

type GuardianVars struct {
	Tourney          *bool  `protobuf:"varint,1,opt,name=tourney" json:"tourney,omitempty"`
	Practice         *bool  `protobuf:"varint,2,opt,name=practice" json:"practice,omitempty"`
	Casual           *bool  `protobuf:"varint,3,opt,name=casual" json:"casual,omitempty"`
	Forge            *bool  `protobuf:"varint,4,opt,name=forge" json:"forge,omitempty"`
	Friendly         *bool  `protobuf:"varint,5,opt,name=friendly" json:"friendly,omitempty"`
	Manager          *bool  `protobuf:"varint,6,opt,name=manager" json:"manager,omitempty"`
	Crafting         *bool  `protobuf:"varint,7,opt,name=crafting" json:"crafting,omitempty"`
	Hunter           *bool  `protobuf:"varint,8,opt,name=hunter" json:"hunter,omitempty"`
	Mage             *bool  `protobuf:"varint,9,opt,name=mage" json:"mage,omitempty"`
	Paladin          *bool  `protobuf:"varint,10,opt,name=paladin" json:"paladin,omitempty"`
	Priest           *bool  `protobuf:"varint,11,opt,name=priest" json:"priest,omitempty"`
	Rogue            *bool  `protobuf:"varint,12,opt,name=rogue" json:"rogue,omitempty"`
	Shaman           *bool  `protobuf:"varint,13,opt,name=shaman" json:"shaman,omitempty"`
	Warlock          *bool  `protobuf:"varint,14,opt,name=warlock" json:"warlock,omitempty"`
	Warrior          *bool  `protobuf:"varint,15,opt,name=warrior" json:"warrior,omitempty"`
	ShowUserUI       *int32 `protobuf:"varint,16,opt,name=showUserUI" json:"showUserUI,omitempty"`
	Store            *bool  `protobuf:"varint,17,opt,name=store" json:"store,omitempty"`
	BattlePay        *bool  `protobuf:"varint,18,opt,name=battle_pay" json:"battle_pay,omitempty"`
	BuyWithGold      *bool  `protobuf:"varint,19,opt,name=buy_with_gold" json:"buy_with_gold,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuardianVars) Reset()         { *m = GuardianVars{} }
func (m *GuardianVars) String() string { return proto.CompactTextString(m) }
func (*GuardianVars) ProtoMessage()    {}

func (m *GuardianVars) GetTourney() bool {
	if m != nil && m.Tourney != nil {
		return *m.Tourney
	}
	return false
}

func (m *GuardianVars) GetPractice() bool {
	if m != nil && m.Practice != nil {
		return *m.Practice
	}
	return false
}

func (m *GuardianVars) GetCasual() bool {
	if m != nil && m.Casual != nil {
		return *m.Casual
	}
	return false
}

func (m *GuardianVars) GetForge() bool {
	if m != nil && m.Forge != nil {
		return *m.Forge
	}
	return false
}

func (m *GuardianVars) GetFriendly() bool {
	if m != nil && m.Friendly != nil {
		return *m.Friendly
	}
	return false
}

func (m *GuardianVars) GetManager() bool {
	if m != nil && m.Manager != nil {
		return *m.Manager
	}
	return false
}

func (m *GuardianVars) GetCrafting() bool {
	if m != nil && m.Crafting != nil {
		return *m.Crafting
	}
	return false
}

func (m *GuardianVars) GetHunter() bool {
	if m != nil && m.Hunter != nil {
		return *m.Hunter
	}
	return false
}

func (m *GuardianVars) GetMage() bool {
	if m != nil && m.Mage != nil {
		return *m.Mage
	}
	return false
}

func (m *GuardianVars) GetPaladin() bool {
	if m != nil && m.Paladin != nil {
		return *m.Paladin
	}
	return false
}

func (m *GuardianVars) GetPriest() bool {
	if m != nil && m.Priest != nil {
		return *m.Priest
	}
	return false
}

func (m *GuardianVars) GetRogue() bool {
	if m != nil && m.Rogue != nil {
		return *m.Rogue
	}
	return false
}

func (m *GuardianVars) GetShaman() bool {
	if m != nil && m.Shaman != nil {
		return *m.Shaman
	}
	return false
}

func (m *GuardianVars) GetWarlock() bool {
	if m != nil && m.Warlock != nil {
		return *m.Warlock
	}
	return false
}

func (m *GuardianVars) GetWarrior() bool {
	if m != nil && m.Warrior != nil {
		return *m.Warrior
	}
	return false
}

func (m *GuardianVars) GetShowUserUI() int32 {
	if m != nil && m.ShowUserUI != nil {
		return *m.ShowUserUI
	}
	return 0
}

func (m *GuardianVars) GetStore() bool {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return false
}

func (m *GuardianVars) GetBattlePay() bool {
	if m != nil && m.BattlePay != nil {
		return *m.BattlePay
	}
	return false
}

func (m *GuardianVars) GetBuyWithGold() bool {
	if m != nil && m.BuyWithGold != nil {
		return *m.BuyWithGold
	}
	return false
}

type MassDisenchantRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MassDisenchantRequest) Reset()         { *m = MassDisenchantRequest{} }
func (m *MassDisenchantRequest) String() string { return proto.CompactTextString(m) }
func (*MassDisenchantRequest) ProtoMessage()    {}

type MassDisenchantResponse struct {
	Amount           *int32 `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MassDisenchantResponse) Reset()         { *m = MassDisenchantResponse{} }
func (m *MassDisenchantResponse) String() string { return proto.CompactTextString(m) }
func (*MassDisenchantResponse) ProtoMessage()    {}

func (m *MassDisenchantResponse) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type MedalHistoryInfo struct {
	Season           *int32              `protobuf:"varint,1,opt,name=season" json:"season,omitempty"`
	When             *PegasusShared.Date `protobuf:"bytes,2,opt,name=when" json:"when,omitempty"`
	Stars            *int32              `protobuf:"varint,3,opt,name=stars" json:"stars,omitempty"`
	StarLevel        *int32              `protobuf:"varint,4,opt,name=star_level" json:"star_level,omitempty"`
	LevelStart       *int32              `protobuf:"varint,5,opt,name=level_start" json:"level_start,omitempty"`
	LevelEnd         *int32              `protobuf:"varint,6,opt,name=level_end" json:"level_end,omitempty"`
	LegendRank       *int32              `protobuf:"varint,7,opt,name=legend_rank" json:"legend_rank,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *MedalHistoryInfo) Reset()         { *m = MedalHistoryInfo{} }
func (m *MedalHistoryInfo) String() string { return proto.CompactTextString(m) }
func (*MedalHistoryInfo) ProtoMessage()    {}

func (m *MedalHistoryInfo) GetSeason() int32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

func (m *MedalHistoryInfo) GetWhen() *PegasusShared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *MedalHistoryInfo) GetStars() int32 {
	if m != nil && m.Stars != nil {
		return *m.Stars
	}
	return 0
}

func (m *MedalHistoryInfo) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *MedalHistoryInfo) GetLevelStart() int32 {
	if m != nil && m.LevelStart != nil {
		return *m.LevelStart
	}
	return 0
}

func (m *MedalHistoryInfo) GetLevelEnd() int32 {
	if m != nil && m.LevelEnd != nil {
		return *m.LevelEnd
	}
	return 0
}

func (m *MedalHistoryInfo) GetLegendRank() int32 {
	if m != nil && m.LegendRank != nil {
		return *m.LegendRank
	}
	return 0
}

type MedalHistory struct {
	Medals           []*MedalHistoryInfo `protobuf:"bytes,1,rep,name=medals" json:"medals,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *MedalHistory) Reset()         { *m = MedalHistory{} }
func (m *MedalHistory) String() string { return proto.CompactTextString(m) }
func (*MedalHistory) ProtoMessage()    {}

func (m *MedalHistory) GetMedals() []*MedalHistoryInfo {
	if m != nil {
		return m.Medals
	}
	return nil
}

type MedalInfo struct {
	SeasonWins       *int32 `protobuf:"varint,3,opt,name=season_wins" json:"season_wins,omitempty"`
	Stars            *int32 `protobuf:"varint,6,opt,name=stars" json:"stars,omitempty"`
	Streak           *int32 `protobuf:"varint,7,opt,name=streak" json:"streak,omitempty"`
	StarLevel        *int32 `protobuf:"varint,8,opt,name=star_level" json:"star_level,omitempty"`
	LevelStart       *int32 `protobuf:"varint,9,opt,name=level_start" json:"level_start,omitempty"`
	LevelEnd         *int32 `protobuf:"varint,10,opt,name=level_end" json:"level_end,omitempty"`
	CanLose          *bool  `protobuf:"varint,11,opt,name=can_lose" json:"can_lose,omitempty"`
	LegendRank       *int32 `protobuf:"varint,13,opt,name=legend_rank" json:"legend_rank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MedalInfo) Reset()         { *m = MedalInfo{} }
func (m *MedalInfo) String() string { return proto.CompactTextString(m) }
func (*MedalInfo) ProtoMessage()    {}

func (m *MedalInfo) GetSeasonWins() int32 {
	if m != nil && m.SeasonWins != nil {
		return *m.SeasonWins
	}
	return 0
}

func (m *MedalInfo) GetStars() int32 {
	if m != nil && m.Stars != nil {
		return *m.Stars
	}
	return 0
}

func (m *MedalInfo) GetStreak() int32 {
	if m != nil && m.Streak != nil {
		return *m.Streak
	}
	return 0
}

func (m *MedalInfo) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *MedalInfo) GetLevelStart() int32 {
	if m != nil && m.LevelStart != nil {
		return *m.LevelStart
	}
	return 0
}

func (m *MedalInfo) GetLevelEnd() int32 {
	if m != nil && m.LevelEnd != nil {
		return *m.LevelEnd
	}
	return 0
}

func (m *MedalInfo) GetCanLose() bool {
	if m != nil && m.CanLose != nil {
		return *m.CanLose
	}
	return false
}

func (m *MedalInfo) GetLegendRank() int32 {
	if m != nil && m.LegendRank != nil {
		return *m.LegendRank
	}
	return 0
}

type NearbyPlayer struct {
	BnetIdHi         *uint64 `protobuf:"varint,1,opt,name=bnet_id_hi" json:"bnet_id_hi,omitempty"`
	BnetIdLo         *uint64 `protobuf:"varint,2,opt,name=bnet_id_lo" json:"bnet_id_lo,omitempty"`
	SessionStartTime *uint64 `protobuf:"varint,3,opt,name=session_start_time" json:"session_start_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NearbyPlayer) Reset()         { *m = NearbyPlayer{} }
func (m *NearbyPlayer) String() string { return proto.CompactTextString(m) }
func (*NearbyPlayer) ProtoMessage()    {}

func (m *NearbyPlayer) GetBnetIdHi() uint64 {
	if m != nil && m.BnetIdHi != nil {
		return *m.BnetIdHi
	}
	return 0
}

func (m *NearbyPlayer) GetBnetIdLo() uint64 {
	if m != nil && m.BnetIdLo != nil {
		return *m.BnetIdLo
	}
	return 0
}

func (m *NearbyPlayer) GetSessionStartTime() uint64 {
	if m != nil && m.SessionStartTime != nil {
		return *m.SessionStartTime
	}
	return 0
}

type NextHeroLevelReward struct {
	Level            *int32                                    `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	RewardBooster    *PegasusShared.ProfileNoticeRewardBooster `protobuf:"bytes,2,opt,name=reward_booster" json:"reward_booster,omitempty"`
	RewardCard       *PegasusShared.ProfileNoticeRewardCard    `protobuf:"bytes,3,opt,name=reward_card" json:"reward_card,omitempty"`
	RewardDust       *PegasusShared.ProfileNoticeRewardDust    `protobuf:"bytes,4,opt,name=reward_dust" json:"reward_dust,omitempty"`
	RewardGold       *PegasusShared.ProfileNoticeRewardGold    `protobuf:"bytes,5,opt,name=reward_gold" json:"reward_gold,omitempty"`
	RewardMount      *PegasusShared.ProfileNoticeRewardMount   `protobuf:"bytes,6,opt,name=reward_mount" json:"reward_mount,omitempty"`
	RewardForge      *PegasusShared.ProfileNoticeRewardForge   `protobuf:"bytes,7,opt,name=reward_forge" json:"reward_forge,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *NextHeroLevelReward) Reset()         { *m = NextHeroLevelReward{} }
func (m *NextHeroLevelReward) String() string { return proto.CompactTextString(m) }
func (*NextHeroLevelReward) ProtoMessage()    {}

func (m *NextHeroLevelReward) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *NextHeroLevelReward) GetRewardBooster() *PegasusShared.ProfileNoticeRewardBooster {
	if m != nil {
		return m.RewardBooster
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardCard() *PegasusShared.ProfileNoticeRewardCard {
	if m != nil {
		return m.RewardCard
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardDust() *PegasusShared.ProfileNoticeRewardDust {
	if m != nil {
		return m.RewardDust
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardGold() *PegasusShared.ProfileNoticeRewardGold {
	if m != nil {
		return m.RewardGold
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardMount() *PegasusShared.ProfileNoticeRewardMount {
	if m != nil {
		return m.RewardMount
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardForge() *PegasusShared.ProfileNoticeRewardForge {
	if m != nil {
		return m.RewardForge
	}
	return nil
}

type HeroXPInfo struct {
	ClassId          *int32               `protobuf:"varint,1,opt,name=class_id" json:"class_id,omitempty"`
	Level            *int32               `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	CurrXp           *int64               `protobuf:"varint,3,opt,name=curr_xp" json:"curr_xp,omitempty"`
	MaxXp            *int64               `protobuf:"varint,4,opt,name=max_xp" json:"max_xp,omitempty"`
	NextReward       *NextHeroLevelReward `protobuf:"bytes,5,opt,name=next_reward" json:"next_reward,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *HeroXPInfo) Reset()         { *m = HeroXPInfo{} }
func (m *HeroXPInfo) String() string { return proto.CompactTextString(m) }
func (*HeroXPInfo) ProtoMessage()    {}

func (m *HeroXPInfo) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *HeroXPInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *HeroXPInfo) GetCurrXp() int64 {
	if m != nil && m.CurrXp != nil {
		return *m.CurrXp
	}
	return 0
}

func (m *HeroXPInfo) GetMaxXp() int64 {
	if m != nil && m.MaxXp != nil {
		return *m.MaxXp
	}
	return 0
}

func (m *HeroXPInfo) GetNextReward() *NextHeroLevelReward {
	if m != nil {
		return m.NextReward
	}
	return nil
}

type HeroXP struct {
	XpInfos          []*HeroXPInfo `protobuf:"bytes,1,rep,name=xp_infos" json:"xp_infos,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HeroXP) Reset()         { *m = HeroXP{} }
func (m *HeroXP) String() string { return proto.CompactTextString(m) }
func (*HeroXP) ProtoMessage()    {}

func (m *HeroXP) GetXpInfos() []*HeroXPInfo {
	if m != nil {
		return m.XpInfos
	}
	return nil
}

type NOP struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *NOP) Reset()         { *m = NOP{} }
func (m *NOP) String() string { return proto.CompactTextString(m) }
func (*NOP) ProtoMessage()    {}

type OneClientTracking struct {
	Level            *OneClientTracking_Level `protobuf:"varint,1,opt,name=level,enum=PegasusUtil.OneClientTracking_Level,def=1" json:"level,omitempty"`
	What             *int32                   `protobuf:"varint,2,opt,name=what" json:"what,omitempty"`
	Message          *string                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Timestamp        *uint64                  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *OneClientTracking) Reset()         { *m = OneClientTracking{} }
func (m *OneClientTracking) String() string { return proto.CompactTextString(m) }
func (*OneClientTracking) ProtoMessage()    {}

const Default_OneClientTracking_Level OneClientTracking_Level = OneClientTracking_L_INFO

func (m *OneClientTracking) GetLevel() OneClientTracking_Level {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return Default_OneClientTracking_Level
}

func (m *OneClientTracking) GetWhat() int32 {
	if m != nil && m.What != nil {
		return *m.What
	}
	return 0
}

func (m *OneClientTracking) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *OneClientTracking) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type ClientTracking struct {
	Info             []*OneClientTracking `protobuf:"bytes,4,rep,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ClientTracking) Reset()         { *m = ClientTracking{} }
func (m *ClientTracking) String() string { return proto.CompactTextString(m) }
func (*ClientTracking) ProtoMessage()    {}

func (m *ClientTracking) GetInfo() []*OneClientTracking {
	if m != nil {
		return m.Info
	}
	return nil
}

type OpenBooster struct {
	BoosterType      *int32 `protobuf:"varint,2,opt,name=booster_type" json:"booster_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OpenBooster) Reset()         { *m = OpenBooster{} }
func (m *OpenBooster) String() string { return proto.CompactTextString(m) }
func (*OpenBooster) ProtoMessage()    {}

func (m *OpenBooster) GetBoosterType() int32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

type PlayerRecord struct {
	Type             *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Data             *int32 `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Wins             *int32 `protobuf:"varint,3,opt,name=wins" json:"wins,omitempty"`
	Losses           *int32 `protobuf:"varint,4,opt,name=losses" json:"losses,omitempty"`
	Ties             *int32 `protobuf:"varint,5,opt,name=ties" json:"ties,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlayerRecord) Reset()         { *m = PlayerRecord{} }
func (m *PlayerRecord) String() string { return proto.CompactTextString(m) }
func (*PlayerRecord) ProtoMessage()    {}

func (m *PlayerRecord) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PlayerRecord) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *PlayerRecord) GetWins() int32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *PlayerRecord) GetLosses() int32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *PlayerRecord) GetTies() int32 {
	if m != nil && m.Ties != nil {
		return *m.Ties
	}
	return 0
}

type PlayerRecords struct {
	Records          []*PlayerRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PlayerRecords) Reset()         { *m = PlayerRecords{} }
func (m *PlayerRecords) String() string { return proto.CompactTextString(m) }
func (*PlayerRecords) ProtoMessage()    {}

func (m *PlayerRecords) GetRecords() []*PlayerRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type PlayQueue struct {
	Queue            *PegasusShared.PlayQueueInfo `protobuf:"bytes,1,opt,name=queue" json:"queue,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *PlayQueue) Reset()         { *m = PlayQueue{} }
func (m *PlayQueue) String() string { return proto.CompactTextString(m) }
func (*PlayQueue) ProtoMessage()    {}

func (m *PlayQueue) GetQueue() *PegasusShared.PlayQueueInfo {
	if m != nil {
		return m.Queue
	}
	return nil
}

type ProfileDeckLimit struct {
	DeckLimit        *int32 `protobuf:"varint,1,opt,name=deck_limit" json:"deck_limit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileDeckLimit) Reset()         { *m = ProfileDeckLimit{} }
func (m *ProfileDeckLimit) String() string { return proto.CompactTextString(m) }
func (*ProfileDeckLimit) ProtoMessage()    {}

func (m *ProfileDeckLimit) GetDeckLimit() int32 {
	if m != nil && m.DeckLimit != nil {
		return *m.DeckLimit
	}
	return 0
}

type ProfileLastLogin struct {
	LastLogin        *PegasusShared.Date `protobuf:"bytes,1,opt,name=last_login" json:"last_login,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ProfileLastLogin) Reset()         { *m = ProfileLastLogin{} }
func (m *ProfileLastLogin) String() string { return proto.CompactTextString(m) }
func (*ProfileLastLogin) ProtoMessage()    {}

func (m *ProfileLastLogin) GetLastLogin() *PegasusShared.Date {
	if m != nil {
		return m.LastLogin
	}
	return nil
}

type ProfileNotice struct {
	Entry             *int64                                             `protobuf:"varint,1,opt,name=entry" json:"entry,omitempty"`
	Medal             *PegasusShared.ProfileNoticeMedal                  `protobuf:"bytes,2,opt,name=medal" json:"medal,omitempty"`
	RewardBooster     *PegasusShared.ProfileNoticeRewardBooster          `protobuf:"bytes,3,opt,name=reward_booster" json:"reward_booster,omitempty"`
	RewardCard        *PegasusShared.ProfileNoticeRewardCard             `protobuf:"bytes,4,opt,name=reward_card" json:"reward_card,omitempty"`
	PreconDeck        *PegasusShared.ProfileNoticePreconDeck             `protobuf:"bytes,6,opt,name=precon_deck" json:"precon_deck,omitempty"`
	RewardDust        *PegasusShared.ProfileNoticeRewardDust             `protobuf:"bytes,7,opt,name=reward_dust" json:"reward_dust,omitempty"`
	RewardGold        *PegasusShared.ProfileNoticeRewardGold             `protobuf:"bytes,8,opt,name=reward_gold" json:"reward_gold,omitempty"`
	RewardMount       *PegasusShared.ProfileNoticeRewardMount            `protobuf:"bytes,9,opt,name=reward_mount" json:"reward_mount,omitempty"`
	RewardForge       *PegasusShared.ProfileNoticeRewardForge            `protobuf:"bytes,10,opt,name=reward_forge" json:"reward_forge,omitempty"`
	Origin            *int32                                             `protobuf:"varint,11,opt,name=origin" json:"origin,omitempty"`
	OriginData        *int64                                             `protobuf:"varint,12,opt,name=origin_data" json:"origin_data,omitempty"`
	When              *PegasusShared.Date                                `protobuf:"bytes,13,opt,name=when" json:"when,omitempty"`
	Purchase          *PegasusShared.ProfileNoticePurchase               `protobuf:"bytes,14,opt,name=purchase" json:"purchase,omitempty"`
	RewardCardBack    *PegasusShared.ProfileNoticeCardBack               `protobuf:"bytes,15,opt,name=reward_card_back" json:"reward_card_back,omitempty"`
	DcGameResult      *PegasusShared.ProfileNoticeDisconnectedGameResult `protobuf:"bytes,16,opt,name=dc_game_result" json:"dc_game_result,omitempty"`
	BonusStars        *PegasusShared.ProfileNoticeBonusStars             `protobuf:"bytes,17,opt,name=bonus_stars" json:"bonus_stars,omitempty"`
	AdventureProgress *PegasusShared.ProfileNoticeAdventureProgress      `protobuf:"bytes,18,opt,name=adventure_progress" json:"adventure_progress,omitempty"`
	XXX_unrecognized  []byte                                             `json:"-"`
}

func (m *ProfileNotice) Reset()         { *m = ProfileNotice{} }
func (m *ProfileNotice) String() string { return proto.CompactTextString(m) }
func (*ProfileNotice) ProtoMessage()    {}

func (m *ProfileNotice) GetEntry() int64 {
	if m != nil && m.Entry != nil {
		return *m.Entry
	}
	return 0
}

func (m *ProfileNotice) GetMedal() *PegasusShared.ProfileNoticeMedal {
	if m != nil {
		return m.Medal
	}
	return nil
}

func (m *ProfileNotice) GetRewardBooster() *PegasusShared.ProfileNoticeRewardBooster {
	if m != nil {
		return m.RewardBooster
	}
	return nil
}

func (m *ProfileNotice) GetRewardCard() *PegasusShared.ProfileNoticeRewardCard {
	if m != nil {
		return m.RewardCard
	}
	return nil
}

func (m *ProfileNotice) GetPreconDeck() *PegasusShared.ProfileNoticePreconDeck {
	if m != nil {
		return m.PreconDeck
	}
	return nil
}

func (m *ProfileNotice) GetRewardDust() *PegasusShared.ProfileNoticeRewardDust {
	if m != nil {
		return m.RewardDust
	}
	return nil
}

func (m *ProfileNotice) GetRewardGold() *PegasusShared.ProfileNoticeRewardGold {
	if m != nil {
		return m.RewardGold
	}
	return nil
}

func (m *ProfileNotice) GetRewardMount() *PegasusShared.ProfileNoticeRewardMount {
	if m != nil {
		return m.RewardMount
	}
	return nil
}

func (m *ProfileNotice) GetRewardForge() *PegasusShared.ProfileNoticeRewardForge {
	if m != nil {
		return m.RewardForge
	}
	return nil
}

func (m *ProfileNotice) GetOrigin() int32 {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return 0
}

func (m *ProfileNotice) GetOriginData() int64 {
	if m != nil && m.OriginData != nil {
		return *m.OriginData
	}
	return 0
}

func (m *ProfileNotice) GetWhen() *PegasusShared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *ProfileNotice) GetPurchase() *PegasusShared.ProfileNoticePurchase {
	if m != nil {
		return m.Purchase
	}
	return nil
}

func (m *ProfileNotice) GetRewardCardBack() *PegasusShared.ProfileNoticeCardBack {
	if m != nil {
		return m.RewardCardBack
	}
	return nil
}

func (m *ProfileNotice) GetDcGameResult() *PegasusShared.ProfileNoticeDisconnectedGameResult {
	if m != nil {
		return m.DcGameResult
	}
	return nil
}

func (m *ProfileNotice) GetBonusStars() *PegasusShared.ProfileNoticeBonusStars {
	if m != nil {
		return m.BonusStars
	}
	return nil
}

func (m *ProfileNotice) GetAdventureProgress() *PegasusShared.ProfileNoticeAdventureProgress {
	if m != nil {
		return m.AdventureProgress
	}
	return nil
}

type ProfileNotices struct {
	List             []*ProfileNotice `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ProfileNotices) Reset()         { *m = ProfileNotices{} }
func (m *ProfileNotices) String() string { return proto.CompactTextString(m) }
func (*ProfileNotices) ProtoMessage()    {}

func (m *ProfileNotices) GetList() []*ProfileNotice {
	if m != nil {
		return m.List
	}
	return nil
}

type ProfileProgress struct {
	Progress         *int64              `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	BestForge        *int32              `protobuf:"varint,2,opt,name=best_forge" json:"best_forge,omitempty"`
	LastForge        *PegasusShared.Date `protobuf:"bytes,3,opt,name=last_forge" json:"last_forge,omitempty"`
	DisplayBanner    *int32              `protobuf:"varint,4,opt,name=display_banner" json:"display_banner,omitempty"`
	AdventureOptions []*AdventureOptions `protobuf:"bytes,5,rep,name=adventure_options" json:"adventure_options,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ProfileProgress) Reset()         { *m = ProfileProgress{} }
func (m *ProfileProgress) String() string { return proto.CompactTextString(m) }
func (*ProfileProgress) ProtoMessage()    {}

func (m *ProfileProgress) GetProgress() int64 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *ProfileProgress) GetBestForge() int32 {
	if m != nil && m.BestForge != nil {
		return *m.BestForge
	}
	return 0
}

func (m *ProfileProgress) GetLastForge() *PegasusShared.Date {
	if m != nil {
		return m.LastForge
	}
	return nil
}

func (m *ProfileProgress) GetDisplayBanner() int32 {
	if m != nil && m.DisplayBanner != nil {
		return *m.DisplayBanner
	}
	return 0
}

func (m *ProfileProgress) GetAdventureOptions() []*AdventureOptions {
	if m != nil {
		return m.AdventureOptions
	}
	return nil
}

type PurchaseError struct {
	Error              *PurchaseError_Error `protobuf:"varint,1,opt,name=error,enum=PegasusUtil.PurchaseError_Error,def=-1" json:"error,omitempty"`
	PurchaseInProgress *string              `protobuf:"bytes,2,opt,name=purchase_in_progress" json:"purchase_in_progress,omitempty"`
	ErrorCode          *string              `protobuf:"bytes,3,opt,name=error_code" json:"error_code,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *PurchaseError) Reset()         { *m = PurchaseError{} }
func (m *PurchaseError) String() string { return proto.CompactTextString(m) }
func (*PurchaseError) ProtoMessage()    {}

const Default_PurchaseError_Error PurchaseError_Error = PurchaseError_E_UNKNOWN

func (m *PurchaseError) GetError() PurchaseError_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return Default_PurchaseError_Error
}

func (m *PurchaseError) GetPurchaseInProgress() string {
	if m != nil && m.PurchaseInProgress != nil {
		return *m.PurchaseInProgress
	}
	return ""
}

func (m *PurchaseError) GetErrorCode() string {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return ""
}

type BattlePayStatusResponse struct {
	Status             *BattlePayStatusResponse_PurchaseState `protobuf:"varint,1,opt,name=status,enum=PegasusUtil.BattlePayStatusResponse_PurchaseState" json:"status,omitempty"`
	ProductId          *string                                `protobuf:"bytes,2,opt,name=product_id" json:"product_id,omitempty"`
	PurchaseError      *PurchaseError                         `protobuf:"bytes,3,opt,name=purchase_error" json:"purchase_error,omitempty"`
	BattlePayAvailable *bool                                  `protobuf:"varint,4,opt,name=battle_pay_available" json:"battle_pay_available,omitempty"`
	TransactionId      *int64                                 `protobuf:"varint,5,opt,name=transaction_id" json:"transaction_id,omitempty"`
	ThirdPartyId       *string                                `protobuf:"bytes,6,opt,name=third_party_id" json:"third_party_id,omitempty"`
	Currency           *int32                                 `protobuf:"varint,7,opt,name=currency" json:"currency,omitempty"`
	Provider           *PegasusShared.BattlePayProvider       `protobuf:"varint,8,opt,name=provider,enum=PegasusShared.BattlePayProvider,def=1" json:"provider,omitempty"`
	XXX_unrecognized   []byte                                 `json:"-"`
}

func (m *BattlePayStatusResponse) Reset()         { *m = BattlePayStatusResponse{} }
func (m *BattlePayStatusResponse) String() string { return proto.CompactTextString(m) }
func (*BattlePayStatusResponse) ProtoMessage()    {}

const Default_BattlePayStatusResponse_Provider PegasusShared.BattlePayProvider = PegasusShared.BattlePayProvider_BP_PROVIDER_BLIZZARD

func (m *BattlePayStatusResponse) GetStatus() BattlePayStatusResponse_PurchaseState {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return BattlePayStatusResponse_PS_READY
}

func (m *BattlePayStatusResponse) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *BattlePayStatusResponse) GetPurchaseError() *PurchaseError {
	if m != nil {
		return m.PurchaseError
	}
	return nil
}

func (m *BattlePayStatusResponse) GetBattlePayAvailable() bool {
	if m != nil && m.BattlePayAvailable != nil {
		return *m.BattlePayAvailable
	}
	return false
}

func (m *BattlePayStatusResponse) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *BattlePayStatusResponse) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *BattlePayStatusResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *BattlePayStatusResponse) GetProvider() PegasusShared.BattlePayProvider {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return Default_BattlePayStatusResponse_Provider
}

type PurchaseMethod struct {
	ProductId         *string        `protobuf:"bytes,1,opt,name=product_id" json:"product_id,omitempty"`
	Quantity          *int32         `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	Currency          *int32         `protobuf:"varint,3,opt,name=currency" json:"currency,omitempty"`
	WalletName        *string        `protobuf:"bytes,4,opt,name=wallet_name" json:"wallet_name,omitempty"`
	UseEbalance       *bool          `protobuf:"varint,5,opt,name=use_ebalance" json:"use_ebalance,omitempty"`
	Error             *PurchaseError `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	TransactionId     *int64         `protobuf:"varint,7,opt,name=transaction_id" json:"transaction_id,omitempty"`
	IsZeroCostLicense *bool          `protobuf:"varint,8,opt,name=is_zero_cost_license" json:"is_zero_cost_license,omitempty"`
	XXX_unrecognized  []byte         `json:"-"`
}

func (m *PurchaseMethod) Reset()         { *m = PurchaseMethod{} }
func (m *PurchaseMethod) String() string { return proto.CompactTextString(m) }
func (*PurchaseMethod) ProtoMessage()    {}

func (m *PurchaseMethod) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *PurchaseMethod) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *PurchaseMethod) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *PurchaseMethod) GetWalletName() string {
	if m != nil && m.WalletName != nil {
		return *m.WalletName
	}
	return ""
}

func (m *PurchaseMethod) GetUseEbalance() bool {
	if m != nil && m.UseEbalance != nil {
		return *m.UseEbalance
	}
	return false
}

func (m *PurchaseMethod) GetError() *PurchaseError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PurchaseMethod) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *PurchaseMethod) GetIsZeroCostLicense() bool {
	if m != nil && m.IsZeroCostLicense != nil {
		return *m.IsZeroCostLicense
	}
	return false
}

type PurchaseResponse struct {
	Error             *PurchaseError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	TransactionId     *int64         `protobuf:"varint,2,opt,name=transaction_id" json:"transaction_id,omitempty"`
	ProductId         *string        `protobuf:"bytes,3,opt,name=product_id" json:"product_id,omitempty"`
	ThirdPartyId      *string        `protobuf:"bytes,4,opt,name=third_party_id" json:"third_party_id,omitempty"`
	Currency          *int32         `protobuf:"varint,5,opt,name=currency" json:"currency,omitempty"`
	IsZeroCostLicense *bool          `protobuf:"varint,6,opt,name=is_zero_cost_license" json:"is_zero_cost_license,omitempty"`
	XXX_unrecognized  []byte         `json:"-"`
}

func (m *PurchaseResponse) Reset()         { *m = PurchaseResponse{} }
func (m *PurchaseResponse) String() string { return proto.CompactTextString(m) }
func (*PurchaseResponse) ProtoMessage()    {}

func (m *PurchaseResponse) GetError() *PurchaseError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PurchaseResponse) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *PurchaseResponse) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *PurchaseResponse) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *PurchaseResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *PurchaseResponse) GetIsZeroCostLicense() bool {
	if m != nil && m.IsZeroCostLicense != nil {
		return *m.IsZeroCostLicense
	}
	return false
}

type PurchaseWithGold struct {
	Quantity         *int32 `protobuf:"varint,1,opt,name=quantity" json:"quantity,omitempty"`
	Product          *int32 `protobuf:"varint,2,opt,name=product" json:"product,omitempty"`
	Data             *int32 `protobuf:"varint,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PurchaseWithGold) Reset()         { *m = PurchaseWithGold{} }
func (m *PurchaseWithGold) String() string { return proto.CompactTextString(m) }
func (*PurchaseWithGold) ProtoMessage()    {}

func (m *PurchaseWithGold) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *PurchaseWithGold) GetProduct() int32 {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return 0
}

func (m *PurchaseWithGold) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

type PurchaseWithGoldResponse struct {
	Result           *PurchaseWithGoldResponse_PurchaseResult `protobuf:"varint,1,opt,name=result,enum=PegasusUtil.PurchaseWithGoldResponse_PurchaseResult,def=1" json:"result,omitempty"`
	GoldUsed         *int64                                   `protobuf:"varint,2,opt,name=gold_used" json:"gold_used,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *PurchaseWithGoldResponse) Reset()         { *m = PurchaseWithGoldResponse{} }
func (m *PurchaseWithGoldResponse) String() string { return proto.CompactTextString(m) }
func (*PurchaseWithGoldResponse) ProtoMessage()    {}

const Default_PurchaseWithGoldResponse_Result PurchaseWithGoldResponse_PurchaseResult = PurchaseWithGoldResponse_PR_SUCCESS

func (m *PurchaseWithGoldResponse) GetResult() PurchaseWithGoldResponse_PurchaseResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_PurchaseWithGoldResponse_Result
}

func (m *PurchaseWithGoldResponse) GetGoldUsed() int64 {
	if m != nil && m.GoldUsed != nil {
		return *m.GoldUsed
	}
	return 0
}

type RenameDeck struct {
	Deck             *int64  `protobuf:"varint,1,opt,name=deck" json:"deck,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RenameDeck) Reset()         { *m = RenameDeck{} }
func (m *RenameDeck) String() string { return proto.CompactTextString(m) }
func (*RenameDeck) ProtoMessage()    {}

func (m *RenameDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *RenameDeck) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type RewardProgress struct {
	SeasonEnd        *PegasusShared.Date `protobuf:"bytes,1,opt,name=season_end" json:"season_end,omitempty"`
	WinsPerGold      *int32              `protobuf:"varint,2,opt,name=wins_per_gold" json:"wins_per_gold,omitempty"`
	GoldPerReward    *int32              `protobuf:"varint,3,opt,name=gold_per_reward" json:"gold_per_reward,omitempty"`
	MaxGoldPerDay    *int32              `protobuf:"varint,4,opt,name=max_gold_per_day" json:"max_gold_per_day,omitempty"`
	SeasonNumber     *int32              `protobuf:"varint,5,opt,name=season_number" json:"season_number,omitempty"`
	PackId           *int32              `protobuf:"varint,8,opt,name=pack_id" json:"pack_id,omitempty"`
	XpSoloLimit      *int32              `protobuf:"varint,9,opt,name=xp_solo_limit" json:"xp_solo_limit,omitempty"`
	MaxHeroLevel     *int32              `protobuf:"varint,10,opt,name=max_hero_level" json:"max_hero_level,omitempty"`
	NextQuestCancel  *PegasusShared.Date `protobuf:"bytes,11,opt,name=next_quest_cancel" json:"next_quest_cancel,omitempty"`
	EventTimingMod   *float32            `protobuf:"fixed32,12,opt,name=event_timing_mod" json:"event_timing_mod,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *RewardProgress) Reset()         { *m = RewardProgress{} }
func (m *RewardProgress) String() string { return proto.CompactTextString(m) }
func (*RewardProgress) ProtoMessage()    {}

func (m *RewardProgress) GetSeasonEnd() *PegasusShared.Date {
	if m != nil {
		return m.SeasonEnd
	}
	return nil
}

func (m *RewardProgress) GetWinsPerGold() int32 {
	if m != nil && m.WinsPerGold != nil {
		return *m.WinsPerGold
	}
	return 0
}

func (m *RewardProgress) GetGoldPerReward() int32 {
	if m != nil && m.GoldPerReward != nil {
		return *m.GoldPerReward
	}
	return 0
}

func (m *RewardProgress) GetMaxGoldPerDay() int32 {
	if m != nil && m.MaxGoldPerDay != nil {
		return *m.MaxGoldPerDay
	}
	return 0
}

func (m *RewardProgress) GetSeasonNumber() int32 {
	if m != nil && m.SeasonNumber != nil {
		return *m.SeasonNumber
	}
	return 0
}

func (m *RewardProgress) GetPackId() int32 {
	if m != nil && m.PackId != nil {
		return *m.PackId
	}
	return 0
}

func (m *RewardProgress) GetXpSoloLimit() int32 {
	if m != nil && m.XpSoloLimit != nil {
		return *m.XpSoloLimit
	}
	return 0
}

func (m *RewardProgress) GetMaxHeroLevel() int32 {
	if m != nil && m.MaxHeroLevel != nil {
		return *m.MaxHeroLevel
	}
	return 0
}

func (m *RewardProgress) GetNextQuestCancel() *PegasusShared.Date {
	if m != nil {
		return m.NextQuestCancel
	}
	return nil
}

func (m *RewardProgress) GetEventTimingMod() float32 {
	if m != nil && m.EventTimingMod != nil {
		return *m.EventTimingMod
	}
	return 0
}

type SetAdventureOptions struct {
	AdventureOptions *AdventureOptions `protobuf:"bytes,1,opt,name=adventure_options" json:"adventure_options,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SetAdventureOptions) Reset()         { *m = SetAdventureOptions{} }
func (m *SetAdventureOptions) String() string { return proto.CompactTextString(m) }
func (*SetAdventureOptions) ProtoMessage()    {}

func (m *SetAdventureOptions) GetAdventureOptions() *AdventureOptions {
	if m != nil {
		return m.AdventureOptions
	}
	return nil
}

type SetCardBack struct {
	CardBack         *int32 `protobuf:"varint,1,opt,name=card_back" json:"card_back,omitempty"`
	DeckId           *int64 `protobuf:"varint,2,opt,name=deck_id" json:"deck_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetCardBack) Reset()         { *m = SetCardBack{} }
func (m *SetCardBack) String() string { return proto.CompactTextString(m) }
func (*SetCardBack) ProtoMessage()    {}

func (m *SetCardBack) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *SetCardBack) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

type SetCardBackResponse struct {
	Success          *bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	CardBack         *int32 `protobuf:"varint,2,opt,name=card_back" json:"card_back,omitempty"`
	DeckId           *int64 `protobuf:"varint,3,opt,name=deck_id" json:"deck_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetCardBackResponse) Reset()         { *m = SetCardBackResponse{} }
func (m *SetCardBackResponse) String() string { return proto.CompactTextString(m) }
func (*SetCardBackResponse) ProtoMessage()    {}

func (m *SetCardBackResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *SetCardBackResponse) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *SetCardBackResponse) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

type SetOptions struct {
	Options          []*ClientOption `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SetOptions) Reset()         { *m = SetOptions{} }
func (m *SetOptions) String() string { return proto.CompactTextString(m) }
func (*SetOptions) ProtoMessage()    {}

func (m *SetOptions) GetOptions() []*ClientOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type SetProgress struct {
	Value            *int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetProgress) Reset()         { *m = SetProgress{} }
func (m *SetProgress) String() string { return proto.CompactTextString(m) }
func (*SetProgress) ProtoMessage()    {}

func (m *SetProgress) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type SetProgressResponse struct {
	Result           *SetProgressResponse_Result `protobuf:"varint,1,opt,name=result,enum=PegasusUtil.SetProgressResponse_Result,def=1" json:"result,omitempty"`
	Progress         *int64                      `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *SetProgressResponse) Reset()         { *m = SetProgressResponse{} }
func (m *SetProgressResponse) String() string { return proto.CompactTextString(m) }
func (*SetProgressResponse) ProtoMessage()    {}

const Default_SetProgressResponse_Result SetProgressResponse_Result = SetProgressResponse_SUCCESS

func (m *SetProgressResponse) GetResult() SetProgressResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_SetProgressResponse_Result
}

func (m *SetProgressResponse) GetProgress() int64 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type SpecialEventTiming struct {
	Event            *string `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	Start            *uint64 `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	End              *uint64 `protobuf:"varint,3,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SpecialEventTiming) Reset()         { *m = SpecialEventTiming{} }
func (m *SpecialEventTiming) String() string { return proto.CompactTextString(m) }
func (*SpecialEventTiming) ProtoMessage()    {}

func (m *SpecialEventTiming) GetEvent() string {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ""
}

func (m *SpecialEventTiming) GetStart() uint64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *SpecialEventTiming) GetEnd() uint64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

type MassiveLoginReply struct {
	ProfileProgress    *ProfileProgress      `protobuf:"bytes,1,opt,name=profile_progress" json:"profile_progress,omitempty"`
	MedalInfo          *MedalInfo            `protobuf:"bytes,2,opt,name=medal_info" json:"medal_info,omitempty"`
	DeckList           *DeckList             `protobuf:"bytes,3,opt,name=deck_list" json:"deck_list,omitempty"`
	ProfileDeckLimit   *ProfileDeckLimit     `protobuf:"bytes,4,opt,name=profile_deck_limit" json:"profile_deck_limit,omitempty"`
	GoldBalance        *GoldBalance          `protobuf:"bytes,5,opt,name=gold_balance" json:"gold_balance,omitempty"`
	ArcaneDustBalance  *ArcaneDustBalance    `protobuf:"bytes,6,opt,name=arcane_dust_balance" json:"arcane_dust_balance,omitempty"`
	RewardProgress     *RewardProgress       `protobuf:"bytes,7,opt,name=reward_progress" json:"reward_progress,omitempty"`
	PlayerRecords      *PlayerRecords        `protobuf:"bytes,8,opt,name=player_records" json:"player_records,omitempty"`
	CardBacks          *CardBacks            `protobuf:"bytes,9,opt,name=card_backs" json:"card_backs,omitempty"`
	SpecialEventTiming []*SpecialEventTiming `protobuf:"bytes,10,rep,name=special_event_timing" json:"special_event_timing,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *MassiveLoginReply) Reset()         { *m = MassiveLoginReply{} }
func (m *MassiveLoginReply) String() string { return proto.CompactTextString(m) }
func (*MassiveLoginReply) ProtoMessage()    {}

func (m *MassiveLoginReply) GetProfileProgress() *ProfileProgress {
	if m != nil {
		return m.ProfileProgress
	}
	return nil
}

func (m *MassiveLoginReply) GetMedalInfo() *MedalInfo {
	if m != nil {
		return m.MedalInfo
	}
	return nil
}

func (m *MassiveLoginReply) GetDeckList() *DeckList {
	if m != nil {
		return m.DeckList
	}
	return nil
}

func (m *MassiveLoginReply) GetProfileDeckLimit() *ProfileDeckLimit {
	if m != nil {
		return m.ProfileDeckLimit
	}
	return nil
}

func (m *MassiveLoginReply) GetGoldBalance() *GoldBalance {
	if m != nil {
		return m.GoldBalance
	}
	return nil
}

func (m *MassiveLoginReply) GetArcaneDustBalance() *ArcaneDustBalance {
	if m != nil {
		return m.ArcaneDustBalance
	}
	return nil
}

func (m *MassiveLoginReply) GetRewardProgress() *RewardProgress {
	if m != nil {
		return m.RewardProgress
	}
	return nil
}

func (m *MassiveLoginReply) GetPlayerRecords() *PlayerRecords {
	if m != nil {
		return m.PlayerRecords
	}
	return nil
}

func (m *MassiveLoginReply) GetCardBacks() *CardBacks {
	if m != nil {
		return m.CardBacks
	}
	return nil
}

func (m *MassiveLoginReply) GetSpecialEventTiming() []*SpecialEventTiming {
	if m != nil {
		return m.SpecialEventTiming
	}
	return nil
}

type Subscribe struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Subscribe) Reset()         { *m = Subscribe{} }
func (m *Subscribe) String() string { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()    {}

type SubscribeResponse struct {
	Route             *uint64 `protobuf:"varint,1,opt,name=route" json:"route,omitempty"`
	SupportedFeatures *uint64 `protobuf:"varint,2,opt,name=supported_features" json:"supported_features,omitempty"`
	KeepAliveSecs     *uint64 `protobuf:"varint,3,opt,name=keep_alive_secs" json:"keep_alive_secs,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}

func (m *SubscribeResponse) GetRoute() uint64 {
	if m != nil && m.Route != nil {
		return *m.Route
	}
	return 0
}

func (m *SubscribeResponse) GetSupportedFeatures() uint64 {
	if m != nil && m.SupportedFeatures != nil {
		return *m.SupportedFeatures
	}
	return 0
}

func (m *SubscribeResponse) GetKeepAliveSecs() uint64 {
	if m != nil && m.KeepAliveSecs != nil {
		return *m.KeepAliveSecs
	}
	return 0
}

type ThirdPartyPurchaseStatusResponse struct {
	ThirdPartyId     *string                                  `protobuf:"bytes,1,opt,name=third_party_id" json:"third_party_id,omitempty"`
	Status           *ThirdPartyPurchaseStatusResponse_Status `protobuf:"varint,2,opt,name=status,enum=PegasusUtil.ThirdPartyPurchaseStatusResponse_Status,def=1" json:"status,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *ThirdPartyPurchaseStatusResponse) Reset()         { *m = ThirdPartyPurchaseStatusResponse{} }
func (m *ThirdPartyPurchaseStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyPurchaseStatusResponse) ProtoMessage()    {}

const Default_ThirdPartyPurchaseStatusResponse_Status ThirdPartyPurchaseStatusResponse_Status = ThirdPartyPurchaseStatusResponse_NOT_FOUND

func (m *ThirdPartyPurchaseStatusResponse) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *ThirdPartyPurchaseStatusResponse) GetStatus() ThirdPartyPurchaseStatusResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_ThirdPartyPurchaseStatusResponse_Status
}

type ThirdPartyReceiptData struct {
	ThirdPartyId     *string `protobuf:"bytes,1,opt,name=third_party_id" json:"third_party_id,omitempty"`
	Receipt          *string `protobuf:"bytes,2,opt,name=receipt" json:"receipt,omitempty"`
	ThirdPartyUserId *string `protobuf:"bytes,3,opt,name=third_party_user_id" json:"third_party_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThirdPartyReceiptData) Reset()         { *m = ThirdPartyReceiptData{} }
func (m *ThirdPartyReceiptData) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyReceiptData) ProtoMessage()    {}

func (m *ThirdPartyReceiptData) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *ThirdPartyReceiptData) GetReceipt() string {
	if m != nil && m.Receipt != nil {
		return *m.Receipt
	}
	return ""
}

func (m *ThirdPartyReceiptData) GetThirdPartyUserId() string {
	if m != nil && m.ThirdPartyUserId != nil {
		return *m.ThirdPartyUserId
	}
	return ""
}

type StartThirdPartyPurchase struct {
	Provider            *PegasusShared.BattlePayProvider `protobuf:"varint,1,opt,name=provider,enum=PegasusShared.BattlePayProvider,def=1" json:"provider,omitempty"`
	ProductId           *string                          `protobuf:"bytes,2,opt,name=product_id" json:"product_id,omitempty"`
	Quantity            *int32                           `protobuf:"varint,3,opt,name=quantity" json:"quantity,omitempty"`
	DanglingReceiptData *ThirdPartyReceiptData           `protobuf:"bytes,4,opt,name=dangling_receipt_data" json:"dangling_receipt_data,omitempty"`
	XXX_unrecognized    []byte                           `json:"-"`
}

func (m *StartThirdPartyPurchase) Reset()         { *m = StartThirdPartyPurchase{} }
func (m *StartThirdPartyPurchase) String() string { return proto.CompactTextString(m) }
func (*StartThirdPartyPurchase) ProtoMessage()    {}

const Default_StartThirdPartyPurchase_Provider PegasusShared.BattlePayProvider = PegasusShared.BattlePayProvider_BP_PROVIDER_BLIZZARD

func (m *StartThirdPartyPurchase) GetProvider() PegasusShared.BattlePayProvider {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return Default_StartThirdPartyPurchase_Provider
}

func (m *StartThirdPartyPurchase) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *StartThirdPartyPurchase) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *StartThirdPartyPurchase) GetDanglingReceiptData() *ThirdPartyReceiptData {
	if m != nil {
		return m.DanglingReceiptData
	}
	return nil
}

type SubmitThirdPartyReceipt struct {
	ReceiptData      *ThirdPartyReceiptData `protobuf:"bytes,1,opt,name=receipt_data" json:"receipt_data,omitempty"`
	TransactionId    *int64                 `protobuf:"varint,2,opt,name=transaction_id" json:"transaction_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *SubmitThirdPartyReceipt) Reset()         { *m = SubmitThirdPartyReceipt{} }
func (m *SubmitThirdPartyReceipt) String() string { return proto.CompactTextString(m) }
func (*SubmitThirdPartyReceipt) ProtoMessage()    {}

func (m *SubmitThirdPartyReceipt) GetReceiptData() *ThirdPartyReceiptData {
	if m != nil {
		return m.ReceiptData
	}
	return nil
}

func (m *SubmitThirdPartyReceipt) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

type TriggerEventResponse struct {
	EventId          *int32 `protobuf:"varint,1,opt,name=event_id" json:"event_id,omitempty"`
	Success          *bool  `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TriggerEventResponse) Reset()         { *m = TriggerEventResponse{} }
func (m *TriggerEventResponse) String() string { return proto.CompactTextString(m) }
func (*TriggerEventResponse) ProtoMessage()    {}

func (m *TriggerEventResponse) GetEventId() int32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *TriggerEventResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type TriggerLaunchDayEvent struct {
	LastPlayed       *NearbyPlayer `protobuf:"bytes,1,opt,name=last_played" json:"last_played,omitempty"`
	OtherPlayer      *NearbyPlayer `protobuf:"bytes,2,opt,name=other_player" json:"other_player,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *TriggerLaunchDayEvent) Reset()         { *m = TriggerLaunchDayEvent{} }
func (m *TriggerLaunchDayEvent) String() string { return proto.CompactTextString(m) }
func (*TriggerLaunchDayEvent) ProtoMessage()    {}

func (m *TriggerLaunchDayEvent) GetLastPlayed() *NearbyPlayer {
	if m != nil {
		return m.LastPlayed
	}
	return nil
}

func (m *TriggerLaunchDayEvent) GetOtherPlayer() *NearbyPlayer {
	if m != nil {
		return m.OtherPlayer
	}
	return nil
}

type UpdateLogin struct {
	ReplyRequired    *bool  `protobuf:"varint,1,opt,name=reply_required" json:"reply_required,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UpdateLogin) Reset()         { *m = UpdateLogin{} }
func (m *UpdateLogin) String() string { return proto.CompactTextString(m) }
func (*UpdateLogin) ProtoMessage()    {}

func (m *UpdateLogin) GetReplyRequired() bool {
	if m != nil && m.ReplyRequired != nil {
		return *m.ReplyRequired
	}
	return false
}

type UpdateLoginComplete struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UpdateLoginComplete) Reset()         { *m = UpdateLoginComplete{} }
func (m *UpdateLoginComplete) String() string { return proto.CompactTextString(m) }
func (*UpdateLoginComplete) ProtoMessage()    {}

type UtilAuth struct {
	Result           *UtilAuth_Result `protobuf:"varint,1,opt,name=result,enum=PegasusUtil.UtilAuth_Result" json:"result,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *UtilAuth) Reset()         { *m = UtilAuth{} }
func (m *UtilAuth) String() string { return proto.CompactTextString(m) }
func (*UtilAuth) ProtoMessage()    {}

func (m *UtilAuth) GetResult() UtilAuth_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return UtilAuth_UNKNOWN
}

type UtilHandshake struct {
	ClientHandle     *int32 `protobuf:"varint,1,opt,name=client_handle" json:"client_handle,omitempty"`
	Password         *int32 `protobuf:"varint,2,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UtilHandshake) Reset()         { *m = UtilHandshake{} }
func (m *UtilHandshake) String() string { return proto.CompactTextString(m) }
func (*UtilHandshake) ProtoMessage()    {}

func (m *UtilHandshake) GetClientHandle() int32 {
	if m != nil && m.ClientHandle != nil {
		return *m.ClientHandle
	}
	return 0
}

func (m *UtilHandshake) GetPassword() int32 {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return 0
}

type ValidateAchieve struct {
	Achieve          *int32 `protobuf:"varint,1,opt,name=achieve" json:"achieve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ValidateAchieve) Reset()         { *m = ValidateAchieve{} }
func (m *ValidateAchieve) String() string { return proto.CompactTextString(m) }
func (*ValidateAchieve) ProtoMessage()    {}

func (m *ValidateAchieve) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

type ValidateAchieveResponse struct {
	Achieve          *int32 `protobuf:"varint,1,opt,name=achieve" json:"achieve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ValidateAchieveResponse) Reset()         { *m = ValidateAchieveResponse{} }
func (m *ValidateAchieveResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateAchieveResponse) ProtoMessage()    {}

func (m *ValidateAchieveResponse) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

func init() {
	proto.RegisterEnum("PegasusUtil.AccountLicenseAchieveResponse_PacketID", AccountLicenseAchieveResponse_PacketID_name, AccountLicenseAchieveResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AccountLicenseAchieveResponse_Result", AccountLicenseAchieveResponse_Result_name, AccountLicenseAchieveResponse_Result_value)
	proto.RegisterEnum("PegasusUtil.Achieves_PacketID", Achieves_PacketID_name, Achieves_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AckAchieveProgress_PacketID", AckAchieveProgress_PacketID_name, AckAchieveProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AckCardSeen_PacketID", AckCardSeen_PacketID_name, AckCardSeen_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AckNotice_PacketID", AckNotice_PacketID_name, AckNotice_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AcknowledgeBanner_PacketID", AcknowledgeBanner_PacketID_name, AcknowledgeBanner_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AckWingProgress_PacketID", AckWingProgress_PacketID_name, AckWingProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AdventureProgressResponse_PacketID", AdventureProgressResponse_PacketID_name, AdventureProgressResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ArcaneDustBalance_PacketID", ArcaneDustBalance_PacketID_name, ArcaneDustBalance_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AssetsVersionResponse_PacketID", AssetsVersionResponse_PacketID_name, AssetsVersionResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasAchieveInfo_PacketID", AtlasAchieveInfo_PacketID_name, AtlasAchieveInfo_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasAchieves_PacketID", AtlasAchieves_PacketID_name, AtlasAchieves_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasAddBooster_PacketID", AtlasAddBooster_PacketID_name, AtlasAddBooster_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasAddCard_PacketID", AtlasAddCard_PacketID_name, AtlasAddCard_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasAddCardBack_PacketID", AtlasAddCardBack_PacketID_name, AtlasAddCardBack_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasAddDraft_PacketID", AtlasAddDraft_PacketID_name, AtlasAddDraft_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasBoosters_PacketID", AtlasBoosters_PacketID_name, AtlasBoosters_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasCardBacks_PacketID", AtlasCardBacks_PacketID_name, AtlasCardBacks_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasCardDetails_PacketID", AtlasCardDetails_PacketID_name, AtlasCardDetails_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasChangeArcaneDust_PacketID", AtlasChangeArcaneDust_PacketID_name, AtlasChangeArcaneDust_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasChangeBonusGold_PacketID", AtlasChangeBonusGold_PacketID_name, AtlasChangeBonusGold_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasChangeGold_PacketID", AtlasChangeGold_PacketID_name, AtlasChangeGold_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasCollection_PacketID", AtlasCollection_PacketID_name, AtlasCollection_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasCurrencyDetails_PacketID", AtlasCurrencyDetails_PacketID_name, AtlasCurrencyDetails_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasDecks_PacketID", AtlasDecks_PacketID_name, AtlasDecks_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasDrafts_PacketID", AtlasDrafts_PacketID_name, AtlasDrafts_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasError_ErrorType", AtlasError_ErrorType_name, AtlasError_ErrorType_value)
	proto.RegisterEnum("PegasusUtil.AtlasError_PacketID", AtlasError_PacketID_name, AtlasError_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetAchieveInfo_PacketID", AtlasGetAchieveInfo_PacketID_name, AtlasGetAchieveInfo_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetAchieves_PacketID", AtlasGetAchieves_PacketID_name, AtlasGetAchieves_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetAdventureProgress_PacketID", AtlasGetAdventureProgress_PacketID_name, AtlasGetAdventureProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetBoosters_PacketID", AtlasGetBoosters_PacketID_name, AtlasGetBoosters_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetCardBacks_PacketID", AtlasGetCardBacks_PacketID_name, AtlasGetCardBacks_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetCardDetails_PacketID", AtlasGetCardDetails_PacketID_name, AtlasGetCardDetails_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetCollection_PacketID", AtlasGetCollection_PacketID_name, AtlasGetCollection_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetCurrencyDetails_PacketID", AtlasGetCurrencyDetails_PacketID_name, AtlasGetCurrencyDetails_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetDecks_PacketID", AtlasGetDecks_PacketID_name, AtlasGetDecks_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetDrafts_PacketID", AtlasGetDrafts_PacketID_name, AtlasGetDrafts_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetOrders_PacketID", AtlasGetOrders_PacketID_name, AtlasGetOrders_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasGetPlayerInfo_PacketID", AtlasGetPlayerInfo_PacketID_name, AtlasGetPlayerInfo_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasOrders_PacketID", AtlasOrders_PacketID_name, AtlasOrders_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasReleaseMobilePurchaseLock_PacketID", AtlasReleaseMobilePurchaseLock_PacketID_name, AtlasReleaseMobilePurchaseLock_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasRemoveBooster_PacketID", AtlasRemoveBooster_PacketID_name, AtlasRemoveBooster_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasRemoveCard_PacketID", AtlasRemoveCard_PacketID_name, AtlasRemoveCard_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasRemoveCardBack_PacketID", AtlasRemoveCardBack_PacketID_name, AtlasRemoveCardBack_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasRemoveDraft_PacketID", AtlasRemoveDraft_PacketID_name, AtlasRemoveDraft_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasRestoreCard_PacketID", AtlasRestoreCard_PacketID_name, AtlasRestoreCard_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasSetAdventureProgress_PacketID", AtlasSetAdventureProgress_PacketID_name, AtlasSetAdventureProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasSuccess_PacketID", AtlasSuccess_PacketID_name, AtlasSuccess_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasAdventureProgress_PacketID", AtlasAdventureProgress_PacketID_name, AtlasAdventureProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.BoosterContent_PacketID", BoosterContent_PacketID_name, BoosterContent_PacketID_value)
	proto.RegisterEnum("PegasusUtil.AtlasPlayer_PacketID", AtlasPlayer_PacketID_name, AtlasPlayer_PacketID_value)
	proto.RegisterEnum("PegasusUtil.BoosterList_PacketID", BoosterList_PacketID_name, BoosterList_PacketID_value)
	proto.RegisterEnum("PegasusUtil.BoosterTallyList_PacketID", BoosterTallyList_PacketID_name, BoosterTallyList_PacketID_value)
	proto.RegisterEnum("PegasusUtil.BoughtSoldCard_PacketID", BoughtSoldCard_PacketID_name, BoughtSoldCard_PacketID_value)
	proto.RegisterEnum("PegasusUtil.BoughtSoldCard_Result", BoughtSoldCard_Result_name, BoughtSoldCard_Result_value)
	proto.RegisterEnum("PegasusUtil.BuySellCard_PacketID", BuySellCard_PacketID_name, BuySellCard_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CancelPurchase_PacketID", CancelPurchase_PacketID_name, CancelPurchase_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CancelPurchase_ThirdPartyCancelReason", CancelPurchase_ThirdPartyCancelReason_name, CancelPurchase_ThirdPartyCancelReason_value)
	proto.RegisterEnum("PegasusUtil.CancelPurchaseResponse_CancelResult", CancelPurchaseResponse_CancelResult_name, CancelPurchaseResponse_CancelResult_value)
	proto.RegisterEnum("PegasusUtil.CancelPurchaseResponse_PacketID", CancelPurchaseResponse_PacketID_name, CancelPurchaseResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CancelQuest_PacketID", CancelQuest_PacketID_name, CancelQuest_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CancelQuestResponse_PacketID", CancelQuestResponse_PacketID_name, CancelQuestResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CardBacks_PacketID", CardBacks_PacketID_name, CardBacks_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CardValues_PacketID", CardValues_PacketID_name, CardValues_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CheckAccountLicenseAchieve_PacketID", CheckAccountLicenseAchieve_PacketID_name, CheckAccountLicenseAchieve_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CheckAccountLicenses_PacketID", CheckAccountLicenses_PacketID_name, CheckAccountLicenses_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CheckGameLicenses_PacketID", CheckGameLicenses_PacketID_name, CheckGameLicenses_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CheckLicensesResponse_PacketID", CheckLicensesResponse_PacketID_name, CheckLicensesResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ClientOptions_PacketID", ClientOptions_PacketID_name, ClientOptions_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CloseCardMarket_PacketID", CloseCardMarket_PacketID_name, CloseCardMarket_PacketID_value)
	proto.RegisterEnum("PegasusUtil.Collection_PacketID", Collection_PacketID_name, Collection_PacketID_value)
	proto.RegisterEnum("PegasusUtil.CreateDeck_PacketID", CreateDeck_PacketID_name, CreateDeck_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DBAction_PacketID", DBAction_PacketID_name, DBAction_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DebugAuth_PacketID", DebugAuth_PacketID_name, DebugAuth_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DebugAuth_Result", DebugAuth_Result_name, DebugAuth_Result_value)
	proto.RegisterEnum("PegasusUtil.DeckContents_PacketID", DeckContents_PacketID_name, DeckContents_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeckCreated_PacketID", DeckCreated_PacketID_name, DeckCreated_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeckDeleted_PacketID", DeckDeleted_PacketID_name, DeckDeleted_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeckGainedCard_PacketID", DeckGainedCard_PacketID_name, DeckGainedCard_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeckList_PacketID", DeckList_PacketID_name, DeckList_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeckLostCard_PacketID", DeckLostCard_PacketID_name, DeckLostCard_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeckRenamed_PacketID", DeckRenamed_PacketID_name, DeckRenamed_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeckSetData_PacketID", DeckSetData_PacketID_name, DeckSetData_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DeleteDeck_PacketID", DeleteDeck_PacketID_name, DeleteDeck_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DevBnetIdentify_PacketID", DevBnetIdentify_PacketID_name, DevBnetIdentify_PacketID_value)
	proto.RegisterEnum("PegasusUtil.Disconnected_PacketID", Disconnected_PacketID_name, Disconnected_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DoPurchase_PacketID", DoPurchase_PacketID_name, DoPurchase_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftAckRewards_PacketID", DraftAckRewards_PacketID_name, DraftAckRewards_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftBegin_PacketID", DraftBegin_PacketID_name, DraftBegin_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftBeginning_PacketID", DraftBeginning_PacketID_name, DraftBeginning_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftChosen_PacketID", DraftChosen_PacketID_name, DraftChosen_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftError_ErrorCode", DraftError_ErrorCode_name, DraftError_ErrorCode_value)
	proto.RegisterEnum("PegasusUtil.DraftError_PacketID", DraftError_PacketID_name, DraftError_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftGetPicksAndContents_PacketID", DraftGetPicksAndContents_PacketID_name, DraftGetPicksAndContents_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftMakePick_PacketID", DraftMakePick_PacketID_name, DraftMakePick_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftRetire_PacketID", DraftRetire_PacketID_name, DraftRetire_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftChoicesAndContents_PacketID", DraftChoicesAndContents_PacketID_name, DraftChoicesAndContents_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftRetired_PacketID", DraftRetired_PacketID_name, DraftRetired_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DraftRewardsAcked_PacketID", DraftRewardsAcked_PacketID_name, DraftRewardsAcked_PacketID_value)
	proto.RegisterEnum("PegasusUtil.DroppedRequest_PacketID", DroppedRequest_PacketID_name, DroppedRequest_PacketID_value)
	proto.RegisterEnum("PegasusUtil.Error37_PacketID", Error37_PacketID_name, Error37_PacketID_value)
	proto.RegisterEnum("PegasusUtil.Error37_ThrottleReason", Error37_ThrottleReason_name, Error37_ThrottleReason_value)
	proto.RegisterEnum("PegasusUtil.GamesInfo_PacketID", GamesInfo_PacketID_name, GamesInfo_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetAccountInfo_PacketID", GetAccountInfo_PacketID_name, GetAccountInfo_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetAccountInfo_Request", GetAccountInfo_Request_name, GetAccountInfo_Request_value)
	proto.RegisterEnum("PegasusUtil.GetAchieves_PacketID", GetAchieves_PacketID_name, GetAchieves_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetAdventureProgress_PacketID", GetAdventureProgress_PacketID_name, GetAdventureProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetAssetsVersion_PacketID", GetAssetsVersion_PacketID_name, GetAssetsVersion_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetBattlePayConfig_PacketID", GetBattlePayConfig_PacketID_name, GetBattlePayConfig_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetBattlePayStatus_PacketID", GetBattlePayStatus_PacketID_name, GetBattlePayStatus_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetDeck_PacketID", GetDeck_PacketID_name, GetDeck_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetOptions_PacketID", GetOptions_PacketID_name, GetOptions_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetPurchaseMethod_PacketID", GetPurchaseMethod_PacketID_name, GetPurchaseMethod_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GetThirdPartyPurchaseStatus_PacketID", GetThirdPartyPurchaseStatus_PacketID_name, GetThirdPartyPurchaseStatus_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GoldBalance_PacketID", GoldBalance_PacketID_name, GoldBalance_PacketID_value)
	proto.RegisterEnum("PegasusUtil.BattlePayConfigResponse_PacketID", BattlePayConfigResponse_PacketID_name, BattlePayConfigResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GuardianTrack_PacketID", GuardianTrack_PacketID_name, GuardianTrack_PacketID_value)
	proto.RegisterEnum("PegasusUtil.GuardianVars_PacketID", GuardianVars_PacketID_name, GuardianVars_PacketID_value)
	proto.RegisterEnum("PegasusUtil.MassDisenchantRequest_PacketID", MassDisenchantRequest_PacketID_name, MassDisenchantRequest_PacketID_value)
	proto.RegisterEnum("PegasusUtil.MassDisenchantResponse_PacketID", MassDisenchantResponse_PacketID_name, MassDisenchantResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.MedalHistory_PacketID", MedalHistory_PacketID_name, MedalHistory_PacketID_value)
	proto.RegisterEnum("PegasusUtil.MedalInfo_PacketID", MedalInfo_PacketID_name, MedalInfo_PacketID_value)
	proto.RegisterEnum("PegasusUtil.HeroXP_PacketID", HeroXP_PacketID_name, HeroXP_PacketID_value)
	proto.RegisterEnum("PegasusUtil.NOP_PacketID", NOP_PacketID_name, NOP_PacketID_value)
	proto.RegisterEnum("PegasusUtil.OneClientTracking_Level", OneClientTracking_Level_name, OneClientTracking_Level_value)
	proto.RegisterEnum("PegasusUtil.ClientTracking_PacketID", ClientTracking_PacketID_name, ClientTracking_PacketID_value)
	proto.RegisterEnum("PegasusUtil.OpenBooster_PacketID", OpenBooster_PacketID_name, OpenBooster_PacketID_value)
	proto.RegisterEnum("PegasusUtil.PlayerRecords_PacketID", PlayerRecords_PacketID_name, PlayerRecords_PacketID_value)
	proto.RegisterEnum("PegasusUtil.PlayQueue_PacketID", PlayQueue_PacketID_name, PlayQueue_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ProfileDeckLimit_PacketID", ProfileDeckLimit_PacketID_name, ProfileDeckLimit_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ProfileLastLogin_PacketID", ProfileLastLogin_PacketID_name, ProfileLastLogin_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ProfileNotices_PacketID", ProfileNotices_PacketID_name, ProfileNotices_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ProfileProgress_PacketID", ProfileProgress_PacketID_name, ProfileProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.PurchaseError_Error", PurchaseError_Error_name, PurchaseError_Error_value)
	proto.RegisterEnum("PegasusUtil.BattlePayStatusResponse_PacketID", BattlePayStatusResponse_PacketID_name, BattlePayStatusResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.BattlePayStatusResponse_PurchaseState", BattlePayStatusResponse_PurchaseState_name, BattlePayStatusResponse_PurchaseState_value)
	proto.RegisterEnum("PegasusUtil.PurchaseMethod_PacketID", PurchaseMethod_PacketID_name, PurchaseMethod_PacketID_value)
	proto.RegisterEnum("PegasusUtil.PurchaseResponse_PacketID", PurchaseResponse_PacketID_name, PurchaseResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.PurchaseWithGold_PacketID", PurchaseWithGold_PacketID_name, PurchaseWithGold_PacketID_value)
	proto.RegisterEnum("PegasusUtil.PurchaseWithGoldResponse_PacketID", PurchaseWithGoldResponse_PacketID_name, PurchaseWithGoldResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.PurchaseWithGoldResponse_PurchaseResult", PurchaseWithGoldResponse_PurchaseResult_name, PurchaseWithGoldResponse_PurchaseResult_value)
	proto.RegisterEnum("PegasusUtil.RenameDeck_PacketID", RenameDeck_PacketID_name, RenameDeck_PacketID_value)
	proto.RegisterEnum("PegasusUtil.RewardProgress_PacketID", RewardProgress_PacketID_name, RewardProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SetAdventureOptions_PacketID", SetAdventureOptions_PacketID_name, SetAdventureOptions_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SetCardBack_PacketID", SetCardBack_PacketID_name, SetCardBack_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SetCardBackResponse_PacketID", SetCardBackResponse_PacketID_name, SetCardBackResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SetOptions_PacketID", SetOptions_PacketID_name, SetOptions_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SetProgress_PacketID", SetProgress_PacketID_name, SetProgress_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SetProgressResponse_PacketID", SetProgressResponse_PacketID_name, SetProgressResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SetProgressResponse_Result", SetProgressResponse_Result_name, SetProgressResponse_Result_value)
	proto.RegisterEnum("PegasusUtil.MassiveLoginReply_PacketID", MassiveLoginReply_PacketID_name, MassiveLoginReply_PacketID_value)
	proto.RegisterEnum("PegasusUtil.Subscribe_PacketID", Subscribe_PacketID_name, Subscribe_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SubscribeResponse_Features", SubscribeResponse_Features_name, SubscribeResponse_Features_value)
	proto.RegisterEnum("PegasusUtil.SubscribeResponse_PacketID", SubscribeResponse_PacketID_name, SubscribeResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ThirdPartyPurchaseStatusResponse_PacketID", ThirdPartyPurchaseStatusResponse_PacketID_name, ThirdPartyPurchaseStatusResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ThirdPartyPurchaseStatusResponse_Status", ThirdPartyPurchaseStatusResponse_Status_name, ThirdPartyPurchaseStatusResponse_Status_value)
	proto.RegisterEnum("PegasusUtil.StartThirdPartyPurchase_PacketID", StartThirdPartyPurchase_PacketID_name, StartThirdPartyPurchase_PacketID_value)
	proto.RegisterEnum("PegasusUtil.SubmitThirdPartyReceipt_PacketID", SubmitThirdPartyReceipt_PacketID_name, SubmitThirdPartyReceipt_PacketID_value)
	proto.RegisterEnum("PegasusUtil.TriggerEventResponse_PacketID", TriggerEventResponse_PacketID_name, TriggerEventResponse_PacketID_value)
	proto.RegisterEnum("PegasusUtil.TriggerLaunchDayEvent_PacketID", TriggerLaunchDayEvent_PacketID_name, TriggerLaunchDayEvent_PacketID_value)
	proto.RegisterEnum("PegasusUtil.UpdateLogin_PacketID", UpdateLogin_PacketID_name, UpdateLogin_PacketID_value)
	proto.RegisterEnum("PegasusUtil.UpdateLoginComplete_PacketID", UpdateLoginComplete_PacketID_name, UpdateLoginComplete_PacketID_value)
	proto.RegisterEnum("PegasusUtil.UtilAuth_PacketID", UtilAuth_PacketID_name, UtilAuth_PacketID_value)
	proto.RegisterEnum("PegasusUtil.UtilAuth_Result", UtilAuth_Result_name, UtilAuth_Result_value)
	proto.RegisterEnum("PegasusUtil.UtilHandshake_PacketID", UtilHandshake_PacketID_name, UtilHandshake_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ValidateAchieve_PacketID", ValidateAchieve_PacketID_name, ValidateAchieve_PacketID_value)
	proto.RegisterEnum("PegasusUtil.ValidateAchieveResponse_PacketID", ValidateAchieveResponse_PacketID_name, ValidateAchieveResponse_PacketID_value)
}
